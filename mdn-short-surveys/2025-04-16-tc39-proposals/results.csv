Response ID,Time Started,Date Submitted,Referer,Decorators:Please rank these proposals in order of preference for inclusion in JavaScript,ESM phase imports:Please rank these proposals in order of preference for inclusion in JavaScript,Deferred module evaluation:Please rank these proposals in order of preference for inclusion in JavaScript,JSON.parse source text access:Please rank these proposals in order of preference for inclusion in JavaScript,Source phase imports:Please rank these proposals in order of preference for inclusion in JavaScript,Joint iteration:Please rank these proposals in order of preference for inclusion in JavaScript,Iterator sequence:Please rank these proposals in order of preference for inclusion in JavaScript,Please tell us more about how your top ranking option would help you as a developer
1,4/7/2025 17:53,4/7/2025 17:53,https://developer.mozilla.org/,1,4,7,6,5,3,2,
2,4/7/2025 17:59,4/7/2025 17:59,https://developer.mozilla.org/,,,,,,,,
3,4/7/2025 18:03,4/7/2025 18:03,https://developer.mozilla.org/,1,,,,,,,I'm more into the pipe operator
4,4/7/2025 18:03,4/7/2025 18:03,https://developer.mozilla.org/,,,,,,,,
5,4/7/2025 18:06,4/7/2025 18:06,https://developer.mozilla.org/,7,5,4,3,6,1,2,"More builtin iteration methods reduces the need to implement our own versions in every project, making code more consistent across codebases."
6,4/7/2025 18:08,4/7/2025 18:08,https://developer.mozilla.org/,3,5,2,1,4,7,6,
7,4/7/2025 18:11,4/7/2025 18:11,https://developer.mozilla.org/,7,1,5,2,6,4,3,
8,4/7/2025 18:11,4/7/2025 18:11,https://developer.mozilla.org/,1,,,,,3,2,
9,4/7/2025 18:17,4/7/2025 18:17,https://developer.mozilla.org/,2,7,6,3,5,1,4,
10,4/7/2025 18:19,4/7/2025 18:19,https://developer.mozilla.org/,5,7,4,3,6,1,2,
11,4/7/2025 18:19,4/7/2025 18:19,https://developer.mozilla.org/,3,7,4,6,5,2,1,
12,4/7/2025 18:21,4/7/2025 18:21,https://developer.mozilla.org/,7,4,5,3,1,6,2,Bundlers are annoying to work with so improving the ease of bundling would hopefully resolve many of those pain points
13,4/7/2025 18:21,4/7/2025 18:21,https://developer.mozilla.org/,3,7,4,2,6,1,5,
14,4/7/2025 18:22,4/7/2025 18:22,https://developer.mozilla.org/,,,,,,,,
15,4/7/2025 18:27,4/7/2025 18:27,https://developer.mozilla.org/,6,5,4,2,3,7,1,
16,4/7/2025 18:30,4/7/2025 18:30,https://developer.mozilla.org/,4,7,3,5,6,1,2,
17,4/7/2025 18:34,4/7/2025 18:34,https://developer.mozilla.org/,1,6,4,2,3,5,7,Learning
18,4/7/2025 18:39,4/7/2025 18:39,https://developer.mozilla.org/,3,6,7,4,5,1,2,"zip is very useful, a lot of times, I have two sequences of HTMLCollections that are similar and should be looped through with zip"
19,4/7/2025 18:45,4/7/2025 18:45,https://developer.mozilla.org/,4,,,3,,2,1,
20,4/7/2025 18:47,4/7/2025 18:47,https://developer.mozilla.org/,,,,,,,,
21,4/7/2025 18:50,4/7/2025 18:50,https://developer.mozilla.org/,7,2,6,3,1,4,5,Better WASM support would be great.
22,4/7/2025 18:52,4/7/2025 18:52,https://developer.mozilla.org/,1,7,4,2,6,5,3,
23,4/7/2025 18:53,4/7/2025 18:53,https://developer.mozilla.org/,,,,2,1,,,
24,4/7/2025 18:54,4/7/2025 18:54,https://developer.mozilla.org/,1,5,4,2,3,7,6,
25,4/7/2025 18:55,4/7/2025 18:55,https://developer.mozilla.org/,,,,,,,,"The two iterator proposals solve existing workarounds I face daily, so they are at the top of my list.  Anything that reduces load bottlenecks gets my vote but I am not sure I understand the two ""phase"" proposals.  "
26,4/7/2025 18:56,4/7/2025 18:56,https://developer.mozilla.org/,3,5,7,4,6,2,1,
27,4/7/2025 18:57,4/7/2025 18:57,https://developer.mozilla.org/,1,6,7,3,5,2,4,"considering the impacts in practical projects base on my experience, it will make few works easy in programming life"
28,4/7/2025 18:58,4/7/2025 18:58,https://developer.mozilla.org/,1,5,2,6,3,4,7,
29,4/7/2025 19:03,4/7/2025 19:03,https://developer.mozilla.org/,1,3,4,2,5,7,6,
30,4/7/2025 19:04,4/7/2025 19:04,https://developer.mozilla.org/,1,,,,,,,"Angular uses decorators heavily, and it would be nice to have them be standardized at the language level. They're really nice for readability, and once/if they become standardized we will likely see more widespread adoption."
31,4/7/2025 19:07,4/7/2025 19:07,https://developer.mozilla.org/,3,2,4,7,1,5,6,
32,4/7/2025 19:09,4/7/2025 19:09,https://developer.mozilla.org/,,,2,,,1,,
33,4/7/2025 19:11,4/7/2025 19:11,https://developer.mozilla.org/,1,6,5,2,7,3,4,
34,4/7/2025 19:14,4/7/2025 19:14,https://developer.mozilla.org/,1,5,3,7,6,4,2,
35,4/7/2025 19:19,4/7/2025 19:19,https://developer.mozilla.org/,1,5,2,6,4,3,7,
36,4/7/2025 19:24,4/7/2025 19:24,https://developer.mozilla.org/,1,2,4,7,3,5,6,
37,4/7/2025 19:31,4/7/2025 19:31,https://developer.mozilla.org/,,,,,,,,
38,4/7/2025 19:33,4/7/2025 19:33,https://developer.mozilla.org/,,,,,,1,,
39,4/7/2025 19:34,4/7/2025 19:34,https://developer.mozilla.org/,3,5,7,4,6,1,2,
40,4/7/2025 19:34,4/7/2025 19:34,https://developer.mozilla.org/,,,,,,,,
41,4/7/2025 19:34,4/7/2025 19:35,https://developer.mozilla.org/,1,,2,,,,,"native support of decorators means less generated code from languages like typescript, particularly when using decorator-heavy frameworks like Lit"
42,4/7/2025 19:38,4/7/2025 19:38,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,6,4,2,7,5,3,"I've been using proposed decorators for nearly three years by now, and they're beyond useful, notably to nicely collect many classes into collections without using Typescript."
43,4/7/2025 19:40,4/7/2025 19:40,https://developer.mozilla.org/,1,2,6,3,4,5,7,"I use decorators the most, I dont use / havenot heard of others..."
44,4/7/2025 19:44,4/7/2025 19:44,https://developer.mozilla.org/,,,,,,,,It's preferences as just application developer.
45,4/7/2025 19:45,4/7/2025 19:45,https://developer.mozilla.org/,5,1,3,2,4,6,7,
46,4/7/2025 19:46,4/7/2025 19:46,https://developer.mozilla.org/,,,,,,,,
47,4/7/2025 19:52,4/7/2025 19:52,https://developer.mozilla.org/,,,,,,,,
48,4/7/2025 19:54,4/7/2025 19:54,https://developer.mozilla.org/,,,,,,,,
49,4/7/2025 19:57,4/7/2025 19:57,https://developer.mozilla.org/,1,6,5,4,7,2,3,
50,4/7/2025 19:58,4/7/2025 19:58,https://developer.mozilla.org/,3,7,2,5,4,1,6,We want decorators like other languages. Rest are as it was listed
51,4/7/2025 19:59,4/7/2025 19:59,https://developer.mozilla.org/,6,4,1,2,3,7,5,Being able to import everything from a library at the top and having to worry about performance problems until you actually use something from that import and only for exactly what you use would be a huge timesaver and just a great syntax addition.
52,4/7/2025 20:02,4/7/2025 20:02,https://developer.mozilla.org/,5,7,1,6,4,3,2,
53,4/7/2025 20:03,4/7/2025 20:03,https://developer.mozilla.org/,,,,,,,,
54,4/7/2025 20:06,4/7/2025 20:06,https://developer.mozilla.org/,,4,2,1,,3,,
55,4/7/2025 20:10,4/7/2025 20:10,https://developer.mozilla.org/,5,2,1,4,3,6,7,"for me the most important ones are the ones related to import, it need improvement to make easy to import modules in diverse conditions"
56,4/7/2025 20:13,4/7/2025 20:13,https://developer.mozilla.org/,2,,,1,,4,3,"I'm a hobbyist programmer, and JSON definitely needs some help in the data types department, Having a canonical format for extra datatypes would be very nice"
57,4/7/2025 20:15,4/7/2025 20:15,https://developer.mozilla.org/,1,7,2,4,6,5,3,
58,4/7/2025 20:18,4/7/2025 20:18,https://developer.mozilla.org/,1,6,5,2,7,4,3,"Decorators are a great way to reduce repeated code, and auto-accessors are better than the get x, set x, #x triplet"
59,4/7/2025 20:21,4/7/2025 20:21,https://developer.mozilla.org/,7,2,4,6,3,5,1,I expect this behavior to exist because I'm used to it existing in other languages I use.  I hate having to dig out and adapt code I've written before (including tests). It's 2025. Make it work.
60,4/7/2025 20:25,4/7/2025 20:25,https://developer.mozilla.org/,1,3,5,2,4,7,6,
61,4/7/2025 20:27,4/7/2025 20:27,https://developer.mozilla.org/,1,4,2,5,3,6,7,
62,4/7/2025 20:27,4/7/2025 20:27,https://developer.mozilla.org/,7,1,3,4,6,5,2,
63,4/7/2025 20:27,4/7/2025 20:27,https://developer.mozilla.org/,1,4,6,3,5,7,2,
64,4/7/2025 20:33,4/7/2025 20:33,https://developer.mozilla.org/,1,5,2,6,3,7,4,
65,4/7/2025 20:35,4/7/2025 20:35,https://developer.mozilla.org/,,,,,,,,
66,4/7/2025 20:35,4/7/2025 20:35,https://developer.mozilla.org/,7,6,1,2,5,3,4,
67,4/7/2025 20:36,4/7/2025 20:36,https://developer.mozilla.org/,,,,,,,,
68,4/7/2025 20:41,4/7/2025 20:41,https://developer.mozilla.org/,2,6,4,1,7,3,5,
69,4/7/2025 20:41,4/7/2025 20:41,https://developer.mozilla.org/,,,1,,,,,
70,4/7/2025 20:44,4/7/2025 20:44,https://developer.mozilla.org/,1,7,4,5,3,6,2,
71,4/7/2025 20:44,4/7/2025 20:44,https://developer.mozilla.org/,,,,,,,,
72,4/7/2025 20:45,4/7/2025 20:45,https://developer.mozilla.org/,1,5,7,4,3,2,6,
73,4/7/2025 20:49,4/7/2025 20:49,https://developer.mozilla.org/,2,,1,,3,,,
74,4/7/2025 20:51,4/7/2025 20:51,https://developer.mozilla.org/,7,6,3,1,5,4,2,
75,4/7/2025 20:54,4/7/2025 20:54,https://developer.mozilla.org/,2,1,5,4,3,,,
76,4/7/2025 20:54,4/7/2025 20:54,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,6,4,7,2,5,1,3,
77,4/7/2025 20:56,4/7/2025 20:56,https://developer.mozilla.org/,1,3,4,2,5,7,6,
78,4/7/2025 21:01,4/7/2025 21:01,https://developer.mozilla.org/,2,,1,,,,,optimizations
79,4/7/2025 21:02,4/7/2025 21:02,https://developer.mozilla.org/,4,5,6,1,2,7,3,
80,4/7/2025 21:02,4/7/2025 21:02,https://developer.mozilla.org/,1,5,7,4,6,2,3,"i also have experience in python, and there decorators can often lead to a very clear and concise code as an app writer. quick example for a good use case would be FastAPI."
81,4/7/2025 21:05,4/7/2025 21:05,https://developer.mozilla.org/,6,4,5,7,3,1,2,
82,4/7/2025 21:10,4/7/2025 21:10,https://developer.mozilla.org/,5,,2,4,3,,1,
83,4/7/2025 21:14,4/7/2025 21:14,https://developer.mozilla.org/,3,2,1,6,7,4,5,
84,4/7/2025 21:14,4/7/2025 21:14,https://developer.mozilla.org/,,,,,,,,
85,4/7/2025 21:16,4/7/2025 21:16,https://developer.mozilla.org/,1,5,6,4,7,3,2,
86,4/7/2025 21:17,4/7/2025 21:17,https://developer.mozilla.org/,1,6,2,5,7,3,4,"I prefer decorators for creating custom elements, but have avoided using them until they become an official JS feature."
87,4/7/2025 21:22,4/7/2025 21:22,https://developer.mozilla.org/,1,7,4,5,6,2,3,
88,4/7/2025 21:22,4/7/2025 21:22,https://developer.mozilla.org/,7,4,6,2,3,1,5,
89,4/7/2025 21:23,4/7/2025 21:23,https://developer.mozilla.org/,1,,2,,,,,
90,4/7/2025 21:25,4/7/2025 21:25,https://developer.mozilla.org/,,,,,,,,
91,4/7/2025 21:26,4/7/2025 21:26,https://developer.mozilla.org/,4,1,3,7,2,6,5,
92,4/7/2025 21:26,4/7/2025 21:26,https://developer.mozilla.org/,,,,,,,,
93,4/7/2025 21:29,4/7/2025 21:29,https://developer.mozilla.org/,,,,1,,2,3,
94,4/7/2025 21:33,4/7/2025 21:33,https://developer.mozilla.org/,1,6,2,4,7,5,3,
95,4/7/2025 21:34,4/7/2025 21:34,https://developer.mozilla.org/,,,,,,,,
96,4/7/2025 21:37,4/7/2025 21:37,https://developer.mozilla.org/,7,4,2,1,3,6,5,
97,4/7/2025 21:40,4/7/2025 21:40,https://developer.mozilla.org/,3,5,4,7,1,6,2,
98,4/7/2025 21:43,4/7/2025 21:43,https://developer.mozilla.org/,1,4,5,3,2,7,6,
99,4/7/2025 21:45,4/7/2025 21:45,https://developer.mozilla.org/,,,,,,,,
100,4/7/2025 21:46,4/7/2025 21:46,https://developer.mozilla.org/,1,2,6,7,4,3,5,
101,4/7/2025 21:47,4/7/2025 21:47,https://developer.mozilla.org/,,,1,,,,,
102,4/7/2025 21:49,4/7/2025 21:49,https://developer.mozilla.org/,,,,,,,,
103,4/7/2025 21:52,4/7/2025 21:52,https://developer.mozilla.org/,1,5,4,6,7,3,2,
104,4/7/2025 21:55,4/7/2025 21:55,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,3,5,6,2,4,7,Memoization.
105,4/7/2025 21:59,4/7/2025 21:59,https://developer.mozilla.org/,,,,,,,,"I don't care about any of these proposals. Can you please add something useful, like integer arithmetic?"
106,4/7/2025 22:02,4/7/2025 22:02,https://developer.mozilla.org/,,,,,,,,
107,4/7/2025 22:14,4/7/2025 22:14,https://developer.mozilla.org/,2,4,1,7,5,6,3,
108,4/7/2025 22:15,4/7/2025 22:15,https://developer.mozilla.org/,,,,,,,,
109,4/7/2025 22:18,4/7/2025 22:18,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,7,5,3,6,4,2,1,
110,4/7/2025 22:20,4/7/2025 22:20,https://developer.mozilla.org/,1,,,,,,,Decorators would allow the best syntax for signals: ``` @state let x = 1 ```
111,4/7/2025 22:20,4/7/2025 22:20,https://developer.mozilla.org/,1,3,7,5,4,6,2,"Shorter codes, but suggestion docs seems bad"
112,4/7/2025 22:22,4/7/2025 22:22,https://developer.mozilla.org/,,,,,,,,Being able to more intuitively move data I'm working with around allows me to focus more on my solution and less on my syntax or verbosity
113,4/7/2025 22:24,4/7/2025 22:24,https://developer.mozilla.org/,5,2,4,1,6,3,7,
114,4/7/2025 22:25,4/7/2025 22:25,https://developer.mozilla.org/,5,4,2,1,6,7,3,
115,4/7/2025 22:26,4/7/2025 22:26,https://developer.mozilla.org/,7,1,2,6,3,5,4,
116,4/7/2025 22:31,4/7/2025 22:31,https://developer.mozilla.org/,,,,,,,,
117,4/7/2025 22:33,4/7/2025 22:33,https://developer.mozilla.org/,1,4,5,2,3,7,6,I am not passionate about any of these proposals.  Out of all the uninteresting proposals Decorators are the most interesting because I'm glad if there is one (baseline)standard that everyone adheres to.
118,4/7/2025 22:33,4/7/2025 22:33,https://developer.mozilla.org/,1,4,3,6,7,2,5,
119,4/7/2025 22:34,4/7/2025 22:34,https://developer.mozilla.org/,2,6,4,5,7,1,3,
120,4/7/2025 22:35,4/7/2025 22:35,https://developer.mozilla.org/,4,6,1,3,5,2,7,
121,4/7/2025 22:36,4/7/2025 22:36,https://developer.mozilla.org/,6,4,7,2,3,5,1,
122,4/7/2025 22:38,4/7/2025 22:38,https://developer.mozilla.org/,7,1,5,2,3,6,4,
123,4/7/2025 22:38,4/7/2025 22:38,https://developer.mozilla.org/,2,3,,1,,,,
124,4/7/2025 22:39,4/7/2025 22:39,https://developer.mozilla.org/,4,1,5,3,2,6,7,
125,4/7/2025 22:41,4/7/2025 22:41,https://developer.mozilla.org/,1,6,5,2,7,4,3,
126,4/7/2025 22:41,4/7/2025 22:41,https://developer.mozilla.org/,2,5,4,3,6,7,1,
127,4/7/2025 22:41,4/7/2025 22:41,https://developer.mozilla.org/,5,7,3,4,6,2,1,"A lot of common list-processing tasks are very convenient to express as iterators and generators, but it still feels like an incomplete set of tools. More functionality seems like it would help adoption overall."
128,4/7/2025 22:43,4/7/2025 22:43,https://developer.mozilla.org/,1,3,4,5,2,7,6,"I don't see too many use cases for some of these in my current work, except for decorators which i've always quite liked. Saying that I can absolutely see the advantage of being able to more intelligently load things across the network. "
129,4/7/2025 22:44,4/7/2025 22:44,https://developer.mozilla.org/,4,1,2,7,5,6,3,"There are more urgent things and I think browser vendors (like Apple) should first keep up with current standards (Video/Audio Decoder, MMSource improvement, etc.)"
130,4/7/2025 22:45,4/7/2025 22:45,https://developer.mozilla.org/,1,3,5,2,4,6,7,
131,4/7/2025 22:47,4/7/2025 22:47,https://developer.mozilla.org/,1,6,5,7,4,2,3,
132,4/7/2025 22:48,4/7/2025 22:48,https://developer.mozilla.org/,,,,,,,,
133,4/7/2025 22:49,4/7/2025 22:49,https://developer.mozilla.org/,2,1,7,3,5,6,4,Yes 
134,4/7/2025 22:53,4/7/2025 22:53,https://developer.mozilla.org/,1,4,5,3,2,6,7,
135,4/7/2025 22:55,4/7/2025 22:55,https://developer.mozilla.org/,,,,,,,,
136,4/7/2025 22:56,4/7/2025 22:56,https://developer.mozilla.org/,1,,2,,,3,,
137,4/7/2025 22:57,4/7/2025 22:57,https://developer.mozilla.org/,,,,,,,,
138,4/7/2025 23:00,4/7/2025 23:00,https://developer.mozilla.org/,4,6,7,3,5,2,1,
139,4/7/2025 23:00,4/7/2025 23:00,https://developer.mozilla.org/,,,,,,,,"1: We need a syntactic sugar for an easy forloop like  for( k 1..30..5 ){  ...  }  (means make a forlloop with variable k from 1 to 30 with step 5) ...or... for( k 30...1..-5 ){  ...  } (make same only backwards)   2: We need for Javascript , NODEand DENO a commandline debugger tool like GDB (like for C/C++ or other prog languages) in vim style and haptic , clean,robust and small without any color gimmicks  (only text)  3: Nowadays there is an exaggeration with async stuff. We  nedd more examples for Synchronous and blocking stuff mode in the  NODE and DENO docs .  4: We need a library forinteractive  keyinput like kbhit for interaktive user input without to confirm always with ENTER (RETURN) key. !!! only keycodes)"
140,4/7/2025 23:01,4/7/2025 23:01,https://developer.mozilla.org/,,,,,,,,It helps to understand faster new material and create user-friendly interfaces
141,4/7/2025 23:01,4/7/2025 23:01,https://developer.mozilla.org/,7,5,4,3,6,1,2,"almost none of them seem very exiting to me since i don't like iterators with their yield syntax that much, nor do i use alot of big modules that i have to load, since i don't use any frameworks like React and i also like to write stuff myself."
142,4/7/2025 23:03,4/7/2025 23:03,https://developer.mozilla.org/,,,,,,,,"Often times I've had the need to reuse some ""preprocessing"" logic for properties in my frontend code for logic like validation where there is a lot of repeated logic aside from the validation itself."
143,4/7/2025 23:04,4/7/2025 23:04,https://developer.mozilla.org/,1,,,,,,,"I come from java spring boot world and while most of the decorators seem like magic, they sometimes are useful to share some common behaviour. If used sparingly and reasonably I believe they can remove some boilerplate and be really handy. When it comes to the rest of the options, I don't see much value in them for me particularly."
144,4/7/2025 23:05,4/7/2025 23:05,https://developer.mozilla.org/,1,2,4,5,3,7,6,decorator is helpful
145,4/7/2025 23:07,4/7/2025 23:07,https://developer.mozilla.org/,,,,,,,,"Module importing is a nightmare, especially when you're trying to build a package that supports multiple platforms. "
146,4/7/2025 23:08,4/7/2025 23:08,https://developer.mozilla.org/,1,6,7,3,5,4,2,
147,4/7/2025 23:09,4/7/2025 23:09,https://developer.mozilla.org/,1,3,5,7,2,4,6,
148,4/7/2025 23:12,4/7/2025 23:12,https://developer.mozilla.org/,5,4,6,7,3,1,2,
149,4/7/2025 23:14,4/7/2025 23:14,https://developer.mozilla.org/,1,5,3,2,,4,6,
150,4/7/2025 23:14,4/7/2025 23:14,https://developer.mozilla.org/,6,3,2,1,7,5,4,"It's very often when I need to (de)serialize floats, BigInt, and more complex types from json payload. It's common my code has to parse through json string several times to fully parse data in correct format. Having an option to utilize the buildin json.parse in any way would surely make my code more readable and maintainable."
151,4/7/2025 23:18,4/7/2025 23:18,https://developer.mozilla.org/,4,6,5,3,7,2,1,
152,4/7/2025 23:19,4/7/2025 23:19,https://developer.mozilla.org/,1,7,3,2,6,4,5,Decorators and lossless JSON Date and BigInt processing would significantly improve working on complex projects.
153,4/7/2025 23:21,4/7/2025 23:21,https://developer.mozilla.org/,1,6,2,5,7,4,3,
154,4/7/2025 23:23,4/7/2025 23:23,https://developer.mozilla.org/,6,3,5,7,4,1,2,
155,4/7/2025 23:24,4/7/2025 23:24,https://developer.mozilla.org/,5,7,6,1,4,3,2,
156,4/7/2025 23:24,4/7/2025 23:24,https://developer.mozilla.org/,2,6,5,3,7,1,4,
157,4/7/2025 23:24,4/7/2025 23:24,https://developer.mozilla.org/,1,6,5,4,7,3,2,
158,4/7/2025 23:25,4/7/2025 23:25,https://developer.mozilla.org/,2,3,1,5,4,6,7,
159,4/7/2025 23:26,4/7/2025 23:26,https://developer.mozilla.org/,1,7,6,3,2,5,4,
160,4/7/2025 23:27,4/7/2025 23:27,https://developer.mozilla.org/,1,,,,,,,
161,4/7/2025 23:27,4/7/2025 23:27,https://developer.mozilla.org/,,,,,,,,
162,4/7/2025 23:29,4/7/2025 23:29,https://developer.mozilla.org/,5,1,7,3,2,4,6,
163,4/7/2025 23:29,4/7/2025 23:29,https://developer.mozilla.org/,,,,,,,,
164,4/7/2025 23:29,4/7/2025 23:29,https://developer.mozilla.org/,4,3,1,5,6,7,2,
165,4/7/2025 23:29,4/7/2025 23:29,https://developer.mozilla.org/,7,2,3,4,1,6,5,"1 Source Phase Imports and 2 ESM Phase Imports improve the basics and a lot of developers and end-users would benefit from it.  Same with 3, but it's less important for me.  4,5,6 I don't particularly care about  7 I dislike decorators, they tend to produce complex, hard to reason about projects"
166,4/7/2025 23:30,4/7/2025 23:30,https://developer.mozilla.org/,3,6,1,4,7,2,5,
167,4/7/2025 23:30,4/7/2025 23:30,https://developer.mozilla.org/,4,2,3,7,1,6,5,
168,4/7/2025 23:32,4/7/2025 23:32,https://developer.mozilla.org/,,,,,,,,
169,4/7/2025 23:32,4/7/2025 23:32,https://developer.mozilla.org/,,,,,,,,
170,4/7/2025 23:32,4/7/2025 23:32,https://developer.mozilla.org/,2,5,1,4,3,7,6,
171,4/7/2025 23:32,4/7/2025 23:32,https://developer.mozilla.org/,7,4,3,1,2,6,5,"When calling JSON.parse when receiving a response from a server, the data types are lost. "
172,4/7/2025 23:34,4/7/2025 23:34,https://developer.mozilla.org/,,,,,,,,
173,4/7/2025 23:36,4/7/2025 23:36,https://developer.mozilla.org/,,,,,,,,
174,4/7/2025 23:38,4/7/2025 23:38,https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Manipulating_video_using_canvas,,,,,,,,
175,4/7/2025 23:39,4/7/2025 23:39,https://developer.mozilla.org/,1,6,7,2,5,3,4,
176,4/7/2025 23:41,4/7/2025 23:41,https://developer.mozilla.org/,,,,,,,,Decorators are common in most programming languages and it truly feels like a blind spot for JS.
177,4/7/2025 23:43,4/7/2025 23:43,https://developer.mozilla.org/,7,3,5,1,4,6,2,
178,4/7/2025 23:43,4/7/2025 23:43,https://developer.mozilla.org/,2,1,3,5,4,7,6,
179,4/7/2025 23:43,4/7/2025 23:43,https://developer.mozilla.org/,,,,3,,2,1,"Reduce the usage of ""raw for-loops"" for cleaner, less erroneous, code."
180,4/7/2025 23:43,4/7/2025 23:43,https://developer.mozilla.org/,2,4,1,5,3,6,7,
181,4/7/2025 23:44,4/7/2025 23:44,https://developer.mozilla.org/,1,7,5,3,6,4,2,
182,4/7/2025 23:46,4/7/2025 23:46,https://developer.mozilla.org/,4,6,5,1,7,3,2,"As a TypeScript dev, iterators deserve as much first-class support as C# LINQ does if not more."
183,4/7/2025 23:49,4/7/2025 23:49,https://developer.mozilla.org/,1,4,3,7,6,5,2,
184,4/7/2025 23:49,4/7/2025 23:49,https://developer.mozilla.org/,,,,,,,,
185,4/7/2025 23:50,4/7/2025 23:50,https://developer.mozilla.org/,5,6,4,1,7,3,2,
186,4/7/2025 23:50,4/7/2025 23:50,https://developer.mozilla.org/,1,7,6,5,4,2,3,
187,4/7/2025 23:52,4/7/2025 23:52,https://developer.mozilla.org/,5,4,2,6,3,1,7,"Great functionality already existing in other languages more collection oriented, reduces and clarifies code."
188,4/7/2025 23:53,4/7/2025 23:53,https://developer.mozilla.org/,,2,1,,,,,
189,4/7/2025 23:54,4/7/2025 23:54,https://developer.mozilla.org/,1,3,2,4,5,6,7,
190,4/7/2025 23:55,4/7/2025 23:55,https://developer.mozilla.org/,4,7,5,3,6,1,2,
191,4/7/2025 23:56,4/7/2025 23:56,https://developer.mozilla.org/,1,3,,,,,2,
192,4/7/2025 23:56,4/7/2025 23:56,https://developer.mozilla.org/,,,1,2,,,,
193,4/7/2025 23:56,4/7/2025 23:56,https://developer.mozilla.org/,3,1,6,4,2,7,5,
194,4/7/2025 23:59,4/7/2025 23:59,https://developer.mozilla.org/,4,2,3,1,6,7,5,
195,4/8/2025 0:00,4/8/2025 0:00,https://developer.mozilla.org/,1,3,5,2,6,7,4,
196,4/8/2025 0:00,4/8/2025 0:00,https://developer.mozilla.org/,7,5,3,6,4,2,1,
197,4/8/2025 0:00,4/8/2025 0:00,https://developer.mozilla.org/,1,6,3,2,7,4,5,It would allow me to reduce code repetitions and make my code more tidy.
198,4/8/2025 0:02,4/8/2025 0:02,https://developer.mozilla.org/,1,4,2,3,5,6,7,
199,4/8/2025 0:05,4/8/2025 0:05,https://developer.mozilla.org/,1,6,5,2,7,4,3,I don't even know how to code but decorators will make me look smarter. Like it's a real programming language like java
200,4/8/2025 0:09,4/8/2025 0:09,https://developer.mozilla.org/,1,6,5,7,4,2,3,Smaller bundle size and better code reuse
201,4/8/2025 0:11,4/8/2025 0:11,https://developer.mozilla.org/,,,,3,,2,1,Just convenience.  I don't really feel strongly about these.
202,4/8/2025 0:11,4/8/2025 0:11,https://developer.mozilla.org/,1,4,6,7,5,2,3,
203,4/8/2025 0:12,4/8/2025 0:12,https://developer.mozilla.org/,3,7,6,4,5,2,1,
204,4/8/2025 0:13,4/8/2025 0:13,https://developer.mozilla.org/,,,,,,,,
205,4/8/2025 0:14,4/8/2025 0:14,https://developer.mozilla.org/,1,4,7,6,5,3,2,
206,4/8/2025 0:14,4/8/2025 0:14,https://developer.mozilla.org/,1,,4,5,,3,2,
207,4/8/2025 0:15,4/8/2025 0:15,https://developer.mozilla.org/,6,7,5,2,3,4,1,
208,4/8/2025 0:16,4/8/2025 0:16,https://developer.mozilla.org/,1,4,3,7,5,6,2,Having decorators allows me to abstract away additional behaviors for classes / functions / etc. Applying multiple decorators  helps to compose behaviors in a non-OOP fashion.
209,4/8/2025 0:16,4/8/2025 0:16,https://developer.mozilla.org/,5,7,2,1,6,4,3,...
210,4/8/2025 0:17,4/8/2025 0:17,https://developer.mozilla.org/,,,,,,,,
211,4/8/2025 0:17,4/8/2025 0:17,https://developer.mozilla.org/,1,4,5,7,6,2,3,
212,4/8/2025 0:19,4/8/2025 0:19,https://developer.mozilla.org/,,,1,,,,,less async code
213,4/8/2025 0:20,4/8/2025 0:20,https://developer.mozilla.org/,1,7,6,4,5,2,3,
214,4/8/2025 0:21,4/8/2025 0:21,https://developer.mozilla.org/,3,1,4,5,6,,2,
215,4/8/2025 0:21,4/8/2025 0:21,https://developer.mozilla.org/,6,2,5,7,1,3,4,I would love to use wasm more easily without having to use a bundler!
216,4/8/2025 0:22,4/8/2025 0:22,https://developer.mozilla.org/,4,7,1,5,6,2,3,
217,4/8/2025 0:22,4/8/2025 0:22,https://developer.mozilla.org/,3,5,1,2,6,7,4,"Honestly, except for my top 3, all the other will probably almost never impact my work as a web dev."
218,4/8/2025 0:25,4/8/2025 0:25,https://developer.mozilla.org/,7,3,5,1,2,4,6,
219,4/8/2025 0:29,4/8/2025 0:29,https://developer.mozilla.org/,1,4,6,7,5,3,2,
220,4/8/2025 0:30,4/8/2025 0:30,https://developer.mozilla.org/,6,2,7,3,5,1,4,IT WILL REALLY HELP
221,4/8/2025 0:30,4/8/2025 0:30,https://developer.mozilla.org/,1,7,5,2,6,4,3,
222,4/8/2025 0:31,4/8/2025 0:31,https://developer.mozilla.org/,6,5,1,4,7,3,2,It is much needed optimisation.
223,4/8/2025 0:33,4/8/2025 0:33,https://developer.mozilla.org/,7,3,2,5,6,4,1,"I love any improvements which allow for more functional programming in JS, and being able to operate on iterators like with arrays would result in me using them more, which would most likely improve performance."
224,4/8/2025 0:33,4/8/2025 0:33,https://developer.mozilla.org/,1,2,4,7,3,6,5,
225,4/8/2025 0:33,4/8/2025 0:33,https://developer.mozilla.org/,5,7,3,4,6,2,1,
226,4/8/2025 0:34,4/8/2025 0:34,https://developer.mozilla.org/,1,7,6,5,3,4,2,"I found the @decorator construct a very helpful feature of Pyhton, and as I understand this is not the same I feel that this feature may help in some cases where a more object oriented JS approach is used (especially in a larger code base)"
227,4/8/2025 0:35,4/8/2025 0:35,https://developer.mozilla.org/,4,1,3,7,6,5,2,
228,4/8/2025 0:37,4/8/2025 0:37,https://developer.mozilla.org/,6,2,4,5,3,1,,
229,4/8/2025 0:39,4/8/2025 0:39,https://developer.mozilla.org/,4,1,3,7,2,5,6,
230,4/8/2025 0:39,4/8/2025 0:39,https://developer.mozilla.org/,4,7,6,3,5,1,2,
231,4/8/2025 0:40,4/8/2025 0:40,https://developer.mozilla.org/,2,1,5,3,4,7,6,
232,4/8/2025 0:44,4/8/2025 0:44,https://developer.mozilla.org/,1,5,7,4,6,2,3,using proxy pattern or template pattern more efficiently
233,4/8/2025 0:44,4/8/2025 0:44,https://developer.mozilla.org/,5,7,3,4,6,1,2,
234,4/8/2025 0:46,4/8/2025 0:46,https://developer.mozilla.org/,,,,,,2,1,"make me able to use arrow syntax for normal function too, if i want; like: function aaa(x)=>x+1; ergo, make me able to replace {return exp;} with =>exp; where ever it can have sense;"
235,4/8/2025 0:47,4/8/2025 0:47,https://developer.mozilla.org/,7,3,6,5,4,1,2,I would save time and make things more readable .
236,4/8/2025 0:49,4/8/2025 0:49,https://developer.mozilla.org/,,,,,,,,
237,4/8/2025 0:49,4/8/2025 0:49,https://developer.mozilla.org/,6,7,5,1,4,2,3,To gain valuable knowledge 
238,4/8/2025 0:52,4/8/2025 0:52,https://developer.mozilla.org/,1,3,6,7,2,5,4,
239,4/8/2025 0:53,4/8/2025 0:53,https://developer.mozilla.org/,7,1,2,4,3,6,5,The most complex thing right now in web development is managing optimal bundle. So I've ranked the features from that perspective
240,4/8/2025 0:53,4/8/2025 0:53,https://developer.mozilla.org/,1,4,2,7,6,3,5,
241,4/8/2025 0:54,4/8/2025 0:54,https://developer.mozilla.org/,7,1,2,5,3,4,6,
242,4/8/2025 0:56,4/8/2025 0:56,https://developer.mozilla.org/,,,,,,,,
243,4/8/2025 0:56,4/8/2025 0:56,https://developer.mozilla.org/,,,,,,,,
244,4/8/2025 0:58,4/8/2025 0:58,https://developer.mozilla.org/,1,3,2,7,4,6,5,
245,4/8/2025 0:59,4/8/2025 0:59,https://developer.mozilla.org/,5,4,1,3,2,6,7,"I put the first 4 there, because they solve real problems. The last 3 is just stuff libraries like lodash can already do, and you can also implement them yourself very easily. I think the first 4 would advance the js ecosystem further. Also the latest and greatest syntax can't be used by most developers because they are stuck with old technologies in a legacy codebase, so they don't matter that much. "
246,4/8/2025 1:00,4/8/2025 1:00,https://developer.mozilla.org/,3,,,,,2,1,
247,4/8/2025 1:01,4/8/2025 1:01,https://developer.mozilla.org/,,,1,,,,,None of those things matter to me
248,4/8/2025 1:03,4/8/2025 1:03,https://developer.mozilla.org/,1,7,2,4,6,3,5,
249,4/8/2025 1:03,4/8/2025 1:03,https://developer.mozilla.org/,5,7,3,2,6,1,4,
250,4/8/2025 1:03,4/8/2025 1:03,https://developer.mozilla.org/,,,4,2,3,,1,"Compiled js would be nice to execution ready to deploy on to cluster without sending all my source code just using import source ""package_exe.com""  "
251,4/8/2025 1:04,4/8/2025 1:04,https://developer.mozilla.org/,4,6,5,1,7,2,3,
252,4/8/2025 1:04,4/8/2025 1:04,https://developer.mozilla.org/,,,,,,,,
253,4/8/2025 1:05,4/8/2025 1:05,https://developer.mozilla.org/,1,7,6,4,3,5,2,
254,4/8/2025 1:09,4/8/2025 1:09,https://developer.mozilla.org/,1,2,4,7,3,5,6,
255,4/8/2025 1:09,4/8/2025 1:09,https://developer.mozilla.org/,1,5,2,3,6,4,7,
256,4/8/2025 1:12,4/8/2025 1:12,https://developer.mozilla.org/,3,6,5,4,7,1,2,Please add more functional programming features :)
257,4/8/2025 1:13,4/8/2025 1:13,https://developer.mozilla.org/,1,,,,,,,
258,4/8/2025 1:13,4/8/2025 1:13,https://developer.mozilla.org/,1,6,4,7,5,2,3,really i'd just love to have decorators
259,4/8/2025 1:14,4/8/2025 1:14,https://developer.mozilla.org/,1,5,6,7,2,4,3,
260,4/8/2025 1:14,4/8/2025 1:14,https://developer.mozilla.org/,3,6,1,4,2,5,7,
261,4/8/2025 1:16,4/8/2025 1:16,https://developer.mozilla.org/,4,6,3,2,5,1,7,"It's exciting features. But not a lot in the sense that I don't personally use much of these.  I'd prefer more stuff proritized related to TypedArrays and GPU, although I see stuff coming (WebGPU.)  * Joint iteration seems a useful tool.  * JSON.parse will probably be handy for database requests, although I don't use it personally as much.  * I've seen decorators used extensively in Python, and Typescript.  That's very cool, but I don't think is a priority so I put it 4th. * Loading WASM modules directly seems useful for running compiled code from rust or C, probably for AI models, but I'm actually unsure how much faster WASM is; but I think it's probably worth.  Sorry for the long explanation. I hope some of it is useful. Thank you for improving the fantastic JS language :-) !"
262,4/8/2025 1:16,4/8/2025 1:16,https://developer.mozilla.org/,1,,,,,,2,
263,4/8/2025 1:17,4/8/2025 1:17,https://developer.mozilla.org/,2,5,1,4,3,6,7,
264,4/8/2025 1:18,4/8/2025 1:18,https://developer.mozilla.org/,5,4,6,7,3,2,1,
265,4/8/2025 1:19,4/8/2025 1:19,https://developer.mozilla.org/,,,,,,,,
266,4/8/2025 1:20,4/8/2025 1:20,https://developer.mozilla.org/,4,2,7,5,1,6,3,"To be perfectly candid, I do not use any of these frequently. If any of these were added I would not notice a huge difference. However, I do think WASM will play an ever more important role, so making JS more friendly would be helpful."
267,4/8/2025 1:21,4/8/2025 1:21,https://developer.mozilla.org/,2,3,4,5,1,6,7,
268,4/8/2025 1:22,4/8/2025 1:22,https://developer.mozilla.org/,4,1,7,2,3,6,5,It would allow for much more aggressive caching of web worker scripts (since their filenames could be hashed).
269,4/8/2025 1:22,4/8/2025 1:22,https://developer.mozilla.org/,1,3,7,2,4,5,6,
270,4/8/2025 1:23,4/8/2025 1:23,https://developer.mozilla.org/,7,2,3,1,6,4,5,
271,4/8/2025 1:25,4/8/2025 1:25,https://developer.mozilla.org/,,,3,,2,,1,"I don't see myself using most of these features, I'm writing user facing websites in nuxt.   i think iterator sequence may be the most useful one"
272,4/8/2025 1:26,4/8/2025 1:26,https://developer.mozilla.org/,1,5,3,4,2,6,7,
273,4/8/2025 1:27,4/8/2025 1:27,https://developer.mozilla.org/,5,7,1,2,6,3,4,
274,4/8/2025 1:30,4/8/2025 1:30,https://developer.mozilla.org/,,,,,,,,it is a very interesting document and easy for understand  !!
275,4/8/2025 1:33,4/8/2025 1:33,https://developer.mozilla.org/,,,Blogger,,,,,
276,4/8/2025 1:35,4/8/2025 1:35,https://developer.mozilla.org/,2,6,5,4,7,3,1,
277,4/8/2025 1:37,4/8/2025 1:37,https://developer.mozilla.org/,1,2,3,6,5,7,4,
278,4/8/2025 1:37,4/8/2025 1:37,https://developer.mozilla.org/,7,2,1,5,6,4,3,Potentially better performance for code splitting and less pitfalls when importing big bundles.
279,4/8/2025 1:44,4/8/2025 1:44,https://developer.mozilla.org/,5,6,7,4,3,1,2,
280,4/8/2025 1:44,4/8/2025 1:44,https://developer.mozilla.org/,1,,,,,,,Maybe just decorators but don't feel the need for any of these features
281,4/8/2025 1:45,4/8/2025 1:45,https://developer.mozilla.org/,7,6,5,1,3,2,4,JSON.parse is very useful but has problems.
282,4/8/2025 1:46,4/8/2025 1:46,https://developer.mozilla.org/,1,3,6,4,2,5,7,
283,4/8/2025 1:46,4/8/2025 1:46,https://developer.mozilla.org/,,,,,,,,
284,4/8/2025 1:47,4/8/2025 1:47,https://developer.mozilla.org/,1,3,7,6,2,5,4,
285,4/8/2025 1:47,4/8/2025 1:47,https://developer.mozilla.org/,1,6,3,5,7,4,2,
286,4/8/2025 1:48,4/8/2025 1:48,https://developer.mozilla.org/,3,6,4,5,7,1,2,
287,4/8/2025 1:48,4/8/2025 1:48,https://developer.mozilla.org/,2,6,1,7,3,4,5,
288,4/8/2025 1:48,4/8/2025 1:48,https://developer.mozilla.org/,1,7,5,2,6,4,3,Hopefully with Decoraters the Angular/TypeScript syntax can be aligned with the standard.  More Iterator utilities are always welcome!
289,4/8/2025 1:50,4/8/2025 1:50,https://developer.mozilla.org/,,,,,,,,"Iterator sequencing would help with more expressive use of iterators, and allow efficient iteration as well like in haskell."
290,4/8/2025 1:51,4/8/2025 1:51,https://developer.mozilla.org/,3,5,7,1,6,2,4,
291,4/8/2025 1:51,4/8/2025 1:51,https://developer.mozilla.org/,,2,1,,,,,more performance better
292,4/8/2025 1:51,4/8/2025 1:51,https://developer.mozilla.org/,1,,,2,,4,3,separation of cross-cutting concerns; code reuse instead of copy-and-paste
293,4/8/2025 1:52,4/8/2025 1:52,https://developer.mozilla.org/,3,1,2,6,4,7,5,
294,4/8/2025 1:53,4/8/2025 1:53,https://developer.mozilla.org/,3,6,5,4,7,1,2,
295,4/8/2025 1:55,4/8/2025 1:55,https://developer.mozilla.org/,1,5,7,4,6,2,3,
296,4/8/2025 1:58,4/8/2025 1:58,https://developer.mozilla.org/,1,,,,2,,,
297,4/8/2025 1:59,4/8/2025 1:59,https://developer.mozilla.org/,2,1,,,,,,
298,4/8/2025 2:00,4/8/2025 2:00,https://developer.mozilla.org/,1,4,3,5,2,7,6,"metaprogramming with decorators provides so many more options for designing apis for libraries, and makes a lot of code much more maintainable. ive mostly used it in server side applications for eg defining database schemas and route handlers, but really any situation where you are repeatedly creating similar things. just wish they could be applied to regular functions, not just methods"
299,4/8/2025 2:01,4/8/2025 2:01,https://developer.mozilla.org/,1,7,5,2,6,4,3,
300,4/8/2025 2:02,4/8/2025 2:02,https://developer.mozilla.org/,,,,,,,,"iterators are very powerful and having standard building blocks makes it more attractive to use them (see e.g. python and rust)  fancier json may be useful, but serious apps would likely use actual validation libraries like valibot/zod."
301,4/8/2025 2:03,4/8/2025 2:03,https://developer.mozilla.org/,1,7,5,4,6,3,2,
302,4/8/2025 2:03,4/8/2025 2:03,https://developer.mozilla.org/,1,4,3,2,5,7,6,"I like the use of Typescript decorators and would like to see them in Javascript, the JSON parse seems useful too, i havent heard of the rest of the options, after short lecture about them i dont see the need for them, would love to see the go like async return instead of try catch"
303,4/8/2025 2:05,4/8/2025 2:05,https://developer.mozilla.org/,7,6,2,3,1,5,4,
304,4/8/2025 2:05,4/8/2025 2:05,https://developer.mozilla.org/,1,6,7,3,5,2,4,"I don't need more node.js module stuff, we have enough of them. we need syntactical improvements like iterators and real data types etc."
305,4/8/2025 2:06,4/8/2025 2:06,https://developer.mozilla.org/,2,4,3,7,5,6,1,
306,4/8/2025 2:08,4/8/2025 2:08,https://developer.mozilla.org/,3,2,4,1,7,5,6,
307,4/8/2025 2:08,4/8/2025 2:08,https://developer.mozilla.org/,4,,2,1,,5,3,Being able to serialize BigInt values into JSON would help greatly with returning database results from an API - Deferred module evaluation would help with things like CLI tools where each subcommand is a separate module with some initialization/side-effects.
308,4/8/2025 2:10,4/8/2025 2:10,https://developer.mozilla.org/,2,3,4,,1,,,"for something like this without build time by doing jit transform ```html < form action=/yeeha>   < unsupported type=unsupported>     import { doSomething } from ""./somewhat.ts""      assert(scope.id == ""me"")     scope.onsubmit = e => {       e.preventDefault()       doSomething(e.submitter)     }   < /unsupported>    < button>Submit< /button> < /form> ```"
309,4/8/2025 2:12,4/8/2025 2:12,https://developer.mozilla.org/,1,5,2,4,3,7,6,
310,4/8/2025 2:14,4/8/2025 2:14,https://developer.mozilla.org/,1,5,3,2,4,6,7,"I want to work with ORMs that handle database < -> js class mapping seamlessly, but current implementations require clunky typescript behaviors and don't work well in many cases. Adding the decorators proposal resolves issues with ORMs in an elegant and effective manner."
311,4/8/2025 2:17,4/8/2025 2:17,https://developer.mozilla.org/,2,,4,,,3,1,"No more having to `Array.from().concat(Array.from()`… or ``` for (const [key, value] of …) {} for (const [key, value] of …) {} ```  Instead being able to do ``` for (const [key, value] of Iterator.concat(…)) {} ``` looks like a major readability and security boon to me. With great potential for performance and memory optimisations.  Although, I would've personally preferred `for (const [key, value] of iterable1, iterable2) {}` syntactically."
312,4/8/2025 2:17,4/8/2025 2:17,https://developer.mozilla.org/,3,2,4,7,1,5,6,
313,4/8/2025 2:18,4/8/2025 2:18,https://developer.mozilla.org/,1,,2,,,,3,
314,4/8/2025 2:18,4/8/2025 2:18,https://developer.mozilla.org/,7,6,4,5,2,1,3,
315,4/8/2025 2:19,4/8/2025 2:19,https://developer.mozilla.org/,,,,,,,,
316,4/8/2025 2:19,4/8/2025 2:19,https://developer.mozilla.org/,4,7,1,5,6,2,3,
317,4/8/2025 2:20,4/8/2025 2:20,https://developer.mozilla.org/,5,1,6,7,2,4,3,
318,4/8/2025 2:23,4/8/2025 2:23,https://developer.mozilla.org/,6,5,1,7,4,3,2,"deferred module evaluation: helps with cold start times  iterator stuff seems like an easy thing to add and like a no brainer. Iterators are an underused feature imo (mainly due to perf concerns and missing knowledge)  source phase stuff seems very useful for workers, but I don't use workers that much  ranked decorators + json parse source text access last, because I don't care about these."
319,4/8/2025 2:25,4/8/2025 2:25,https://developer.mozilla.org/,6,2,4,3,1,5,7,
320,4/8/2025 2:27,4/8/2025 2:27,https://developer.mozilla.org/,1,2,5,7,3,4,6,
321,4/8/2025 2:28,4/8/2025 2:28,https://developer.mozilla.org/,1,3,4,2,7,5,6,
322,4/8/2025 2:29,4/8/2025 2:29,https://developer.mozilla.org/,2,7,3,1,6,5,4,
323,4/8/2025 2:29,4/8/2025 2:29,https://developer.mozilla.org/,1,6,5,3,7,2,4,
324,4/8/2025 2:30,4/8/2025 2:30,https://developer.mozilla.org/,1,6,2,3,7,4,5,"Decorators would allow writing reusable class modifiers, which would reduse code bloat and make it much easier to reason about"
325,4/8/2025 2:30,4/8/2025 2:30,https://developer.mozilla.org/,,,1,,,,,
326,4/8/2025 2:31,4/8/2025 2:31,https://developer.mozilla.org/,1,2,5,4,3,7,6,
327,4/8/2025 2:33,4/8/2025 2:33,https://developer.mozilla.org/,,,,,,,,
328,4/8/2025 2:34,4/8/2025 2:34,https://developer.mozilla.org/,1,3,4,2,5,6,7,Decorator and json parse are very used
329,4/8/2025 2:34,4/8/2025 2:34,https://developer.mozilla.org/,,,,,,,,
330,4/8/2025 2:34,4/8/2025 2:34,https://developer.mozilla.org/,,,4,1,,2,3,
331,4/8/2025 2:35,4/8/2025 2:35,https://developer.mozilla.org/,1,7,2,4,3,6,5,
332,4/8/2025 2:36,4/8/2025 2:36,https://developer.mozilla.org/,5,2,4,3,1,7,6,"I'm developping web games and WebAssenbly is a plus for me, as everything that deals with performance improvements."
333,4/8/2025 2:37,4/8/2025 2:37,https://developer.mozilla.org/,7,2,5,1,4,3,6,
334,4/8/2025 2:37,4/8/2025 2:37,https://developer.mozilla.org/,1,7,4,3,6,2,5,"The Decorators would make attaching meta information to classes easier. The new options from this seem intresing for frameworks. - Joint iteration with ""zip"" seems like a  array transformation functionality that  will actually occurr in real projects and  can make  the code more declaritive once you internalised how it works. - I occasionally parse from String input simple  JS Objects by transforming it with RegExp in a vailid JSON String. More meta information from JSON.parse could help with this."
335,4/8/2025 2:38,4/8/2025 2:38,https://developer.mozilla.org/,7,3,1,2,4,6,5,
336,4/8/2025 2:38,4/8/2025 2:38,https://developer.mozilla.org/,1,3,7,6,5,4,2,
337,4/8/2025 2:39,4/8/2025 2:39,https://developer.mozilla.org/,,,,,,,,
338,4/8/2025 2:40,4/8/2025 2:40,https://developer.mozilla.org/,1,4,2,7,3,6,5,BECAUSE IT IS DECORATOR WE ALL NEED
339,4/8/2025 2:41,4/8/2025 2:41,https://developer.mozilla.org/,1,4,3,2,5,7,6,
340,4/8/2025 2:42,4/8/2025 2:43,https://developer.mozilla.org/,1,3,4,7,2,6,5,Metaprogramming good
341,4/8/2025 2:44,4/8/2025 2:44,https://developer.mozilla.org/,4,3,2,5,1,7,6,
342,4/8/2025 2:45,4/8/2025 2:45,https://developer.mozilla.org/,1,6,4,7,5,3,2,
343,4/8/2025 2:47,4/8/2025 2:47,https://developer.mozilla.org/,7,4,2,1,6,5,3,
344,4/8/2025 2:48,4/8/2025 2:48,https://developer.mozilla.org/,,,,,,,,
345,4/8/2025 2:49,4/8/2025 2:49,https://developer.mozilla.org/,1,4,6,7,5,2,3,I use decorators more in other programming languages.
346,4/8/2025 2:50,4/8/2025 2:50,https://developer.mozilla.org/,1,4,5,7,6,2,3,
347,4/8/2025 2:51,4/8/2025 2:51,https://developer.mozilla.org/,1,6,4,5,7,3,2,
348,4/8/2025 2:53,4/8/2025 2:53,https://developer.mozilla.org/,4,3,,1,2,,,
349,4/8/2025 2:55,4/8/2025 2:55,https://developer.mozilla.org/,1,7,6,4,5,3,2,
350,4/8/2025 2:56,4/8/2025 2:56,https://developer.mozilla.org/,7,1,3,4,2,6,5,"Creating new workers in 2025 is little bit retarded, we need simpler way to push forward usage of multiple cores be websites, especially now when new CPUS just add more and more cores."
351,4/8/2025 2:56,4/8/2025 2:56,https://developer.mozilla.org/,1,6,2,3,4,7,5,
352,4/8/2025 2:58,4/8/2025 2:58,https://developer.mozilla.org/,1,,,,,,,
353,4/8/2025 2:58,4/8/2025 2:58,https://developer.mozilla.org/,,,,,,,,
354,4/8/2025 2:59,4/8/2025 2:59,https://developer.mozilla.org/,,,,,,,,
355,4/8/2025 2:59,4/8/2025 2:59,https://developer.mozilla.org/,7,1,4,6,5,2,3,optimising mem utilisation on startup
356,4/8/2025 3:01,4/8/2025 3:01,https://developer.mozilla.org/,1,3,5,7,4,2,6,
357,4/8/2025 3:02,4/8/2025 3:02,https://developer.mozilla.org/,1,4,2,3,5,7,6,
358,4/8/2025 3:04,4/8/2025 3:04,https://developer.mozilla.org/,1,4,7,6,5,2,3,
359,4/8/2025 3:07,4/8/2025 3:07,https://developer.mozilla.org/,7,2,1,6,4,5,3,Decorators too complicated
360,4/8/2025 3:08,4/8/2025 3:08,https://developer.mozilla.org/,,,,,,,,"As a developer/user of a WebAssembly port, I hope it would simplify importing the wasm file."
361,4/8/2025 3:08,4/8/2025 3:08,https://developer.mozilla.org/,,,,1,,,2,Fewer Problems with JSON.parse sounds nice :D
362,4/8/2025 3:09,4/8/2025 3:09,https://developer.mozilla.org/,1,5,4,3,2,7,6,
363,4/8/2025 3:11,4/8/2025 3:11,https://developer.mozilla.org/,,,,,,,,
364,4/8/2025 3:11,4/8/2025 3:11,https://developer.mozilla.org/,,,,,,,,
365,4/8/2025 3:13,4/8/2025 3:13,https://developer.mozilla.org/,1,5,4,7,6,2,3,
366,4/8/2025 3:15,4/8/2025 3:15,https://developer.mozilla.org/,5,7,1,4,6,3,2,
367,4/8/2025 3:16,4/8/2025 3:16,https://developer.mozilla.org/,7,6,1,3,5,4,2,
368,4/8/2025 3:16,4/8/2025 3:16,https://developer.mozilla.org/,1,6,3,2,7,4,5,
369,4/8/2025 3:19,4/8/2025 3:19,https://developer.mozilla.org/,,,,,,,,
370,4/8/2025 3:20,4/8/2025 3:20,https://developer.mozilla.org/,,,,,,1,,
371,4/8/2025 3:21,4/8/2025 3:21,https://developer.mozilla.org/,1,5,4,7,6,2,3,
372,4/8/2025 3:23,4/8/2025 3:23,https://developer.mozilla.org/,5,,3,4,,2,1,
373,4/8/2025 3:23,4/8/2025 3:23,https://developer.mozilla.org/,3,6,1,5,7,4,2,"I prefer functional programming in my coding practices. Therefore, ""deferred module evaluation"" often does not save traffic but realizes the concept of ""load on demand"". The well-designed ""iterator sequence"" makes my coding easier and more expressive. ""JSON.parse source text access"" is not always straightforward when I want to modify only one key and often need to write additional codes to achieve this indirectly. Although I am a fan of FP, ""Decorators"" are still very convenient in the area of aspect-oriented programming (AOP) for automation tasks like data reporting and function monitoring. ""Joint iteration"" - Python has it, so I want it too. ""ESM parse source text access"" and ""Source phase imports"" are not currently essential in my coding needs."
374,4/8/2025 3:26,4/8/2025 3:26,https://developer.mozilla.org/,2,6,1,5,4,7,3,
375,4/8/2025 3:28,4/8/2025 3:28,https://developer.mozilla.org/,4,3,1,5,2,7,6,
376,4/8/2025 3:28,4/8/2025 3:28,https://developer.mozilla.org/,3,,,1,,4,2,
377,4/8/2025 3:32,4/8/2025 3:32,https://developer.mozilla.org/,7,2,3,1,4,6,5,"JS is not python, it is not necessary to try to add features from other languages, decorators will make JS even less clear.   With the rise of single-page applications using large frameworks and libraries like React, Vue, and Angular, or any derivative frameworks, page load time and bundle size are becoming essential optimizations and hard work to deliver the best possible user experience.  Any native optimization functionality will be much appreciated !"
378,4/8/2025 3:33,4/8/2025 3:33,https://developer.mozilla.org/,1,2,5,3,6,4,7,
379,4/8/2025 3:33,4/8/2025 3:33,https://developer.mozilla.org/,2,5,6,3,7,4,1,
380,4/8/2025 3:35,4/8/2025 3:35,https://developer.mozilla.org/,1,4,5,7,2,6,3,
381,4/8/2025 3:35,4/8/2025 3:35,https://developer.mozilla.org/,2,4,5,7,6,1,3,"Coming from Python, zip() is one of the tools I miss the most in JS. We have map(), filter() and reduce(), so the language clearly targets these kinds of functional Iterator operations, except a key one is missing in the form of zip()."
382,4/8/2025 3:36,4/8/2025 3:36,https://developer.mozilla.org/,5,7,1,4,6,3,2,
383,4/8/2025 3:36,4/8/2025 3:36,https://developer.mozilla.org/,,,,,,,,
384,4/8/2025 3:38,4/8/2025 3:38,https://developer.mozilla.org/,2,1,6,7,3,5,4,
385,4/8/2025 3:39,4/8/2025 3:39,https://developer.mozilla.org/,1,5,2,7,6,4,3,
386,4/8/2025 3:40,4/8/2025 3:40,https://developer.mozilla.org/,3,7,4,5,6,1,2,it's nice to have more functional programming in js that we don't need to import with external libraries.
387,4/8/2025 3:42,4/8/2025 3:42,https://developer.mozilla.org/,,,,,,,1,
388,4/8/2025 3:42,4/8/2025 3:42,https://developer.mozilla.org/,1,5,6,3,7,2,4,
389,4/8/2025 3:44,4/8/2025 3:44,https://developer.mozilla.org/,1,5,6,7,4,2,3,"I mostly use ""normal"" JS rather than bigger applications. Having decorators and better iterator tools would be more useful to me."
390,4/8/2025 3:46,4/8/2025 3:46,https://developer.mozilla.org/,1,,2,,,,,
391,4/8/2025 3:46,4/8/2025 3:46,https://developer.mozilla.org/,7,2,4,1,3,6,5,
392,4/8/2025 3:47,4/8/2025 3:47,https://developer.mozilla.org/,,,,,,,,
393,4/8/2025 3:49,4/8/2025 3:49,https://developer.mozilla.org/,,,,,,,,
394,4/8/2025 3:49,4/8/2025 3:49,https://developer.mozilla.org/,2,4,1,3,5,6,7,"most of these proposals haven't directly affected me, but the top ranking option is something i encounter as i am often trying to optimise to ensure i'm not loading large imports preemtively in my SPA"
395,4/8/2025 3:49,4/8/2025 3:49,https://developer.mozilla.org/,6,4,2,1,3,5,7,
396,4/8/2025 3:50,4/8/2025 3:50,https://developer.mozilla.org/,,,,,,,,None of these would help me. 
397,4/8/2025 3:51,4/8/2025 3:51,https://developer.mozilla.org/,1,4,2,7,6,5,3,
398,4/8/2025 3:55,4/8/2025 3:55,https://developer.mozilla.org/,4,7,3,5,6,1,2,I needed joint iteration like... once? All of these features seem rather obscure and niche to me. I'd prefer more work be done in other areas of the browser.
399,4/8/2025 3:55,4/8/2025 3:55,https://developer.mozilla.org/,,,,1,,,,
400,4/8/2025 3:55,4/8/2025 3:55,https://developer.mozilla.org/,4,6,3,2,7,1,5,
401,4/8/2025 3:56,4/8/2025 3:56,https://developer.mozilla.org/,7,2,3,6,1,5,4,
402,4/8/2025 3:59,4/8/2025 3:59,https://developer.mozilla.org/,,,,,,,,
403,4/8/2025 3:59,4/8/2025 3:59,https://developer.mozilla.org/,7,5,4,6,3,2,1,
404,4/8/2025 3:59,4/8/2025 3:59,https://developer.mozilla.org/,4,6,3,7,5,2,1,"I would love for JavaScript's functional programming aspect to be optimized and made similar to Java's Stream API, because I was horrified when I realized that the map, reduce and filter functions in JavaScript create new arrays instead of trying to optimize the the pipeline.  Also, I have no idea what the JSON.parse proposal is meant to do neither do I personally have a need for it nor have I encountered the problem."
405,4/8/2025 4:00,4/8/2025 4:00,https://developer.mozilla.org/,2,3,4,5,1,7,6,
406,4/8/2025 4:00,4/8/2025 4:00,https://developer.mozilla.org/,1,7,6,2,5,3,4,
407,4/8/2025 4:01,4/8/2025 4:01,https://developer.mozilla.org/,7,5,4,1,6,2,3,
408,4/8/2025 4:03,4/8/2025 4:03,https://developer.mozilla.org/,,,1,2,,,3,For us load perfomance is important and large js bundles already affect us so we had to improvise. I can see Deferred module evaluation is a big feature to us that we want use instantly. The other features are new so i dont think many of us is gonna rewrite things just to use the new feature.
409,4/8/2025 4:03,4/8/2025 4:03,https://developer.mozilla.org/,5,3,4,1,2,6,7,"None of these proposals are directly relevant for me at the moment, but I think some might come in handy in the future."
410,4/8/2025 4:03,4/8/2025 4:03,https://developer.mozilla.org/,3,7,4,1,5,6,2,
411,4/8/2025 4:03,4/8/2025 4:03,https://developer.mozilla.org/,6,7,3,1,4,2,5,
412,4/8/2025 4:04,4/8/2025 4:04,https://developer.mozilla.org/,,,,,,,,Decorators seem to have the biggest impact for developer experience allowing cleaner && more expressive code.
413,4/8/2025 4:05,4/8/2025 4:05,https://developer.mozilla.org/,1,6,7,2,5,4,3,
414,4/8/2025 4:05,4/8/2025 4:05,https://developer.mozilla.org/,7,1,5,2,6,4,3,
415,4/8/2025 4:05,4/8/2025 4:05,https://developer.mozilla.org/,,,,,,1,,
416,4/8/2025 4:06,4/8/2025 4:06,https://developer.mozilla.org/,2,7,6,5,1,4,3,"Current largest JS pain point is the immutability & unmockability of ES modules (can't hook them as you could with require in Node because of ESM itself, so JS testing things is 10x more difficult with ESM - my entire org is holding on ESM migration until there is a good solution here). Source phase modules seem to offer many more hooks into the internals that should provide some good steps towards this I think, making it easier to access (and hopefully later modify) modules during the initial loading phase."
417,4/8/2025 4:07,4/8/2025 4:07,https://developer.mozilla.org/,1,7,4,3,2,6,5,
418,4/8/2025 4:07,4/8/2025 4:07,https://developer.mozilla.org/,2,3,7,5,4,1,6,
419,4/8/2025 4:09,4/8/2025 4:09,https://developer.mozilla.org/,1,,,,,,,
420,4/8/2025 4:11,4/8/2025 4:11,https://developer.mozilla.org/,1,7,2,5,6,4,3,The most anticipated feature in this list is decorators as that would simplify a lot of code a make it more ergonomic to deal with class fields. I also want to see the tuples and structs proposal to progress as that's another key one the community needs.
421,4/8/2025 4:12,4/8/2025 4:12,https://developer.mozilla.org/,3,2,5,7,1,6,4,
422,4/8/2025 4:13,4/8/2025 4:13,https://developer.mozilla.org/,1,,,,,,,"I use decorators for logging and they are used in the Lit library, which I would like to be as standard as possible."
423,4/8/2025 4:13,4/8/2025 4:13,https://developer.mozilla.org/,2,6,7,4,5,1,3,
424,4/8/2025 4:13,4/8/2025 4:13,https://developer.mozilla.org/,1,4,7,5,6,2,3,
425,4/8/2025 4:14,4/8/2025 4:14,https://developer.mozilla.org/,1,,,2,,,,
426,4/8/2025 4:14,4/8/2025 4:14,https://developer.mozilla.org/,7,6,5,4,3,1,2,
427,4/8/2025 4:20,4/8/2025 4:20,https://developer.mozilla.org/,4,6,5,1,7,3,2,It's really about avoiding yet more complex load time interaction effects
428,4/8/2025 4:24,4/8/2025 4:24,https://developer.mozilla.org/,,,,,,,,
429,4/8/2025 4:26,4/8/2025 4:26,https://developer.mozilla.org/,1,5,7,4,6,3,2,
430,4/8/2025 4:26,4/8/2025 4:26,https://developer.mozilla.org/,,,,,,,,I want the pipe operator and nothing else!
431,4/8/2025 4:26,4/8/2025 4:26,https://developer.mozilla.org/,,,,,,,1,
432,4/8/2025 4:27,4/8/2025 4:27,https://developer.mozilla.org/,6,4,7,5,2,1,3,
433,4/8/2025 4:27,4/8/2025 4:27,https://developer.mozilla.org/,,,,,,,,potential for more powerful build tools
434,4/8/2025 4:27,4/8/2025 4:27,https://developer.mozilla.org/,,,,1,,2,,
435,4/8/2025 4:28,4/8/2025 4:28,https://developer.mozilla.org/,3,6,4,7,5,2,1,"Iteration is a task every developer executes on a daily basis, more and more do we use Map and Set objects to do so. Having utilities to perform certain tasks without having to convert data types is beneficial to streamline development and reduce resource usage.  Source phase imports are not something I'm actively thinking about but might be useful in handling certain webpack related functionality natively."
436,4/8/2025 4:29,4/8/2025 4:29,https://developer.mozilla.org/,1,5,2,3,4,7,6,
437,4/8/2025 4:29,4/8/2025 4:29,https://developer.mozilla.org/,,,,,,,,
438,4/8/2025 4:29,4/8/2025 4:29,https://developer.mozilla.org/,4,5,3,2,1,7,6,
439,4/8/2025 4:29,4/8/2025 4:29,https://developer.mozilla.org/,7,4,2,1,3,6,5,
440,4/8/2025 4:30,4/8/2025 4:30,https://developer.mozilla.org/,1,5,4,2,6,3,7,
441,4/8/2025 4:30,4/8/2025 4:30,https://developer.mozilla.org/,7,6,2,1,5,3,4,
442,4/8/2025 4:32,4/8/2025 4:32,https://developer.mozilla.org/,,,,,,,,
443,4/8/2025 4:35,4/8/2025 4:35,https://developer.mozilla.org/,5,7,3,6,4,1,2,
444,4/8/2025 4:35,4/8/2025 4:35,https://developer.mozilla.org/,7,6,4,1,5,2,3,"A quick glance over the proposal makes it sound like I won't be leaping to use it, but perhaps it will make libraries a little bit more robust if they're doing a lot of serialising and deserialising of non standard JSON types. "
445,4/8/2025 4:36,4/8/2025 4:36,https://developer.mozilla.org/,1,,4,,,2,3,
446,4/8/2025 4:37,4/8/2025 4:37,https://developer.mozilla.org/,,,,,,,,
447,4/8/2025 4:41,4/8/2025 4:41,https://developer.mozilla.org/,1,3,4,7,5,6,2,
448,4/8/2025 4:41,4/8/2025 4:41,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,,5,3,,2,4,
449,4/8/2025 4:41,4/8/2025 4:41,https://developer.mozilla.org/,,3,,2,,1,,
450,4/8/2025 4:44,4/8/2025 4:44,https://developer.mozilla.org/,6,4,3,5,1,7,2,
451,4/8/2025 4:44,4/8/2025 4:44,https://developer.mozilla.org/,,,,,,,,"im not that great developer to understand what proposals are about, sorry."
452,4/8/2025 4:45,4/8/2025 4:45,https://developer.mozilla.org/,1,3,2,6,4,5,7,
453,4/8/2025 4:45,4/8/2025 4:45,,,,,,,,,"These do not seem aligned with my work. More helpful (browser, not JS) features would be: (1) an working undo manager, (2) working in-browser voice recognition and synthesis, (3) in-browser dictionary (FF has this, but some others use a server with loss of privacy), and (4) programmatic access to the dictionary. Thank for all the great work!"
454,4/8/2025 4:46,4/8/2025 4:46,https://developer.mozilla.org/,,,,,,,,
455,4/8/2025 4:46,4/8/2025 4:46,https://developer.mozilla.org/,2,7,6,5,4,1,3,
456,4/8/2025 4:47,4/8/2025 4:47,https://developer.mozilla.org/,1,3,4,7,2,6,5,I like how decorators help make cleaner code while simultaneously making the added functionality quite clear/explicit.
457,4/8/2025 4:47,4/8/2025 4:47,https://developer.mozilla.org/,7,1,5,4,2,6,3,"I'd really rather have the module expression proposal, but this at least makes it vastly more ergonomic to do perormance-critical work in JS."
458,4/8/2025 4:48,4/8/2025 4:48,https://developer.mozilla.org/,4,6,5,1,7,3,2,
459,4/8/2025 4:51,4/8/2025 4:51,https://developer.mozilla.org/,,,,,,,,
460,4/8/2025 4:52,4/8/2025 4:52,https://developer.mozilla.org/,4,5,1,3,2,7,6,
461,4/8/2025 4:52,4/8/2025 4:52,https://developer.mozilla.org/,2,6,1,5,7,4,3,"If you can defer module evaluation that means you could defer custom element definition without needing to put a hard network dependency in the middle of a users visit, which could open up any number of cool patterns."
462,4/8/2025 4:53,4/8/2025 4:53,https://developer.mozilla.org/,1,2,4,7,5,3,6,I have been waiting for decorators for _years_ now and I just want to use them to reduce the amount of boilerplate that I'm writing.
463,4/8/2025 4:57,4/8/2025 4:57,https://developer.mozilla.org/,1,3,2,7,5,4,6,
464,4/8/2025 4:57,4/8/2025 4:57,https://developer.mozilla.org/,4,1,5,6,3,2,7,
465,4/8/2025 4:58,4/8/2025 4:58,https://developer.mozilla.org/,1,6,5,4,7,2,3,
466,4/8/2025 5:01,4/8/2025 5:01,https://developer.mozilla.org/,7,5,3,6,4,2,1,For the most part it will make library authoring easier. Concat/chain and variants I already use in existing fp libraries eg ramdas concat or Effects appendAll or similar. Same reason for #2.
467,4/8/2025 5:03,4/8/2025 5:03,https://developer.mozilla.org/,1,,,,,,,
468,4/8/2025 5:04,4/8/2025 5:04,https://developer.mozilla.org/,3,6,7,4,5,2,1,It will help to iterate
469,4/8/2025 5:06,4/8/2025 5:06,https://developer.mozilla.org/,5,6,2,1,7,3,4,Making json revivers easier is good I found it a bit tricky to implment. JSON parsing in the fetch api might benefit too.
470,4/8/2025 5:07,4/8/2025 5:07,https://developer.mozilla.org/,1,3,2,5,4,6,7,
471,4/8/2025 5:08,4/8/2025 5:08,https://developer.mozilla.org/,,,,,,,,
472,4/8/2025 5:08,4/8/2025 5:08,https://developer.mozilla.org/,3,4,5,2,7,6,1,
473,4/8/2025 5:09,4/8/2025 5:09,https://developer.mozilla.org/,6,3,1,7,2,4,5,
474,4/8/2025 5:10,4/8/2025 5:10,https://developer.mozilla.org/,,,,,,,,
475,4/8/2025 5:11,4/8/2025 5:11,https://developer.mozilla.org/,1,,,,,,,
476,4/8/2025 5:12,4/8/2025 5:12,https://developer.mozilla.org/,1,5,7,4,6,2,3,
477,4/8/2025 5:13,4/8/2025 5:13,https://developer.mozilla.org/,2,6,1,5,7,4,3,
478,4/8/2025 5:13,4/8/2025 5:13,https://developer.mozilla.org/,1,7,4,5,3,6,2,
479,4/8/2025 5:13,4/8/2025 5:13,https://developer.mozilla.org/,1,2,4,6,5,7,3,
480,4/8/2025 5:15,4/8/2025 5:15,https://developer.mozilla.org/,1,5,6,7,4,3,2,
481,4/8/2025 5:18,4/8/2025 5:18,https://developer.mozilla.org/,4,7,3,1,6,2,5,
482,4/8/2025 5:20,4/8/2025 5:20,https://developer.mozilla.org/,3,7,1,6,5,2,4,
483,4/8/2025 5:21,4/8/2025 5:21,https://developer.mozilla.org/,7,1,3,2,6,5,4,
484,4/8/2025 5:22,4/8/2025 5:22,https://developer.mozilla.org/,1,4,5,3,2,7,6,
485,4/8/2025 5:22,4/8/2025 5:22,https://developer.mozilla.org/,1,5,2,3,4,7,6,As a senior dev on our team it would be really nice to make some decorators for junior devs to be able to apply to classes without having to worry about implementing function calls repeatedly.
486,4/8/2025 5:22,4/8/2025 5:22,https://developer.mozilla.org/,4,2,1,7,3,5,6,
487,4/8/2025 5:23,4/8/2025 5:23,https://developer.mozilla.org/,2,6,3,1,7,4,5,
488,4/8/2025 5:24,4/8/2025 5:24,https://developer.mozilla.org/,,,,,,,,
489,4/8/2025 5:29,4/8/2025 5:29,https://developer.mozilla.org/,1,3,2,5,4,6,7,i use modules and idk what the other stuff is
490,4/8/2025 5:31,4/8/2025 5:31,https://developer.mozilla.org/,4,5,2,3,6,1,7,
491,4/8/2025 5:31,4/8/2025 5:31,https://developer.mozilla.org/,4,2,1,7,3,5,6,
492,4/8/2025 5:31,4/8/2025 5:31,https://developer.mozilla.org/,1,5,3,7,6,4,2,
493,4/8/2025 5:33,4/8/2025 5:33,https://developer.mozilla.org/,1,7,5,2,6,4,3,
494,4/8/2025 5:37,4/8/2025 5:37,https://developer.mozilla.org/,5,7,1,4,6,3,2,
495,4/8/2025 5:38,4/8/2025 5:38,https://developer.mozilla.org/,7,1,2,4,6,3,5,"I would like a quick explanation about each one of the items,  "
496,4/8/2025 5:41,4/8/2025 5:41,https://developer.mozilla.org/,3,5,1,2,4,7,6,
497,4/8/2025 5:42,4/8/2025 5:42,https://developer.mozilla.org/,4,7,3,5,6,1,2,
498,4/8/2025 5:43,4/8/2025 5:43,https://developer.mozilla.org/,1,7,5,2,6,4,3,
499,4/8/2025 5:47,4/8/2025 5:47,https://developer.mozilla.org/,,,,,,,,
500,4/8/2025 5:47,4/8/2025 5:47,https://developer.mozilla.org/,6,1,3,4,2,5,7,
501,4/8/2025 5:49,4/8/2025 5:49,https://developer.mozilla.org/,1,6,7,3,5,2,4,Lit Element primarily. 
502,4/8/2025 5:53,4/8/2025 5:53,https://developer.mozilla.org/,7,3,5,1,2,6,4,json parse sourse will help with sorting text inputs and forms
503,4/8/2025 5:53,4/8/2025 5:53,https://developer.mozilla.org/,4,7,5,3,6,2,1,Iterators helpers are a powerful new construct and higher order ones allow for even more flexibility and composition.
504,4/8/2025 5:53,4/8/2025 5:53,https://developer.mozilla.org/,7,2,3,6,1,5,4,
505,4/8/2025 5:54,4/8/2025 5:54,https://developer.mozilla.org/,5,3,1,4,2,7,6,"Decorators and iterator features would benefit only developers, but optimizations and improvements to JavaScript's stability would benefit not only developers, but everyone - including end users."
506,4/8/2025 5:56,4/8/2025 5:56,https://developer.mozilla.org/,7,1,4,3,2,6,5,
507,4/8/2025 5:56,4/8/2025 5:56,https://developer.mozilla.org/,,,,,,1,2,
508,4/8/2025 5:57,4/8/2025 5:57,https://developer.mozilla.org/,1,4,3,6,2,5,7,
509,4/8/2025 5:57,4/8/2025 5:57,https://developer.mozilla.org/,2,7,5,1,6,3,4,"I use JSON.parse (directly or indirectly) on a daily basis, and this would help both cases. Either it directly helps me, or it helps the many libraries I use (superjson, api clients such as axios/openapi-typescript, etc.)."
510,4/8/2025 5:59,4/8/2025 5:59,https://developer.mozilla.org/,1,,,2,,,,
511,4/8/2025 6:02,4/8/2025 6:02,https://developer.mozilla.org/,3,4,1,2,6,5,7,
512,4/8/2025 6:04,4/8/2025 6:04,https://developer.mozilla.org/,1,6,2,3,5,4,7,
513,4/8/2025 6:04,4/8/2025 6:04,https://developer.mozilla.org/,3,6,1,2,7,4,5,
514,4/8/2025 6:05,4/8/2025 6:05,https://developer.mozilla.org/,2,7,1,5,6,4,3,
515,4/8/2025 6:05,4/8/2025 6:05,https://developer.mozilla.org/,,,,,,1,,
516,4/8/2025 6:08,4/8/2025 6:08,https://developer.mozilla.org/,2,5,4,1,3,6,7,Flexible native JSON implementation
517,4/8/2025 6:08,4/8/2025 6:08,https://developer.mozilla.org/,,,,,,,,"Improve class Date by adding UTC, timezones etc."
518,4/8/2025 6:09,4/8/2025 6:09,https://developer.mozilla.org/,5,7,4,3,6,2,1,
519,4/8/2025 6:10,4/8/2025 6:10,https://developer.mozilla.org/,2,4,5,1,3,7,6,
520,4/8/2025 6:10,4/8/2025 6:10,https://developer.mozilla.org/,,,1,,,,,
521,4/8/2025 6:10,4/8/2025 6:10,https://developer.mozilla.org/,1,4,2,7,5,6,3,decorators would be awesome so i dont have to learn ts
522,4/8/2025 6:11,4/8/2025 6:11,https://developer.mozilla.org/,4,3,2,7,1,5,6,
523,4/8/2025 6:13,4/8/2025 6:13,https://developer.mozilla.org/,1,5,4,6,,2,3,"Decorators are a great tool for IoC containers. There is not currently a great selection of those out there in JS. They can also simplify logging, auth, and other support functions in a very readable way."
524,4/8/2025 6:13,4/8/2025 6:13,https://developer.mozilla.org/,1,7,6,4,3,2,5,
525,4/8/2025 6:13,4/8/2025 6:13,https://developer.mozilla.org/,1,3,4,5,2,6,7,
526,4/8/2025 6:16,4/8/2025 6:16,https://developer.mozilla.org/,,,,3,2,1,,"Honestly I think JS is almost at the getting bloated stage. WebAssembly would be cool, joint iteration is helpful, and JSON-parse would be cool if it lossy round-tripping could be fixed behind the scenes. Thanks for the question!"
527,4/8/2025 6:19,4/8/2025 6:19,https://developer.mozilla.org/,1,7,2,3,6,5,4,Polyfilling decorators bloats code size significantly.
528,4/8/2025 6:21,4/8/2025 6:21,https://developer.mozilla.org/,1,6,4,7,5,2,3,Even less external dependencies.
529,4/8/2025 6:22,4/8/2025 6:22,https://developer.mozilla.org/,,,,,,1,2,I don't understand the other options
530,4/8/2025 6:22,4/8/2025 6:22,https://developer.mozilla.org/,7,4,3,1,5,2,6,
531,4/8/2025 6:23,4/8/2025 6:23,https://developer.mozilla.org/,1,3,4,7,2,6,5,"Decorators are hugely powerful, but currently expensive to send over the wire due to the amount of boilerplate generated by the compilers. Having decorators in the browser would allow for extremely compact custom element definitions."
532,4/8/2025 6:23,4/8/2025 6:23,https://developer.mozilla.org/,5,6,1,4,7,2,3,
533,4/8/2025 6:24,4/8/2025 6:24,https://developer.mozilla.org/,4,7,5,3,6,1,2,
534,4/8/2025 6:26,4/8/2025 6:26,https://developer.mozilla.org/,1,4,7,6,5,2,3,
535,4/8/2025 6:28,4/8/2025 6:28,https://developer.mozilla.org/,7,2,1,6,3,5,4,
536,4/8/2025 6:29,4/8/2025 6:29,https://developer.mozilla.org/,3,7,1,2,4,6,5,"Making modular, flexible and more accessible app is now essential. And having the possibility to do that by default like deferring modules imports, using decorators to maintain code clarity or having the possibility to see the original source of a JSON text with revivers is a good first little step, but I want to see the big leap."
537,4/8/2025 6:28,4/8/2025 6:28,https://developer.mozilla.org/,4,1,7,2,3,6,5,
538,4/8/2025 6:29,4/8/2025 6:29,https://developer.mozilla.org/,,,,,,2,1,"i would like to be able to use 'throw' like an expression; for example: const x = f(1,2,3) || throw 'cant find the value!'; "
539,4/8/2025 6:30,4/8/2025 6:30,https://developer.mozilla.org/,1,4,2,5,3,6,7,
540,4/8/2025 6:30,4/8/2025 6:30,https://developer.mozilla.org/,1,7,6,4,5,3,2,
541,4/8/2025 6:32,4/8/2025 6:32,https://developer.mozilla.org/,3,5,1,7,4,6,2,
542,4/8/2025 6:32,4/8/2025 6:32,https://developer.mozilla.org/,1,6,4,2,7,3,5,I'm learning Django decorators right now
543,4/8/2025 6:33,4/8/2025 6:33,https://developer.mozilla.org/,7,2,6,3,1,5,4,In coding i thought it starts from source code importing and then next prioritize or sequence of iteration and debugging.  
544,4/8/2025 6:33,4/8/2025 6:33,https://developer.mozilla.org/,4,5,3,6,7,1,2,Reduce the number of boilerplate utility functions.
545,4/8/2025 6:34,4/8/2025 6:34,https://developer.mozilla.org/,2,,,,,1,3,
546,4/8/2025 6:34,4/8/2025 6:34,https://developer.mozilla.org/,1,4,2,5,3,6,7,"Since I am using Angular, I am already using the (now outdated) typescript decorators. I expect having a native standard to be an improvement, and the faster it arrives, the sooner It can replace the outdated one. I expect the import  improvements will likewise allow frameworks to improve their own optimizations. The iterator improvements are nice to have, but easy enough to polyfill in-house."
547,4/8/2025 6:34,4/8/2025 6:34,https://developer.mozilla.org/,2,3,1,7,4,6,5,"it wouldn't, these are all completeley irrelevant"
548,4/8/2025 6:36,4/8/2025 6:36,https://developer.mozilla.org/,7,5,4,1,6,3,2,
549,4/8/2025 6:36,4/8/2025 6:36,https://developer.mozilla.org/,,,,,,,,
550,4/8/2025 6:36,4/8/2025 6:36,https://developer.mozilla.org/,1,,,,,,,Decorators will make code much cleaner. 
551,4/8/2025 6:39,4/8/2025 6:39,https://developer.mozilla.org/,1,3,4,2,,,,
552,4/8/2025 6:41,4/8/2025 6:41,https://developer.mozilla.org/,3,1,5,4,2,7,6,
553,4/8/2025 6:42,4/8/2025 6:42,https://developer.mozilla.org/,1,4,2,3,6,5,7,
554,4/8/2025 6:43,4/8/2025 6:43,https://developer.mozilla.org/,2,7,5,1,6,3,4,
555,4/8/2025 6:43,4/8/2025 6:43,https://developer.mozilla.org/,6,5,7,1,4,2,3,
556,4/8/2025 6:44,4/8/2025 6:44,https://developer.mozilla.org/,5,7,1,4,6,3,2,"Deferred module evaluation would really improve performances and 2, 3, 4 and 5 are really good QOL updates for js devs."
557,4/8/2025 6:46,4/8/2025 6:46,https://developer.mozilla.org/,,,,1,,2,3,
558,4/8/2025 6:46,4/8/2025 6:46,https://developer.mozilla.org/,7,6,1,2,5,3,4,
559,4/8/2025 6:46,4/8/2025 6:46,https://developer.mozilla.org/,5,4,2,7,1,3,6,
560,4/8/2025 6:46,4/8/2025 6:46,https://developer.mozilla.org/,,,,,,,,
561,4/8/2025 6:47,4/8/2025 6:47,https://developer.mozilla.org/,,,,,,,,none of it. 
562,4/8/2025 6:48,4/8/2025 6:48,https://developer.mozilla.org/,4,7,6,1,5,3,2,
563,4/8/2025 6:49,4/8/2025 6:49,https://developer.mozilla.org/,,,,,,,,
564,4/8/2025 6:50,4/8/2025 6:50,https://developer.mozilla.org/,,2,,,,,1,
565,4/8/2025 6:50,4/8/2025 6:50,https://developer.mozilla.org/,7,2,3,6,1,5,4,
566,4/8/2025 6:50,4/8/2025 6:50,https://developer.mozilla.org/,4,6,3,5,7,1,2,
567,4/8/2025 6:51,4/8/2025 6:51,https://developer.mozilla.org/,1,2,,,,,3,
568,4/8/2025 6:52,4/8/2025 6:52,https://developer.mozilla.org/,1,3,2,,,,,
569,4/8/2025 6:54,4/8/2025 6:54,https://developer.mozilla.org/,1,5,6,4,7,3,2,"Would help to reduce boilerplate, improve readability, and make it easier to apply reusable logic like logging, validation. I use them a lot with typescript, in NestJS and Angular."
570,4/8/2025 6:54,4/8/2025 6:54,https://developer.mozilla.org/,1,7,4,3,2,6,5,
571,4/8/2025 6:54,4/8/2025 6:54,https://developer.mozilla.org/,4,1,2,5,6,3,7,
572,4/8/2025 6:56,4/8/2025 6:56,https://developer.mozilla.org/,,,1,,,,,Faster load times for user flows that don't require heavy computation. Easier to move expensive operations to their own modules that are lazily-loaded rather than preloading them when the page loads
573,4/8/2025 6:57,4/8/2025 6:57,https://developer.mozilla.org/,4,3,1,7,2,6,5,
574,4/8/2025 6:57,4/8/2025 6:57,https://developer.mozilla.org/,5,2,1,4,3,6,7,It would help us to get better performance and manage more efficiently all the imports we do on a request.
575,4/8/2025 6:57,4/8/2025 6:57,https://developer.mozilla.org/,1,5,7,2,6,3,4,
576,4/8/2025 6:57,4/8/2025 6:57,https://developer.mozilla.org/,7,2,3,6,1,5,4,
577,4/8/2025 6:58,4/8/2025 6:58,https://developer.mozilla.org/,7,6,4,3,5,1,2,
578,4/8/2025 6:58,4/8/2025 6:58,https://developer.mozilla.org/,4,7,5,3,6,2,1,I come from OCaml and I really miss some of its functional features in JavaScript!
579,4/8/2025 6:58,4/8/2025 6:58,https://developer.mozilla.org/,4,7,5,3,6,2,1,
580,4/8/2025 7:03,4/8/2025 7:03,https://developer.mozilla.org/,1,,2,,,,3,
581,4/8/2025 7:04,4/8/2025 7:04,https://developer.mozilla.org/,3,5,4,1,6,7,2,"More control over the native JSON.parse/.stringify is always welcomed. I think its preferable for this to be in the Javascript ""std lib"" rather than needing to rely on 3rd party libs to do so. This way, the native support could provide some faster implementations to certain parsing algorithms or states which could not be achieved through an interpreted 3p lib."
582,4/8/2025 7:05,4/8/2025 7:05,https://developer.mozilla.org/,3,4,6,7,5,1,2,
583,4/8/2025 7:06,4/8/2025 7:06,https://developer.mozilla.org/,7,1,4,3,2,6,5,
584,4/8/2025 7:06,4/8/2025 7:06,https://developer.mozilla.org/,7,6,3,2,5,1,4,"Just wouldn't need to bring... ``` function zip*(a, b) {   const aIter = a[Symbol.iterator]()   const bIter = b[Symbol.iterator]()   while (true) {     const aRes = aIter.next()     if (aRes.done) return     const bRes = bIter.next()     if (bRes.done) return     yield [aRes.value, bRes.value]   } } } ``` with me everywhere I go. But to be honest, it is small enough as to not care that much"
585,4/8/2025 7:08,4/8/2025 7:08,https://developer.mozilla.org/,1,7,4,5,6,2,3,The Angular framework could use native decorators.
586,4/8/2025 7:09,4/8/2025 7:09,https://developer.mozilla.org/,1,5,3,2,4,7,6,
587,4/8/2025 7:10,4/8/2025 7:10,https://developer.mozilla.org/,,,,,,,,
588,4/8/2025 7:13,4/8/2025 7:13,https://developer.mozilla.org/,4,7,5,3,6,2,1,"having it implemented natively will make this behavior easier and probably more performant -  than if I were to implement my own ""implementation"" / workaround"
589,4/8/2025 7:12,4/8/2025 7:12,https://developer.mozilla.org/,2,1,7,3,4,5,6,
590,4/8/2025 7:13,4/8/2025 7:13,https://developer.mozilla.org/,2,5,3,7,6,1,4,
591,4/8/2025 7:15,4/8/2025 7:15,https://developer.mozilla.org/,1,,4,,,2,3,
592,4/8/2025 7:15,4/8/2025 7:15,https://developer.mozilla.org/,1,6,2,5,7,3,4,
593,4/8/2025 7:16,4/8/2025 7:16,https://developer.mozilla.org/,2,7,6,4,5,3,1,
594,4/8/2025 7:16,4/8/2025 7:16,https://developer.mozilla.org/,1,6,4,5,7,3,2,
595,4/8/2025 7:16,4/8/2025 7:16,https://developer.mozilla.org/,1,5,2,7,6,4,3,At Discord we use class syntax for much of our network client logic. Decorators would simplify and make declarative a large swath of common functionality
596,4/8/2025 7:16,4/8/2025 7:16,https://developer.mozilla.org/,7,6,2,1,5,3,4,
597,4/8/2025 7:17,4/8/2025 7:17,https://developer.mozilla.org/,2,7,1,5,3,4,6,
598,4/8/2025 7:18,4/8/2025 7:18,https://developer.mozilla.org/,2,5,6,3,4,7,1,
599,4/8/2025 7:19,4/8/2025 7:19,https://developer.mozilla.org/,1,7,2,3,6,5,4,"I'm biased. I'm rewriting es-membrane to provide decorators for marking class fields and methods as read-only, or hidden, or internal, etc."
600,4/8/2025 7:22,4/8/2025 7:22,https://developer.mozilla.org/,5,1,3,4,2,6,7,
601,4/8/2025 7:22,4/8/2025 7:22,https://developer.mozilla.org/,6,7,5,3,4,2,1,
602,4/8/2025 7:22,4/8/2025 7:22,https://developer.mozilla.org/,5,2,4,3,1,6,7,We're using highly modularized js and would like to be able to convert everything to WebAssembly for efficiency and obfuscation.
603,4/8/2025 7:23,4/8/2025 7:23,https://developer.mozilla.org/,1,4,3,6,5,7,2,"Decorators seem to be popular in Python.  I don't really know much about any of these, though."
604,4/8/2025 7:25,4/8/2025 7:25,https://developer.mozilla.org/,5,3,1,2,4,6,7,
605,4/8/2025 7:25,4/8/2025 7:25,https://developer.mozilla.org/,5,3,6,7,1,4,2,
606,4/8/2025 7:25,4/8/2025 7:25,https://developer.mozilla.org/,1,5,2,3,6,4,7,
607,4/8/2025 7:26,4/8/2025 7:26,https://developer.mozilla.org/,4,6,5,3,7,2,1,
608,4/8/2025 7:27,4/8/2025 7:27,https://developer.mozilla.org/,3,4,6,7,5,1,2,
609,4/8/2025 7:27,4/8/2025 7:27,https://developer.mozilla.org/,2,6,5,1,7,4,3,JSON APIs can stop wrapping numbers in strings as a workaround for JavaScript specifically (other languages can handle this case fine already and it's allowed by the JSON spec)
610,4/8/2025 7:27,4/8/2025 7:27,https://developer.mozilla.org/,4,,,1,,2,3,
611,4/8/2025 7:28,4/8/2025 7:28,https://developer.mozilla.org/,,1,,3,2,,,
612,4/8/2025 7:28,4/8/2025 7:28,https://developer.mozilla.org/,3,4,1,2,7,5,6,more efficient imports
613,4/8/2025 7:28,4/8/2025 7:28,https://developer.mozilla.org/,1,6,7,4,5,2,3,
614,4/8/2025 7:30,4/8/2025 7:30,https://developer.mozilla.org/,1,5,7,3,4,6,2,"Adding decorators would increase feature parity between JavaScript and TypeScript, making it easier to go between, combine, and convert the two languages. "
615,4/8/2025 7:31,4/8/2025 7:31,https://developer.mozilla.org/,,,,,,1,2,"If I can do something in Python, I can do it in JS too in a similar way."
616,4/8/2025 7:32,4/8/2025 7:32,https://developer.mozilla.org/,1,,,,,2,,
617,4/8/2025 7:34,4/8/2025 7:34,https://developer.mozilla.org/,1,5,6,3,4,7,2,
618,4/8/2025 7:38,4/8/2025 7:38,https://developer.mozilla.org/,1,,,2,,,,
619,4/8/2025 7:39,4/8/2025 7:39,https://developer.mozilla.org/,,,,,,,,"I literally do not know what these mean. If you would provide a link or description to each point, it would be very helpful."
620,4/8/2025 7:40,4/8/2025 7:40,https://developer.mozilla.org/,,,,,,,,
621,4/8/2025 7:40,4/8/2025 7:40,https://developer.mozilla.org/,,,,,,,,
622,4/8/2025 7:40,4/8/2025 7:40,https://developer.mozilla.org/,1,,,,,,,
623,4/8/2025 7:42,4/8/2025 7:42,https://developer.mozilla.org/,1,7,5,2,6,4,3,
624,4/8/2025 7:42,4/8/2025 7:42,https://developer.mozilla.org/,3,6,7,4,5,2,1,
625,4/8/2025 7:44,4/8/2025 7:44,https://developer.mozilla.org/,5,1,2,4,3,7,6,I added modules to the top because of performance. Other things is not what I use everyday so I don't care about them
626,4/8/2025 7:44,4/8/2025 7:44,https://developer.mozilla.org/,7,6,3,1,5,4,2,"More powerful JSON.parse would be helpful in backend development with JS. Iterator.sequence and Joint iteration expand use cases for iterators which are, in my opinion, powerful but still largely unappreciated JS feature."
627,4/8/2025 7:48,4/8/2025 7:48,https://developer.mozilla.org/,1,2,5,4,3,7,6,
628,4/8/2025 7:48,4/8/2025 7:48,https://developer.mozilla.org/,1,,,2,,,,
629,4/8/2025 7:49,4/8/2025 7:49,https://developer.mozilla.org/,1,3,4,7,2,5,6,
630,4/8/2025 7:49,4/8/2025 7:49,https://developer.mozilla.org/,1,6,3,7,2,5,4,
631,4/8/2025 7:50,4/8/2025 7:50,https://developer.mozilla.org/,4,2,5,7,1,3,6,Improving the flexibility of loading Web Assembly is the number one thing I'd like to see improve in web development.
632,4/8/2025 7:52,4/8/2025 7:52,https://developer.mozilla.org/,7,2,4,3,1,5,6,
633,4/8/2025 7:52,4/8/2025 7:52,https://developer.mozilla.org/,1,2,4,5,3,7,6,"Decorators have been looking promising for many years, but have been stuck in specification purgatory. I believe they will be a fantastic compliment for Web Components. If they are eventually expanded to other targets, such as parameters, destructuring, variable declarations, etc, they could unlock entirely new paradigms for the language.  ESM phase imports and source phase imports also solve long-standing problems that have resulted in complicated tooling problems for importing assets and constructing workers. To finally have a standardised approach for these will reduce the effort expended on tooling for every developer.  The other proposals are nice to have, and will certainly be useful in limited scenarios, but will not be as impactful as the top 3, in my opinion."
634,4/8/2025 7:54,4/8/2025 7:54,https://developer.mozilla.org/,,,,,,1,2,"I miss .zip when working with data arrays regularly so iterator sequencing would be immediately useful. Similarly, I literally just wrote a userland implementation of iterator sequencing and that was a pain in the ass to think about, especially when typing it. Having something from ES would force the TS team to support it as well, which would be great."
635,4/8/2025 7:56,4/8/2025 7:56,https://developer.mozilla.org/,1,3,5,4,2,6,7,
636,4/8/2025 7:57,4/8/2025 7:57,https://developer.mozilla.org/,2,,1,,3,,,make code cleaner and faster for future
637,4/8/2025 7:57,4/8/2025 7:57,https://developer.mozilla.org/,3,2,4,7,1,6,5,
638,4/8/2025 7:58,4/8/2025 7:58,https://developer.mozilla.org/,1,7,5,2,6,4,3,
639,4/8/2025 7:59,4/8/2025 7:59,https://developer.mozilla.org/,,,,,,,,
640,4/8/2025 8:00,4/8/2025 8:00,https://developer.mozilla.org/,,,,,,,,
641,4/8/2025 8:01,4/8/2025 8:01,https://developer.mozilla.org/,1,6,7,4,3,5,2,
642,4/8/2025 8:01,4/8/2025 8:01,https://developer.mozilla.org/,7,4,6,3,5,2,1,
643,4/8/2025 8:04,4/8/2025 8:04,,5,4,1,6,7,2,3,Faster SvelteKit apps.
644,4/8/2025 8:04,4/8/2025 8:04,https://developer.mozilla.org/,7,4,6,3,5,1,2,The image of using zip and concat functions in various cases arises.
645,4/8/2025 8:04,4/8/2025 8:04,https://developer.mozilla.org/,1,4,3,5,6,7,2,
646,4/8/2025 8:04,4/8/2025 8:04,https://developer.mozilla.org/,7,5,1,3,6,4,2,I  think it would simplify my life a bit when splitting an app into multiple modules but being able to pretend things are sync
647,4/8/2025 8:05,4/8/2025 8:05,https://developer.mozilla.org/,,1,,,,,,
648,4/8/2025 8:05,4/8/2025 8:05,https://developer.mozilla.org/,1,,,,,,,
649,4/8/2025 8:08,4/8/2025 8:08,https://developer.mozilla.org/,1,5,2,6,4,7,3,
650,4/8/2025 8:08,4/8/2025 8:08,https://developer.mozilla.org/,1,3,2,5,4,7,6,
651,4/8/2025 8:09,4/8/2025 8:09,https://developer.mozilla.org/,,,,,,,,
652,4/8/2025 8:10,4/8/2025 8:10,https://developer.mozilla.org/,,,,1,,,,"It sucks a lot that I have to use a 3rd party library to parse JSON without losing precision on large numbers when there is supposedly a canonical built-in JSON.parse().  The other proposals in the list don't looks very useful to me. Please, discard them and better bring Temporals to js instead."
653,4/8/2025 8:10,4/8/2025 8:10,https://developer.mozilla.org/,7,6,1,2,5,4,3,
654,4/8/2025 8:11,4/8/2025 8:11,https://developer.mozilla.org/,1,4,2,3,5,6,7,
655,4/8/2025 8:12,4/8/2025 8:12,https://developer.mozilla.org/,1,6,4,7,5,2,3,
656,4/8/2025 8:12,4/8/2025 8:12,https://developer.mozilla.org/,4,5,6,3,7,2,1,
657,4/8/2025 8:13,4/8/2025 8:13,https://developer.mozilla.org/,3,2,1,5,6,4,7,I am working on applications that have a large TBT I hope Deferred module evaluation would improve it
658,4/8/2025 8:14,4/8/2025 8:14,https://developer.mozilla.org/,1,6,7,4,5,2,3,Decorator could clear up lots of complex patterns in my codebase.
659,4/8/2025 8:15,4/8/2025 8:15,https://developer.mozilla.org/,,,2,,1,4,3,
660,4/8/2025 8:16,4/8/2025 8:16,https://developer.mozilla.org/,5,3,1,4,2,7,6,
661,4/8/2025 8:16,4/8/2025 8:16,https://developer.mozilla.org/,1,6,5,4,7,2,3,
662,4/8/2025 8:17,4/8/2025 8:17,https://developer.mozilla.org/,2,4,1,5,3,7,6,
663,4/8/2025 8:17,4/8/2025 8:17,https://developer.mozilla.org/,1,7,5,2,6,4,3,
664,4/8/2025 8:19,4/8/2025 8:19,https://developer.mozilla.org/,,,,,,,,
665,4/8/2025 8:21,4/8/2025 8:21,https://developer.mozilla.org/,5,1,2,6,7,3,4,"The way workers are currently instantiated (based on a URL) has been hindering adoption of the feature for a long time due to: 1. How it doesn't play well with bundling (only recently has the `new URL(""./path"", import.meta.url)` been proposed and widely adopted) 2. How it doesn't allow type tooling to carry type information along  I'm hoping the proposal will fix both, as well as help standardize inconsistent implementations of the pattern mentioned in 1 across build tools."
666,4/8/2025 8:22,4/8/2025 8:22,https://developer.mozilla.org/,1,4,7,6,5,3,2,
667,4/8/2025 8:23,4/8/2025 8:23,https://developer.mozilla.org/,7,6,4,1,5,3,2,"JSON parsing is used heavily by almost any JS application, and I could immediately see the proposal's value.  The others I'm sure will be handy to some, but none jumped out to me as solutions to (my) recurring problems."
668,4/8/2025 8:23,4/8/2025 8:23,https://developer.mozilla.org/,3,6,2,5,7,1,4,
669,4/8/2025 8:24,4/8/2025 8:24,https://developer.mozilla.org/,5,4,6,1,3,2,7,
670,4/8/2025 8:24,4/8/2025 8:24,https://developer.mozilla.org/,1,7,2,5,6,3,4,"Logging is a huge part of maintaining a codebase. The JS landscape rapidly changes, and so does the codebase. Making sure I know what changes with decorators (read: logging without bloat) makes sure I can keep up with the times efficiently."
671,4/8/2025 8:26,4/8/2025 8:26,https://developer.mozilla.org/,1,3,5,2,4,7,6,
672,4/8/2025 8:28,4/8/2025 8:28,https://developer.mozilla.org/,6,1,3,7,2,5,4,
673,4/8/2025 8:29,4/8/2025 8:29,https://developer.mozilla.org/,1,3,2,4,,5,6,Maybe new innovations 
674,4/8/2025 8:30,4/8/2025 8:30,https://developer.mozilla.org/,,,,,,,,
675,4/8/2025 8:33,4/8/2025 8:33,https://developer.mozilla.org/,7,4,3,6,5,1,2,
676,4/8/2025 8:33,4/8/2025 8:33,https://developer.mozilla.org/,1,2,3,,,,,"JavaScript should seriously consider adding a struct type. Alternatively, removing the need for the new keyword in class usage would be a step forward. Also, having something like @state to allow mutation inside structs could bring declarative UI programming to JS. Web components are nice, but isn't it time we had a SwiftUI- or Jetpack-style declarative UI framework natively in JavaScript?"
677,4/8/2025 8:34,4/8/2025 8:34,https://developer.mozilla.org/,,,,,,,,
678,4/8/2025 8:35,4/8/2025 8:35,https://developer.mozilla.org/,1,7,5,2,6,4,3,I'm a fan of the GNOME platform and their GJS runtime which could really benefit from decorators.
679,4/8/2025 8:36,4/8/2025 8:36,https://developer.mozilla.org/,7,5,3,1,6,4,2,More flexible client-server communication
680,4/8/2025 8:38,4/8/2025 8:38,https://developer.mozilla.org/,1,,,3,,2,,
681,4/8/2025 8:39,4/8/2025 8:39,https://developer.mozilla.org/,1,5,3,2,4,7,6,
682,4/8/2025 8:39,4/8/2025 8:39,https://developer.mozilla.org/,,,,,,,,I want spec influencers to focus on intuition rather than functionality.  Stop adding sigils which are difficult for new devs to learn.  We're already stuck with backwards compatibility so we can't get rid of old and bad features which make javascript difficult to learn.  So please don't make it even harder
683,4/8/2025 8:42,4/8/2025 8:42,https://developer.mozilla.org/,2,7,5,1,6,4,3,
684,4/8/2025 8:44,4/8/2025 8:44,https://developer.mozilla.org/,5,2,1,7,6,3,4,This could significantly improve website performance.  Most other features can be polyfilled or provided by tooling.
685,4/8/2025 8:43,4/8/2025 8:43,https://developer.mozilla.org/,,,,,,,,"Decorators are a common pattern in most languages, and will be useful especially in Custom Element definitions."
686,4/8/2025 8:46,4/8/2025 8:46,https://developer.mozilla.org/,,1,,,,,,
687,4/8/2025 8:46,4/8/2025 8:46,https://developer.mozilla.org/,7,2,3,4,1,6,5,
688,4/8/2025 8:47,4/8/2025 8:47,https://developer.mozilla.org/,5,3,1,2,4,6,7,Deffered module evaluation would be helpful for perf
689,4/8/2025 8:48,4/8/2025 8:48,https://developer.mozilla.org/,1,6,4,5,7,3,2,Metadata
690,4/8/2025 8:49,4/8/2025 8:49,https://developer.mozilla.org/,,,,3,,1,2,I've stumbled upon needing this feature a few times before.
691,4/8/2025 8:51,4/8/2025 8:51,https://developer.mozilla.org/,2,6,7,4,5,1,3,Almost every module I create has a 'zip' function in its utils. It would be very handy to just have this function in the standard library. (An 'enumerate' function would be good too).
692,4/8/2025 8:51,4/8/2025 8:51,https://developer.mozilla.org/,,,,,,,,
693,4/8/2025 8:52,4/8/2025 8:52,https://developer.mozilla.org/,2,4,6,1,7,5,3,
694,4/8/2025 8:53,4/8/2025 8:53,https://developer.mozilla.org/,1,3,4,5,2,6,7,"My first professional language was Python, and I developed a style that benefited from decorators. I often find myself trying to use those same patterns in JS and TS, even years later. I think that decorators represent a very nice step forward in the metaprogramming capabilities of JS."
695,4/8/2025 8:56,4/8/2025 8:56,https://developer.mozilla.org/,1,7,4,2,5,6,3,It's awesome
696,4/8/2025 8:59,4/8/2025 8:59,https://developer.mozilla.org/,3,6,5,2,7,4,1,
697,4/8/2025 9:01,4/8/2025 9:01,https://developer.mozilla.org/,3,6,4,7,5,1,2,
698,4/8/2025 9:05,4/8/2025 9:05,https://developer.mozilla.org/,,,,,,,,
699,4/8/2025 9:04,4/8/2025 9:04,https://developer.mozilla.org/,3,7,1,5,6,2,4,"I am actually more excited about Record and Tuple than any of the above, but I think the potential performance benefit of deferred evaluation is going to be a big win."
700,4/8/2025 9:05,4/8/2025 9:05,https://developer.mozilla.org/,1,6,7,5,2,3,4,
701,4/8/2025 9:08,4/8/2025 9:08,https://developer.mozilla.org/,4,6,3,7,5,1,2,
702,4/8/2025 9:09,4/8/2025 9:09,https://developer.mozilla.org/,,,,,,,,
703,4/8/2025 9:10,4/8/2025 9:10,https://developer.mozilla.org/,2,3,1,7,4,5,6,
704,4/8/2025 9:11,4/8/2025 9:11,https://developer.mozilla.org/,1,4,6,7,5,3,2,"Decorators should be awesome, from what we have seen from Python!"
705,4/8/2025 9:15,4/8/2025 9:15,https://developer.mozilla.org/,1,6,7,4,5,2,3,Seen some use cases for adding metadata/behavior in a more declarative way to improve understandability and maybe reduce complexity. Also could make some already existing features/concepts in the standard bearable to use with standard JS (e.g.: web components)
706,4/8/2025 9:19,4/8/2025 9:19,https://developer.mozilla.org/,7,3,4,1,2,5,6,
707,4/8/2025 9:19,4/8/2025 9:19,https://developer.mozilla.org/,,,,,,,,
708,4/8/2025 9:19,4/8/2025 9:19,https://developer.mozilla.org/,1,7,3,6,2,4,5,
709,4/8/2025 9:22,4/8/2025 9:22,https://developer.mozilla.org/,,,,,,,,
710,4/8/2025 9:22,4/8/2025 9:22,https://developer.mozilla.org/,1,2,,,,3,,
711,4/8/2025 9:24,4/8/2025 9:24,https://developer.mozilla.org/,5,2,1,4,3,7,6,
712,4/8/2025 9:26,4/8/2025 9:26,https://developer.mozilla.org/,,,,,,,,syntax sugar
713,4/8/2025 9:26,4/8/2025 9:26,https://developer.mozilla.org/,2,3,1,5,4,7,6,"For frontend platform teams, this could help a lot with enabling more highly decoupled pieces of the frontend with less dependency on extremely complex bundling tools, like WebPack. It would be so nice to implicitly lazily load module dependencies. Also, please consider expanding import map functionality -- we're still using SystemJS to load microfrontends and would prefer native support."
714,4/8/2025 9:27,4/8/2025 9:27,https://developer.mozilla.org/,1,7,5,2,6,4,3,"Decorators are awesome. They are very powerful in python and I'm excited to see how they are utilized in JS  I've only run into deserialization issues a couple times (always from API data), but this change JSON parse would have been a godsend both times.  Iterator changes are nice but I haven't run into it too much personally.  Module/import changes are also nice but rarely are a bottleneck for the FE code I work with (these are usually removed anyway by whatever bundler we are using)."
715,4/8/2025 9:28,4/8/2025 9:28,https://developer.mozilla.org/,1,5,6,3,4,7,2,
716,4/8/2025 9:32,4/8/2025 9:32,https://developer.mozilla.org/,7,4,6,3,5,2,1,Standardized support for lazy iteration is critical when writing in this haphazard language.
717,4/8/2025 9:34,4/8/2025 9:34,https://developer.mozilla.org/,3,2,4,5,1,6,7,Source phase inputs feel like they unlock the greatest amount of potential and improve the viability of web assembly options which I am using more and more now as I move away from JavaScript to Dart
718,4/8/2025 9:34,4/8/2025 9:34,https://developer.mozilla.org/,1,2,4,5,3,6,7,
719,4/8/2025 9:37,4/8/2025 9:37,https://developer.mozilla.org/,4,3,1,7,2,6,5,"The forcing of an async programming model just to defer loading of program elements that are not always needed has been a frequent pain point, often causing us into contortion workarounds. This is particularly important for deferred code that needs to be very efficient in the circumstances where it's needed."
720,4/8/2025 9:40,4/8/2025 9:40,https://developer.mozilla.org/,,,,,,,,
721,4/8/2025 9:40,4/8/2025 9:40,https://developer.mozilla.org/,4,2,7,3,1,5,6,"I maintain some Wasm-using libraries and it sucks having to use a bundler to distribute it on npm, etc. Let me import the wasm blob plz"
722,4/8/2025 9:41,4/8/2025 9:41,https://developer.mozilla.org/,5,1,3,4,2,7,6,
723,4/8/2025 9:41,4/8/2025 9:41,https://developer.mozilla.org/,3,6,5,4,7,1,2,"Both iterator features would make a lot of code cleaner, without sacrificing performance by creating temporary arrays"
724,4/8/2025 9:42,4/8/2025 9:42,https://developer.mozilla.org/,1,2,,5,,4,3,
725,4/8/2025 9:46,4/8/2025 9:46,https://developer.mozilla.org/,,,,1,,2,,
726,4/8/2025 9:47,4/8/2025 9:47,https://developer.mozilla.org/,,,,,,,,"Decorators are probably nice for like logging stuff in classes. I know that we use them in python to get dependencies in the router.  But honestly every proposal (maybe except decorators) is kinda midwit. I can see myself use decorators, deferred module revaluation and source phase imports (although as I understand it the latter is the equivalent's of vite's `import module from ""./file?raw"";` so it's also a solved problem). But the rest is just random shit, feels like a ""arbeitsbeschaffungsmaßnahme"" to me (job creation measure).  I think these proposals bloat JavaScript more than they improve developer's lives. There are so many features at this point that devs will re-invent them anyway because just knowing what exists and what doesn't is more work than just sticking to a set of basics.  Just push through Records & Tuples instead. The education problem persists, but it solves a lot of usecases that aren't easy to solve otherwise. I've never felt the need to zip an iterator. I used to have a colleague who got quit because she couldn't get so much done, she was rambling about monads and zipping iterators. But I've been annoyed about a `useEffect` in react re-running because an object reference changed and not the contents millions of times."
727,4/8/2025 9:49,4/8/2025 9:49,https://developer.mozilla.org/,1,3,5,2,4,7,6,
728,4/8/2025 9:50,4/8/2025 9:50,https://developer.mozilla.org/,7,1,3,6,2,5,4,"Something that would make using Web Workers with ES modules easier is always welcome - it would solve one of the pain points of using them. Also, I ranked Decorators last because it's a feature I'd rather not have in the language in the current shape - they only work with classes, which severely limits their usefulness and encourages using classes for the wrong reasons, which I think has a significant potential for causing long-term damage to the ecosystem."
729,4/8/2025 9:51,4/8/2025 9:51,https://developer.mozilla.org/,7,4,2,6,3,5,1,
730,4/8/2025 9:51,4/8/2025 9:51,https://developer.mozilla.org/,1,3,7,2,4,5,6,"As stated in the proposal description, decorators would make it easier to add certain behaviour (like logging) that could be very useful. Unfortunately it doesn't support parameter decorating, but even the proposal as it is now would be helpful for defining certain reusable behaviour"
731,4/8/2025 9:52,4/8/2025 9:52,https://developer.mozilla.org/,3,1,4,2,5,7,6,it would simplify a lot of build code
732,4/8/2025 9:53,4/8/2025 9:53,https://developer.mozilla.org/,1,2,,,,,,
733,4/8/2025 9:59,4/8/2025 9:59,https://developer.mozilla.org/,1,7,2,6,4,3,5,
734,4/8/2025 10:02,4/8/2025 10:02,https://developer.mozilla.org/,5,1,6,3,7,2,4,
735,4/8/2025 10:05,4/8/2025 10:05,https://developer.mozilla.org/,2,6,3,5,7,4,1,"Iterator sequences and decorators would be nice syntactic sugar.  I can see how deferred module evaluation would be useful for performance.  The rest don't really matter for me. I can imagine scenarios for joint iteration and the JSON source are useful, but I rarely if ever would run in to them. The phase imports would not affect me at all.  All of these are in the ""nice to have"" category and not a fundamental improvement to the language. How about proper OOP? Or web components that actually work the way I expect?"
736,4/8/2025 10:11,4/8/2025 10:11,https://developer.mozilla.org/,1,4,2,6,7,5,3,
737,4/8/2025 10:11,4/8/2025 10:11,https://developer.mozilla.org/,1,3,2,4,6,5,7,I would need to write far less code and that is awesome
738,4/8/2025 10:16,4/8/2025 10:16,https://developer.mozilla.org/,3,7,4,6,5,1,2,
739,4/8/2025 10:16,4/8/2025 10:16,https://developer.mozilla.org/,7,5,6,3,4,2,1,"In other languages, iterator chains and zips are very useful. I believe it is a piece missing from JS"
740,4/8/2025 10:17,4/8/2025 10:17,https://developer.mozilla.org/,2,1,3,7,5,6,4,
741,4/8/2025 10:17,4/8/2025 10:17,https://developer.mozilla.org/,1,4,3,7,2,5,6,
742,4/8/2025 10:17,4/8/2025 10:17,https://developer.mozilla.org/,7,5,2,1,6,3,4,
743,4/8/2025 10:17,4/8/2025 10:17,https://developer.mozilla.org/,5,2,3,4,1,6,7,Source and ESM phase would improve the Worker ergonomics a lot. These are the most important proposals together with deferred module evaluation since they cannot be implemented in userland.
744,4/8/2025 10:17,4/8/2025 10:17,https://developer.mozilla.org/,3,6,4,7,5,2,1,I very often find myself implementing something like that at one point or another anyway. But fix dates first!
745,4/8/2025 10:18,4/8/2025 10:18,https://developer.mozilla.org/,3,1,2,5,6,7,4,
746,4/8/2025 10:19,4/8/2025 10:19,https://developer.mozilla.org/,1,7,5,4,6,3,2,"Being able to use decorators and updated iterators from the proposals would greatly increase our productivity, reduce code complexity and help us to be able to use more of the browser natively instead of relying on build tools like Typescript (i.e. for Decorators)."
747,4/8/2025 10:22,4/8/2025 10:22,https://developer.mozilla.org/,7,1,5,2,6,3,4,"I like using web workers, but really dislike how you need to jump through so many loops to initialize them properly / cleanly. ESM Phase Imports looks like it solves a lot of problems regarding them.  JSON.parse stuff just seems like it's the correct way for it to work. Lossiness was a mistake.  Iterator stuff seems useful as I slowly venture deeper into the waters of iterators. While everything else below that are just not things I'm concerned / care about. "
748,4/8/2025 10:22,4/8/2025 10:22,https://developer.mozilla.org/,7,6,5,4,3,2,1,"Iterators are bare bones in Javascript. As for JSON parsing, it could use the improvements suggested. Source phase imports are good since they will allow for WASM Modules. Deferred module evaluation sounds pleasant given it will improve performance. Decorators are a bad idea, due to the increasing levels of abstraction and moving parts they would introduce, i.e more mental overhead for developers."
749,4/8/2025 10:23,4/8/2025 10:23,https://developer.mozilla.org/,6,3,1,5,2,4,7,
750,4/8/2025 10:25,4/8/2025 10:25,https://developer-mozilla-org.translate.goog/,1,2,7,6,3,5,4,
751,4/8/2025 10:27,4/8/2025 10:27,https://developer.mozilla.org/,4,7,5,1,2,6,3,help me to work with response to call API
752,4/8/2025 10:29,4/8/2025 10:29,https://developer.mozilla.org/,1,6,2,3,5,4,7,"Decorators are huge in terms of the flexibility they provide with generated code. I am biased in that I'm really acclimated to them through professional use of Angular and Dart over the past few years, both of which heavily use decorators to accomplish tasks."
753,4/8/2025 10:30,4/8/2025 10:30,https://developer.mozilla.org/,5,6,4,3,7,2,1,
754,4/8/2025 10:30,4/8/2025 10:30,https://developer.mozilla.org/,1,6,4,7,5,3,2,It would allow for boiler plate code to be encapsulated making it easier to design custom frameworks/SDKs
755,4/8/2025 10:35,4/8/2025 10:35,https://developer.mozilla.org/,4,6,7,3,5,1,2,
756,4/8/2025 10:36,4/8/2025 10:36,https://developer.mozilla.org/,7,5,6,4,1,3,2,
757,4/8/2025 10:36,4/8/2025 10:36,https://developer.mozilla.org/,5,3,1,4,2,7,6,"My legacy JS module system had the ability to defer module evaluation, which was useful in certain situations (typically to avoid circular dependency errors). "
758,4/8/2025 10:36,4/8/2025 10:36,https://developer.mozilla.org/,5,4,6,2,1,7,3,
759,4/8/2025 10:39,4/8/2025 10:39,https://developer.mozilla.org/,1,6,2,5,7,4,3,"I'm a newcomer to the front-end development career, and I think decorators could help on the development of reactive libraries that are closer to vanilla Javascript."
760,4/8/2025 10:40,4/8/2025 10:40,https://developer.mozilla.org/,3,2,5,4,7,1,6,
761,4/8/2025 10:40,4/8/2025 10:40,https://developer.mozilla.org/,7,2,1,5,6,4,3,
762,4/8/2025 10:41,4/8/2025 10:41,https://developer.mozilla.org/,2,7,3,1,6,4,5,"addresses the issue of lossy round-tripping, especially for BigInt and Date objects"
763,4/8/2025 10:41,4/8/2025 10:41,https://developer.mozilla.org/,1,3,2,5,4,6,7,"Working on larger enterprise applications, deferred module evaluation would save us a lot of time in network requests and evaluation on the client."
764,4/8/2025 10:43,4/8/2025 10:43,https://developer.mozilla.org/,2,6,4,7,5,1,3,"I would LOVE a standard zip function, as I work with iterators very often and would appreciate a standardized and more idiomatic way to consume iterators and iterables in parallel."
765,4/8/2025 10:44,4/8/2025 10:44,https://developer.mozilla.org/,4,6,3,5,7,1,2,
766,4/8/2025 10:45,4/8/2025 10:45,https://developer.mozilla.org/,3,6,4,5,7,1,2,"As a frontend developer working on JS-heavy SPAs, I often encouter the need for joint iteration. I usually solve this by creating intermediate mutable variables and using them directly, or to index into a second collection. This tends to be quite error-prone, and the existence of a `zip` function would be very welcome."
767,4/8/2025 10:48,4/8/2025 10:48,https://developer.mozilla.org/,1,7,6,4,5,2,3,
768,4/8/2025 10:48,4/8/2025 10:48,https://developer.mozilla.org/,,,,,,,,
769,4/8/2025 10:49,4/8/2025 10:49,https://developer.mozilla.org/,,,,,,,,
770,4/8/2025 10:49,4/8/2025 10:49,https://developer.mozilla.org/,7,4,1,3,2,6,5,
771,4/8/2025 10:50,4/8/2025 10:50,https://developer.mozilla.org/,1,7,2,6,3,4,5,"Decorators are commonplace in more ""mature"" languages like Python and Java. Having them available in JavaScript will help make the language more mature while also giving me extra utilities that are easy to drop in and out of my projects"
772,4/8/2025 10:52,4/8/2025 10:52,https://developer.mozilla.org/,1,5,2,4,3,6,7,
773,4/8/2025 10:54,4/8/2025 10:54,https://developer.mozilla.org/,,,,,,,,
774,4/8/2025 10:56,4/8/2025 10:56,https://developer.mozilla.org/,,,,,,,,
775,4/8/2025 10:57,4/8/2025 10:57,https://developer.mozilla.org/,1,2,3,6,4,5,7,
776,4/8/2025 10:58,4/8/2025 10:58,https://developer.mozilla.org/,,,,,,,,
777,4/8/2025 11:01,4/8/2025 11:01,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,7,5,1,6,4,3,2,
778,4/8/2025 11:04,4/8/2025 11:04,https://developer.mozilla.org/,2,5,3,7,6,1,4,
779,4/8/2025 11:07,4/8/2025 11:07,https://developer.mozilla.org/,1,,,3,,2,,The technical gotchas of decorators in their current state (TypeScript) have been a source of pain for me in the past.  Maybe not anymore if they were native to JavaScript.
780,4/8/2025 11:09,4/8/2025 11:09,https://developer.mozilla.org/,3,7,5,4,6,2,1,
781,4/8/2025 11:09,4/8/2025 11:09,https://developer.mozilla.org/,,,,,,,,
782,4/8/2025 11:09,4/8/2025 11:09,https://developer.mozilla.org/,1,2,3,7,4,6,5,
783,4/8/2025 11:13,4/8/2025 11:13,https://developer.mozilla.org/,7,2,3,4,1,5,6,Generally I think you want a language to change slowly. I think the module features probably bring the most bang for the added complexity. I'm not sure the others have the same ratio. Ideally the focus would be to reduce complexity for both use and implementation but that is a big ask.
784,4/8/2025 11:14,4/8/2025 11:14,https://developer.mozilla.org/,3,2,5,6,1,7,4,I use workers a lot and making them easier for bundlers would make them easier for me too
785,4/8/2025 11:15,4/8/2025 11:15,https://developer.mozilla.org/,7,6,4,1,5,3,2,"From all seven choices, JSON.parse is the only one I know I use."
786,4/8/2025 11:16,4/8/2025 11:16,https://developer.mozilla.org/,1,3,2,6,5,4,7,
787,4/8/2025 11:16,4/8/2025 11:16,https://developer.mozilla.org/,1,5,2,7,6,3,4,"Decorators would help a lot writing common logic in functions and methods, avoiding code redundancy and helping creating complex features like function cache or methods access modifiers"
788,4/8/2025 11:16,4/8/2025 11:16,https://developer.mozilla.org/,2,5,7,1,6,3,4,
789,4/8/2025 11:17,4/8/2025 11:17,https://developer.mozilla.org/,1,6,7,4,5,2,3,
790,4/8/2025 11:17,4/8/2025 11:17,https://developer.mozilla.org/,1,,,,,,,
791,4/8/2025 11:20,4/8/2025 11:20,https://developer.mozilla.org/,2,,1,,,,,
792,4/8/2025 11:23,4/8/2025 11:23,https://developer.mozilla.org/,,,,,,,,
793,4/8/2025 11:24,4/8/2025 11:24,https://developer.mozilla.org/,1,5,4,2,7,6,3,
794,4/8/2025 11:24,4/8/2025 11:24,https://developer.mozilla.org/,,,,3,,1,2,"Least risky. The others (ESM enhancements) I'm uncertain about even after reading the proposals. Some of the problems identified are interesting. But I'm struggling to be convinced of their practical impact in context of bundling. Static analysis for bundlers is mentioned as a motivation in several proposals, but I don't immediately see how the information or new annotations would be used by them. Maybe these are preparation for a future proposal that really solves a great use case, so I don't see the full picture. Currently, though I only see ""potential benefit for bundlers"" (but how exactly?) and an increase in complexity to existing ESM behavior."
795,4/8/2025 11:25,4/8/2025 11:25,https://developer.mozilla.org/,1,3,2,4,5,7,6,"In our project, using decorators on the API side made really reusable logging metadata to auto-capture info about processes happening runtime and then only retaining that data in a failure. Being able to make common patterns reusable outside of Dependency Injection, etc, would simplify many patterns of good architecture."
796,4/8/2025 11:27,4/8/2025 11:27,https://developer.mozilla.org/,2,,,,,1,,
797,4/8/2025 11:28,4/8/2025 11:28,https://developer.mozilla.org/,1,2,3,4,5,7,6,
798,4/8/2025 11:34,4/8/2025 11:34,https://developer.mozilla.org/,1,6,2,7,5,3,4,
799,4/8/2025 11:34,4/8/2025 11:34,https://developer.mozilla.org/,3,7,5,4,6,1,2,
800,4/8/2025 11:34,4/8/2025 11:34,https://developer.mozilla.org/,7,1,3,2,5,4,6,
801,4/8/2025 11:34,4/8/2025 11:34,https://developer.mozilla.org/,1,5,2,4,7,3,6,
802,4/8/2025 11:36,4/8/2025 11:36,https://developer.mozilla.org/,5,4,3,1,6,7,2,"frankly these all seem kinda whatever, but transporting Date/Temporal objects from server to client without going through strings sounds nice-ish :)"
803,4/8/2025 11:35,4/8/2025 11:35,https://developer.mozilla.org/,7,5,4,2,6,1,3,
804,4/8/2025 11:37,4/8/2025 11:37,https://developer.mozilla.org/,1,7,4,6,5,2,3,"Decorators would simplify a lot of libraries and frameworks, but I don't use decorators anywhere, because of the multiple fragmented implementations."
805,4/8/2025 11:37,4/8/2025 11:37,https://developer.mozilla.org/,,,,,1,,,It would not help me. None of these proposals are remotely useful to me. 
806,4/8/2025 11:38,4/8/2025 11:38,https://developer.mozilla.org/,3,6,1,5,7,4,2,
807,4/8/2025 11:39,4/8/2025 11:39,https://developer.mozilla.org/,2,7,5,1,6,4,3,Module import is not as important to me as decorators or Json module improvements as I find more friction with them than modules
808,4/8/2025 11:41,4/8/2025 11:41,https://developer.mozilla.org/,1,7,2,4,3,5,6,
809,4/8/2025 11:41,4/8/2025 11:41,https://developer.mozilla.org/,7,5,1,3,4,2,6,
810,4/8/2025 11:43,4/8/2025 11:43,https://developer.mozilla.org/,6,2,7,5,1,4,3,It would greatly improve the ergonomics of using WebWorkers and WebAssembly (without relaying in thrid party loaders)
811,4/8/2025 11:46,4/8/2025 11:46,https://developer.mozilla.org/,4,5,7,1,6,3,2,I'm not sure. I'm only filling this out because I was asked to. I wish I could have put items I did not understand into a third (unordered) list because I think I'm only skewing the results (which I wish I wasn't). This is a strange survey that might not be very well designed.
812,4/8/2025 11:47,4/8/2025 11:47,https://developer.mozilla.org/,1,,,,,,,
813,4/8/2025 11:47,4/8/2025 11:47,https://developer.mozilla.org/,1,6,7,4,5,3,2,
814,4/8/2025 11:48,4/8/2025 11:48,https://developer.mozilla.org/,1,2,5,3,7,4,6,
815,4/8/2025 11:48,4/8/2025 11:48,https://developer.mozilla.org/,1,5,6,7,4,3,2,
816,4/8/2025 11:49,4/8/2025 11:49,https://developer.mozilla.org/,4,1,,3,,2,,
817,4/8/2025 11:52,4/8/2025 11:52,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,2,5,7,1,6,3,4,
818,4/8/2025 11:53,4/8/2025 11:53,https://developer.mozilla.org/,1,7,2,5,3,4,6,Decorators for sure would make building custom elements faster and easier. It would allow for much easier reusable things like bound methods and hopefully one step closer to fully featured native reactive properties for web components.
819,4/8/2025 11:55,4/8/2025 11:55,https://developer.mozilla.org/,1,7,2,3,6,4,5,
820,4/8/2025 11:55,4/8/2025 11:55,https://developer.mozilla.org/,4,7,6,5,3,2,1,
821,4/8/2025 11:56,4/8/2025 11:56,https://developer.mozilla.org/,1,3,2,5,4,6,7,"It would be easier to apply tests. For example, if i want to add extra behaviour to a function (@PrintFunctionName function x() {}). "
822,4/8/2025 11:56,4/8/2025 11:56,https://developer.mozilla.org/,,4,5,6,3,2,1,
823,4/8/2025 11:57,4/8/2025 11:57,https://developer.mozilla.org/,1,6,7,4,5,2,3,I try to avoid relying on transpilers and build systems so I like any feature that makes JavaScript more expressive on its own.
824,4/8/2025 11:58,4/8/2025 11:58,https://developer.mozilla.org/,7,6,4,3,5,2,1,"It would further decrease my dependence on utility libraries such as lodash, which is a Good Thing."
825,4/8/2025 12:01,4/8/2025 12:01,https://developer.mozilla.org/,6,3,2,1,4,5,7,"Dealing with a lot of data and running into weird parsing issues, would help a lot to know source"
826,4/8/2025 12:01,4/8/2025 12:01,https://developer.mozilla.org/,1,,,,,,,
827,4/8/2025 12:03,4/8/2025 12:03,https://developer.mozilla.org/,6,3,1,7,2,5,4,"Deferred Module Evaluation will help me simplify my web architecture. It removes a lot of the cognitive overhead when thinking about imports and request waterfalls, letting me focus more on the actual site behavior."
828,4/8/2025 12:05,4/8/2025 12:05,https://developer.mozilla.org/,2,5,1,3,4,7,6,
829,4/8/2025 12:05,4/8/2025 12:05,https://developer.mozilla.org/,1,5,7,3,6,2,4,"Imagine being able to tie a function call to a logging object with just a single line - ""@useLogger({name=""connectionHandler"", enabled=LOGGING_SEVERITY_STATE}) "
830,4/8/2025 12:06,4/8/2025 12:06,https://developer.mozilla.org/,1,7,5,4,6,2,3,
831,4/8/2025 12:09,4/8/2025 12:09,https://developer.mozilla.org/,2,5,4,7,1,6,3,
832,4/8/2025 12:09,4/8/2025 12:09,https://developer.mozilla.org/,,,,,,,,
833,4/8/2025 12:14,4/8/2025 12:14,https://developer.mozilla.org/,4,2,3,7,1,5,6,"Dealing with modules, imports, and bundling is still a pain, and I want all this resolved and worked out and standardized so I can stop thinking about it."
834,4/8/2025 12:14,4/8/2025 12:14,https://developer.mozilla.org/,1,,,,,,,
835,4/8/2025 12:14,4/8/2025 12:14,https://developer.mozilla.org/,7,2,6,5,1,3,4,"I believe that any improvement on WebAssembly space is important for the future of the Web, since it'll open up more options for web applications."
836,4/8/2025 12:15,4/8/2025 12:15,https://developer.mozilla.org/,6,7,1,5,2,4,3,clarify code and execution order 
837,4/8/2025 12:17,4/8/2025 12:17,https://developer.mozilla.org/,1,5,2,7,6,3,4,Decorators would allow for better codebase standards.
838,4/8/2025 12:17,4/8/2025 12:17,https://developer.mozilla.org/,1,,,,2,,,
839,4/8/2025 12:17,4/8/2025 12:17,https://developer.mozilla.org/,1,5,2,7,6,4,3,
840,4/8/2025 12:18,4/8/2025 12:18,https://developer.mozilla.org/,2,4,5,3,1,6,7,
841,4/8/2025 12:27,4/8/2025 12:27,https://developer.mozilla.org/,1,5,7,4,3,6,2,
842,4/8/2025 12:29,4/8/2025 12:29,https://developer.mozilla.org/,,,,,,1,,
843,4/8/2025 12:29,4/8/2025 12:29,https://developer.mozilla.org/,4,7,1,5,6,2,3,"Very niche usecases. Probably will use Deferred module evaluation, and probably indirectly - as a result of build and bundle tools'."
844,4/8/2025 12:30,4/8/2025 12:30,https://developer.mozilla.org/,1,3,7,6,5,2,4,
845,4/8/2025 12:30,4/8/2025 12:30,https://developer.mozilla.org/,3,1,4,2,6,5,7,
846,4/8/2025 12:31,4/8/2025 12:31,https://developer.mozilla.org/,7,3,5,6,4,1,2,
847,4/8/2025 12:32,4/8/2025 12:32,https://developer.mozilla.org/,1,,,,,,,
848,4/8/2025 12:33,4/8/2025 12:33,https://developer.mozilla.org/,2,,1,,,,,
849,4/8/2025 12:35,4/8/2025 12:35,https://developer.mozilla.org/,2,,,1,,,,
850,4/8/2025 12:36,4/8/2025 12:36,https://developer.mozilla.org/,1,4,3,2,5,6,7,"I use decorators heavily w/ Lit, and having less shipped boilerplates to use those would be beneficial for my apps & libs, while retaining the boons in term of devexp they offers"
851,4/8/2025 12:36,4/8/2025 12:36,https://developer.mozilla.org/,1,4,2,3,5,7,6,
852,4/8/2025 12:36,4/8/2025 12:36,https://developer.mozilla.org/,1,7,5,4,6,2,3,
853,4/8/2025 12:38,4/8/2025 12:38,https://developer.mozilla.org/,,,,,,1,,i love zip()
854,4/8/2025 12:38,4/8/2025 12:38,https://developer.mozilla.org/,2,,3,,,,1,
855,4/8/2025 12:39,4/8/2025 12:39,https://developer.mozilla.org/,7,3,4,1,2,6,5,My ranking is based on how I will immediately use them on current projects.
856,4/8/2025 12:40,4/8/2025 12:40,https://developer.mozilla.org/,1,7,6,4,5,3,2,
857,4/8/2025 12:40,4/8/2025 12:40,https://developer.mozilla.org/,,,2,1,,,,Being able to transmit BigInt values losslessly would be very helpful for JSON APIs I have worked on. 
858,4/8/2025 12:43,4/8/2025 12:43,https://developer.mozilla.org/,,,,,,,,
859,4/8/2025 12:47,4/8/2025 12:47,https://developer.mozilla.org/,7,2,1,6,3,5,4,
860,4/8/2025 12:52,4/8/2025 12:52,https://developer.mozilla.org/,7,6,5,3,4,1,2,Reduce the need of imperative loops which are prone to errors
861,4/8/2025 12:52,4/8/2025 12:52,https://developer.mozilla.org/,2,3,1,5,7,6,4,
862,4/8/2025 12:53,4/8/2025 12:54,https://developer.mozilla.org/,,,,,,,,
863,4/8/2025 12:54,4/8/2025 12:54,https://developer.mozilla.org/,2,,,1,,,3,
864,4/8/2025 12:55,4/8/2025 12:55,https://developer.mozilla.org/,7,6,1,2,3,4,5,"This would help me majorly. There have always been instances for me where I have a whole file with a ton of subclasses, and instead of having to call each and every individual class, I have wanted to be able to import all of them under a different name. Allowing for me to know where the function or class came from in the context of my code, and to have all of the modules that I will need in my code ready to use at a moment's notice."
865,4/8/2025 12:55,4/8/2025 12:55,https://developer.mozilla.org/,4,7,2,5,6,1,3,
866,4/8/2025 13:00,4/8/2025 13:00,https://developer.mozilla.org/,,2,3,,1,,,"WebAssembly modules for the win, thus the first two options. Having better WASM integration just opens up great possibilities, also because working with it currently is possible but quite cumbersome. Deferring module evaluation would have been very handy for tackling intial loading performance of a game I built once. It got hacky with only dynamic imports being available. I do not know use-cases for the other options/proposals I would have had in the past."
867,4/8/2025 13:03,4/8/2025 13:03,https://developer.mozilla.org/,2,,,,,3,1,
868,4/8/2025 13:05,4/8/2025 13:05,https://developer.mozilla.org/,,,,,,,,
869,4/8/2025 13:06,4/8/2025 13:06,https://developer.mozilla.org/,,,,,,,,"Less boilerplate code for lots of common scenarios. It also favors Aspect Oriented Programming, allowing to put transversal concerns on reusable libraries"
870,4/8/2025 13:09,4/8/2025 13:09,https://developer.mozilla.org/,,,,,,,,I've wanted to use iterators directly more often but the lack of standard utilities available would discourage my use of them; and looking at the proposals I don't really find reaching out to generator functions as demonstrated ergonomic and would prefer to be able to combine iterators with the new utility
871,4/8/2025 13:11,4/8/2025 13:11,https://developer.mozilla.org/,5,1,7,2,6,4,3,Iterator functions are commonly used in all projects
872,4/8/2025 13:11,4/8/2025 13:11,https://developer.mozilla.org/,,,,,,,,
873,4/8/2025 13:11,4/8/2025 13:11,https://developer.mozilla.org/,1,7,5,4,6,2,3,"Decorators are super common in the ecosystem, but they require a transpiler step to use. There's also slight variations in how they work (old vs new Typescript and the proposal ones)"
874,4/8/2025 13:14,4/8/2025 13:14,https://developer.mozilla.org/,,,,,,,,
875,4/8/2025 13:14,4/8/2025 13:14,https://developer.mozilla.org/,,,,,,,,
876,4/8/2025 13:15,4/8/2025 13:15,https://developer.mozilla.org/,6,3,1,2,7,4,5,
877,4/8/2025 13:18,4/8/2025 13:18,https://developer.mozilla.org/,1,6,4,2,5,3,7,"Decorators make it significantly easier to create reusable bits of code for methods and functions in particular - as someone coming from Python, I'm quite used to decorators as they're used quite often (for example, the flask web framework is based almost entirely around decorators) and while JavaScript's support for function expressions does mean you can work around this in classes, decorators are a lot neater and more readable in my opinion, especially when using multiple decorators."
878,4/8/2025 13:21,4/8/2025 13:21,https://developer.mozilla.org/,2,6,5,7,4,3,1,
879,4/8/2025 13:21,4/8/2025 13:21,https://developer.mozilla.org/,1,6,7,4,5,3,2,
880,4/8/2025 13:23,4/8/2025 13:23,https://developer.mozilla.org/,3,4,1,5,2,7,6,"Would make it easier to built faster sites that run on slower hardware, without shoving async absolutely everywhere"
881,4/8/2025 13:23,4/8/2025 13:23,https://developer.mozilla.org/,3,1,2,6,7,5,4,
882,4/8/2025 13:24,4/8/2025 13:24,https://developer.mozilla.org/,1,5,6,7,4,2,3,A lot of libraries use decorators to expose a convenient API. Making decorators part of the language would make using and implementing this libraries easier.
883,4/8/2025 13:25,4/8/2025 13:25,https://developer.mozilla.org/,3,1,,2,,,,
884,4/8/2025 13:25,4/8/2025 13:25,https://developer.mozilla.org/,4,3,1,5,2,6,7,
885,4/8/2025 13:35,4/8/2025 13:35,https://developer.mozilla.org/,7,3,6,1,5,4,2,
886,4/8/2025 13:37,4/8/2025 13:37,https://developer.mozilla.org/,7,5,1,3,6,2,4,"I work on a team that builds workforce management tooling. Being able to load faster for all users in all environments despite devices or poor connection is important and would help our users have a better experience.  I'm going to add why I put Decorators last - because that type of abstraction leads to messy, impossible to maintain code.  Any code base I've ever worked in that used decorators was loathed by everyone who touched it. No one knows what's going on, you can't find where the logic is coming from, debugging is difficult, and it's just an overall nightmare. I am not in support of adding this as a feature at all, ever. Please get rid of Decorators forever as a coding practice. It hides away important code that future devs need to know and have no way of easily figuring out what's it's doing. I'd argue it's bad practice to do this ever. Find another way to implement, even if it takes more time. Please god no, don't add this."
887,4/8/2025 13:37,4/8/2025 13:37,https://developer.mozilla.org/,,,,,,,,
888,4/8/2025 13:39,4/8/2025 13:39,https://developer.mozilla.org/,1,6,4,7,3,2,5,"I frequently use classes and class based programming. Decorators would give me much greater flexibility, replacing sometimes convoluted mixins and inheritance particularly when defining custom elements."
889,4/8/2025 13:43,4/8/2025 13:43,https://developer.mozilla.org/,,,,,,,,
890,4/8/2025 13:45,4/8/2025 13:45,https://developer.mozilla.org/,1,6,7,5,4,2,3,
891,4/8/2025 13:46,4/8/2025 13:46,https://developer.mozilla.org/,1,6,7,2,4,3,5,
892,4/8/2025 13:48,4/8/2025 13:48,https://developer.mozilla.org/,1,4,6,5,3,7,2,
893,4/8/2025 13:50,4/8/2025 13:50,https://developer.mozilla.org/,,,,,,,,
894,4/8/2025 13:53,4/8/2025 13:53,https://developer.mozilla.org/,4,7,5,1,6,3,2,"We rely on JSON exclusively for all comms; being able to support all kinds of objects and values, especially numbers with exact precision outweighs the other suggestions by orders of magnitude.  I care little for decorators, and not at all about the module evaluation and imports suggestions."
895,4/8/2025 13:54,4/8/2025 13:54,https://developer.mozilla.org/,2,3,1,5,6,7,4,
896,4/8/2025 13:55,4/8/2025 13:55,https://developer.mozilla.org/,1,5,7,4,3,2,6,
897,4/8/2025 13:55,4/8/2025 13:55,https://developer.mozilla.org/,,,,,,,,"to be honest, none of these are of interest to me as a javascript developer."
898,4/8/2025 14:00,4/8/2025 14:00,https://developer.mozilla.org/,1,2,4,5,3,6,7,
899,4/8/2025 14:01,4/8/2025 14:01,https://developer.mozilla.org/,3,1,2,4,5,6,7,
900,4/8/2025 14:04,4/8/2025 14:04,https://developer.mozilla.org/,1,5,3,2,4,7,6,
901,4/8/2025 14:06,4/8/2025 14:06,https://developer.mozilla.org/,2,5,1,6,7,4,3,
902,4/8/2025 14:08,4/8/2025 14:08,https://developer.mozilla.org/,7,4,2,1,3,6,5,"It would help dealing with JSON files where, for example, a number property would be too big for JS to handle without losses"
903,4/8/2025 14:10,4/8/2025 14:10,https://developer.mozilla.org/,1,5,4,6,3,2,7,Metaprogramming ftw
904,4/8/2025 14:12,4/8/2025 14:12,https://developer.mozilla.org/,4,3,1,7,6,5,2,It would clear the event earlier right? With it the user could interact earlier while some js is loading
905,4/8/2025 14:13,4/8/2025 14:13,https://developer.mozilla.org/,1,5,6,7,4,3,2,
906,4/8/2025 14:14,4/8/2025 14:14,https://developer.mozilla.org/,,,,,,,,"It would be good to be able to more smoothly handle stringifed objects in JSON payloads. Honestly though, none of these seem particularly high priority to me. Improvements to performance are always nice, but the JS ecosystem is perpetually playing catch up with module syntax, and I worry expanding the spec more will just exacerbate that issue."
907,4/8/2025 14:15,4/8/2025 14:15,https://developer.mozilla.org/,,4,1,,5,2,3,
908,4/8/2025 14:17,4/8/2025 14:17,https://developer.mozilla.org/,,,,,,,,
909,4/8/2025 14:27,4/8/2025 14:27,https://developer.mozilla.org/,,,,,,,,
910,4/8/2025 14:29,4/8/2025 14:29,https://developer.mozilla.org/,7,2,5,4,6,1,3,"`zip` is an essential method of iterators found in many languages like Rust and Python. Since iterator methods are fairly new, ideally the time period where only some iterator methods are supported but not all should be minimized. That way, when browser support is good enough to open the way for using iterator methods, `zip` will be available too."
911,4/8/2025 14:30,4/8/2025 14:30,https://developer.mozilla.org/,1,7,3,4,2,6,5,
912,4/8/2025 14:31,4/8/2025 14:31,https://developer.mozilla.org/,3,,5,4,,1,2,"Using indexes for iterating over multiple arrays is less clear than using .zip() in other languages, so I'd like to be able to do the same in js."
913,4/8/2025 14:31,4/8/2025 14:31,https://developer.mozilla.org/,4,2,3,5,1,6,7,
914,4/8/2025 14:36,4/8/2025 14:36,https://developer.mozilla.org/,1,4,3,2,5,7,6,"Decorators might simplify tooling, also nice to have in raw JS!"
915,4/8/2025 14:36,4/8/2025 14:36,https://developer.mozilla.org/,7,5,1,6,4,2,3,When handling bigger applications it would be nice for the user to not have to wait too much longer on another server round trip just for the sake of loading new sections of the app that we decided to offload for later which sometimes just interjects user experience in a flow-break manner
916,4/8/2025 14:39,4/8/2025 14:39,https://developer.mozilla.org/,1,6,7,2,5,4,3,
917,4/8/2025 14:39,4/8/2025 14:39,https://developer.mozilla.org/,1,7,5,2,6,4,3,"Decorators are what we need for implementing variations of methods in a consistent, maintainable way. (And they're pretty huge for logging in particular.)"
918,4/8/2025 14:39,4/8/2025 14:39,https://developer.mozilla.org/,7,2,6,5,1,4,3,
919,4/8/2025 14:41,4/8/2025 14:41,https://developer.mozilla.org/,7,4,6,2,5,3,1,
920,4/8/2025 14:43,4/8/2025 14:43,https://developer.mozilla.org/,1,3,2,5,4,7,6,
921,4/8/2025 14:43,4/8/2025 14:43,https://developer.mozilla.org/,1,3,2,5,4,7,6,i thinlk decorators can help me
922,4/8/2025 14:46,4/8/2025 14:46,https://developer.mozilla.org/,1,6,4,5,7,2,3,Allows for better maintainable code.
923,4/8/2025 14:46,4/8/2025 14:46,https://developer.mozilla.org/,,,,,,1,2,"more iterator tools / options might be useful. wouldn't know for sure until performance and actual implementation were clear in production code.  The other options, I excluded, are clearly designed as security controls, which is contrary to the loose typed nature of Javascript. A move toward tighter security, in an already crippled web code ecosystem, is plainly a terrible idea. Deferring code until graphs report being loaded, inserting opportunities for 3rd parties to review code execution characteristics (also before loading), etc. do NOT help the user or the developer, but arbitrary 3rd parties, potentially. DO NOT ADD THESE TO JAVASCRIPT."
924,4/8/2025 14:47,4/8/2025 14:47,https://developer.mozilla.org/,,,,,,,,alt proposal: symbol literals would be a decent start
925,4/8/2025 14:52,4/8/2025 14:52,https://developer.mozilla.org/,5,4,1,2,3,7,6,
926,4/8/2025 14:54,4/8/2025 14:54,https://developer.mozilla.org/,3,,,,,1,2,"Anything with iterators is always helpful. They add a lot more fundamental capability to the language that many developers could use daily. Decorators have been a long-standing want in JavaScript natively, and it would really be nice to at least have them for class methods."
927,4/8/2025 14:55,4/8/2025 14:55,https://developer.mozilla.org/,,,,,,,,"Where is enumerations and pattern matching?  It's already a 2025 and I still have to find a workaround to support the very basic stuff in a programming world. I know there is a proposal for that but there is too much things in a proposal and there is a lot of people not happy with that and we probably see this in Ecma in around 2100.  Instead, we are talking about decorators which only applies to OOP and class methods. And not basic function? huh. I want meta-data there as well!  I would love to see `unless`, `when` as alternative for `if (!...)` and `if (...)`.  I also want try...catch expression!!! There is already such a cool thing in a such expressive language and some of the statements are not, why... There is already a Promise and not a synchronous analogue to do the expressions e.g. `Result.try(predicate, arg, ...).catch(...)`.  There is a difference in behaviour between (URLSearchParams|FormData|etc...).set and (Map|Set).set.  So many things in that language making a job uncomfortable in details and it seem  to be the solution is always coming late."
928,4/8/2025 15:00,4/8/2025 15:00,https://developer.mozilla.org/,7,3,2,1,5,4,6,
929,4/8/2025 15:00,4/8/2025 15:00,https://developer.mozilla.org/,1,,,2,,,,
930,4/8/2025 15:02,4/8/2025 15:02,https://developer.mozilla.org/,2,6,1,4,3,7,5,"Help improve the performance of large, bundled applications and allow for more performance on workers environments."
931,4/8/2025 15:03,4/8/2025 15:03,,6,5,7,1,4,2,3,
932,4/8/2025 15:05,4/8/2025 15:05,https://developer.mozilla.org/,,,,,,,,
933,4/8/2025 15:08,4/8/2025 15:08,https://developer.mozilla.org/,5,4,6,2,1,7,3,I  don't  use  javasricpt
934,4/8/2025 15:10,4/8/2025 15:10,https://developer.mozilla.org/,3,6,4,7,5,2,1,
935,4/8/2025 15:12,4/8/2025 15:12,https://developer.mozilla.org/,,,,,,,,
936,4/8/2025 15:14,4/8/2025 15:14,https://developer.mozilla.org/,,,,2,,1,3,"Personally, I don't use half of those, but I think improvements to iterators would be nice."
937,4/8/2025 15:15,4/8/2025 15:15,https://developer.mozilla.org/,,,,,,,,
938,4/8/2025 15:16,4/8/2025 15:16,https://developer.mozilla.org/,1,6,4,7,5,2,3,"i'm still using legacy decorators as part of my tooling: to validate data incoming from the backend through the class field decorators. not the best thing, but workable. i feel i'll switch to some other serializer/deserializer, then JSON.parse would be of more interest – but currently it is slow enough for me to look for another options."
939,4/8/2025 15:17,4/8/2025 15:17,https://developer.mozilla.org/,1,6,3,7,2,4,5,
940,4/8/2025 15:18,4/8/2025 15:18,https://developer.mozilla.org/,6,3,7,1,2,4,5,
941,4/8/2025 15:20,4/8/2025 15:20,https://developer.mozilla.org/,,,,1,,,,
942,4/8/2025 15:21,4/8/2025 15:21,https://developer.mozilla.org/,4,1,6,3,5,2,7,
943,4/8/2025 15:25,4/8/2025 15:25,https://developer.mozilla.org/,,,,,,,,
944,4/8/2025 15:25,4/8/2025 15:25,https://developer.mozilla.org/,3,4,6,7,5,2,1,More flexibility when dealing w data
945,4/8/2025 15:27,4/8/2025 15:27,https://developer.mozilla.org/,7,5,3,6,4,1,2,"I transform data structures everyday. Objects, arrays, sets and maps can all be iterated over, any built-in method helping me on that journey is profitable for me."
946,4/8/2025 15:27,4/8/2025 15:27,https://developer.mozilla.org/,,,,,,,,
947,4/8/2025 15:27,4/8/2025 15:27,https://developer.mozilla.org/,1,4,2,6,3,7,5,I think it's important to not make JavaScript too verbose
948,4/8/2025 15:29,4/8/2025 15:29,https://developer.mozilla.org/,,1,3,2,,,,
949,4/8/2025 15:36,4/8/2025 15:36,https://developer.mozilla.org/,1,6,5,3,7,4,2,I been using decorators. I created a framework to interact between iframes and main window. My clients just have to decorate function that actually do the work in the main window (service) and decorate empty function in the iframe (client). The decorator abstracts the communication method between the two. making the code easy to use and maintain 
950,4/8/2025 15:36,4/8/2025 15:36,https://developer.mozilla.org/,7,5,4,3,6,2,1,Efficient traversal of iterator sequences to handle data easily
951,4/8/2025 15:43,4/8/2025 15:43,https://developer.mozilla.org/,7,4,6,2,3,1,5,
952,4/8/2025 15:43,4/8/2025 15:43,https://developer.mozilla.org/,3,,6,1,4,2,5,
953,4/8/2025 15:49,4/8/2025 15:49,https://developer.mozilla.org/,,2,,,1,,,
954,4/8/2025 15:49,4/8/2025 15:49,https://developer.mozilla.org/,1,5,6,2,7,4,3,I write a library of custom elements which use a lot of decorators to wrap object properties into accessors scheduling view update. 
955,4/8/2025 15:51,4/8/2025 15:51,https://developer.mozilla.org/,,,,,,,,
956,4/8/2025 15:57,4/8/2025 15:57,https://developer.mozilla.org/,6,2,5,7,1,3,4,
957,4/8/2025 15:58,4/8/2025 15:58,https://developer.mozilla.org/,1,,,,,,,
958,4/8/2025 15:59,4/8/2025 15:59,https://developer.mozilla.org/,4,2,3,7,1,6,5,
959,4/8/2025 16:01,4/8/2025 16:01,https://developer.mozilla.org/,1,5,3,6,7,2,4,
960,4/8/2025 16:05,4/8/2025 16:05,https://developer.mozilla.org/,7,2,6,5,1,3,4,"I have done some work with webassembly, and this looks like it might make it easier."
961,4/8/2025 16:05,4/8/2025 16:05,https://developer.mozilla.org/,1,7,3,2,6,4,5,"It seems useful. Although I can't currently think of ways I could use it, library and framework maintainers could utilize it."
962,4/8/2025 16:06,4/8/2025 16:06,https://developer.mozilla.org/,1,6,5,2,7,3,4,
963,4/8/2025 16:08,4/8/2025 16:08,https://developer.mozilla.org/,3,2,4,5,1,6,7,I am building up my knowledge to be able to develop applications using Web Assembly. The description for the Source phase imports made the more sense to me to select that spec as first order. I think anything that improves Web Assembly integration and usability should be priority. Greetings!
964,4/8/2025 16:12,4/8/2025 16:12,https://developer.mozilla.org/,1,3,2,4,5,7,6,It will help me know how to code
965,4/8/2025 16:13,4/8/2025 16:13,https://developer.mozilla.org/,3,5,4,6,7,2,1,i mostly care about iterators and decoratos to be fair
966,4/8/2025 16:15,4/8/2025 16:15,https://developer.mozilla.org/,1,2,4,3,5,6,7,Decorators would be game changing for JavaScript developers
967,4/8/2025 16:27,4/8/2025 16:27,https://developer.mozilla.org/,2,,,,,1,3,"Joint iteration is incredibly helpful in Python to write code in a more functional style. Lodash hasn't had a new release in a while, so I'd love to see this in the std lib."
968,4/8/2025 16:29,4/8/2025 16:29,https://developer.mozilla.org/,7,5,3,6,4,2,1,
969,4/8/2025 16:30,4/8/2025 16:30,https://developer.mozilla.org/,7,3,5,6,4,1,2,It would simplify my code and make it prettier.
970,4/8/2025 16:33,4/8/2025 16:33,https://developer.mozilla.org/,4,,,1,,2,3,
971,4/8/2025 16:40,4/8/2025 16:40,https://developer.mozilla.org/,4,3,1,5,2,6,7,
972,4/8/2025 16:41,4/8/2025 16:41,https://developer.mozilla.org/,1,5,6,2,7,3,4,
973,4/8/2025 16:45,4/8/2025 16:45,https://developer.mozilla.org/,1,3,7,5,6,2,4,I write a lot of nodejs code that could be replaced with decorators.
974,4/8/2025 16:46,4/8/2025 16:46,https://developer.mozilla.org/,1,3,7,4,2,6,5,"I do love iterators, especially for pipelines. Decorators seem nice, feels like someone will make a nice library for them. I'd also like more wasm support with an easier import."
975,4/8/2025 16:49,4/8/2025 16:49,https://developer.mozilla.org/,,,,,,,,"honestly, i don't understand most of these and the ones i do i don't care about"
976,4/8/2025 16:55,4/8/2025 16:55,https://developer.mozilla.org/,7,2,3,4,1,5,6,
977,4/8/2025 17:04,4/8/2025 17:04,https://developer.mozilla.org/,,1,2,,,,,
978,4/8/2025 17:06,4/8/2025 17:06,https://developer.mozilla.org/,2,4,7,1,5,6,3,JSON: Prevent large integer precision errors. Preserve the source's chosen formatting and escape sequences.
979,4/8/2025 17:07,4/8/2025 17:07,https://developer.mozilla.org/,3,6,2,7,1,4,5,
980,4/8/2025 17:11,4/8/2025 17:11,https://developer.mozilla.org/,,,,3,,2,1,
981,4/8/2025 17:16,4/8/2025 17:16,https://developer.mozilla.org/,,,,,,,,
982,4/8/2025 17:18,4/8/2025 17:18,https://developer.mozilla.org/,7,1,6,4,5,2,3,"I've had a lot of issues with loading workers, especially when the bundler.. bundles, renaming files, causing the worker JS URL to become invalid. My solution is very ugly and not reliable, and it would be very helpful to have a native solution to this."
983,4/8/2025 17:20,4/8/2025 17:20,https://developer.mozilla.org/,1,7,2,5,6,4,3,Decorators have been in TS for years and many codebases are already using them. Additionally they allow adding behaviors to code in an elegant way.
984,4/8/2025 17:22,4/8/2025 17:22,https://developer.mozilla.org/,4,3,1,5,2,6,7,"Deferred module evolution would greatly help performance, and it could very be helpful if implemented correctly."
985,4/8/2025 17:23,4/8/2025 17:23,https://developer.mozilla.org/,,,,,,,,
986,4/8/2025 17:25,4/8/2025 17:25,https://developer.mozilla.org/,7,1,4,6,5,2,3,
987,4/8/2025 17:38,4/8/2025 17:38,https://developer.mozilla.org/,1,7,5,4,6,2,3,
988,4/8/2025 17:42,4/8/2025 17:42,https://developer.mozilla.org/,1,2,5,7,6,4,3,
989,4/8/2025 17:50,4/8/2025 17:50,https://developer.mozilla.org/,7,5,3,2,4,6,1,
990,4/8/2025 17:55,4/8/2025 17:55,https://developer.mozilla.org/,6,3,7,2,1,5,4,"i cant understand it ,, i just ranked it random because is a survey"
991,4/8/2025 17:56,4/8/2025 17:56,https://developer.mozilla.org/,1,4,3,7,2,5,6,"I only really care about decorators and source phase imports, all other things I don't use as much."
992,4/8/2025 17:59,4/8/2025 17:59,https://developer.mozilla.org/,4,6,5,1,7,2,3,
993,4/8/2025 18:00,4/8/2025 18:00,https://developer.mozilla.org/,,,,1,,,,
994,4/8/2025 18:02,4/8/2025 18:02,https://developer.mozilla.org/,1,5,4,7,6,2,3,
995,4/8/2025 18:05,4/8/2025 18:05,https://developer.mozilla.org/,7,5,6,1,4,2,3,I prefer focus in functionality over view
996,4/8/2025 18:06,4/8/2025 18:06,https://developer.mozilla.org/,7,2,3,6,1,5,4,
997,4/8/2025 18:07,4/8/2025 18:07,https://developer.mozilla.org/,3,4,1,2,5,6,7,Deferred module evaluation has the potential to supped up all modern sites and applications which utilize WebView.
998,4/8/2025 18:11,4/8/2025 18:11,https://developer.mozilla.org/,,,,,,,,Decorators
999,4/8/2025 18:15,4/8/2025 18:15,https://developer.mozilla.org/,4,3,1,5,2,7,6,
1000,4/8/2025 18:16,4/8/2025 18:16,https://survey.alchemer.com/,1,2,4,3,6,7,5,
1001,4/8/2025 18:20,4/8/2025 18:20,https://developer.mozilla.org/,3,1,7,6,2,4,5,
1002,4/8/2025 18:23,4/8/2025 18:23,https://developer.mozilla.org/,1,4,2,5,3,6,7,
1003,4/8/2025 18:26,4/8/2025 18:26,https://developer.mozilla.org/,7,1,5,6,2,4,3,
1004,4/8/2025 18:28,4/8/2025 18:28,https://developer.mozilla.org/,7,5,1,6,4,2,3,
1005,4/8/2025 18:28,4/8/2025 18:28,https://developer.mozilla.org/,,,,,,,,"We need to deprecate JavaScript and provide tooling for a Rust->Webassembly toochain  Source maps for helpful debugging is my first priority  Deprecation, not expansion is wat I want to see for JavaScript and Typescript  I make my living programming Typescript, and I know how terrible it is.  "
1006,4/8/2025 18:30,4/8/2025 18:30,https://developer.mozilla.org/,,,,,,,,
1007,4/8/2025 18:33,4/8/2025 18:33,https://developer.mozilla.org/,1,7,4,2,6,5,3,
1008,4/8/2025 18:34,4/8/2025 18:34,https://developer.mozilla.org/,1,3,,4,2,,,
1009,4/8/2025 18:34,4/8/2025 18:34,https://developer.mozilla.org/,1,4,2,7,3,5,6,
1010,4/8/2025 18:35,4/8/2025 18:35,https://developer.mozilla.org/,7,4,2,5,1,3,6,
1011,4/8/2025 18:40,4/8/2025 18:40,https://developer.mozilla.org/,7,6,3,5,4,2,1,
1012,4/8/2025 18:42,4/8/2025 18:42,https://developer.mozilla.org/,,,,,,,,I think they should shut down JavaScript in favor of WebAssembly. I randomly chose Joint iteration.
1013,4/8/2025 18:46,4/8/2025 18:46,https://developer.mozilla.org/,6,2,3,7,1,5,4,"The most important thing for me is having build tools able to work on standards. Every ""x?url"", ""module.asm?wasm"", or ""file.ts?worker"" depends on specific build tools and doesn't work in other environments."
1014,4/8/2025 18:47,4/8/2025 18:47,https://developer.mozilla.org/,1,7,2,3,6,5,4,"Decorators and metaprogramming capabilities are key to maintaining a language dynamic and ergonomic, and i believe writing application code and sound libraries would greatly benefit from the addition of decorators."
1015,4/8/2025 18:51,4/8/2025 18:51,https://developer.mozilla.org/,6,4,1,7,3,2,5,For fast loading time
1016,4/8/2025 18:52,4/8/2025 18:52,https://developer.mozilla.org/,,,,,,,,
1017,4/8/2025 18:55,4/8/2025 18:55,https://developer.mozilla.org/,2,,,1,,3,4,
1018,4/8/2025 19:02,4/8/2025 19:02,https://developer.mozilla.org/,7,4,5,1,2,3,6,"Don't have much to say, but i read it and i saw the needs for them as i stated"
1019,4/8/2025 19:06,4/8/2025 19:06,https://developer.mozilla.org/,1,7,4,5,6,2,3,
1020,4/8/2025 19:08,4/8/2025 19:08,https://developer.mozilla.org/,,,,,,,,
1021,4/8/2025 19:17,4/8/2025 19:17,https://developer.mozilla.org/,7,6,3,4,5,1,2,More tools in the standard library for working with collections would help reduce reliance on third-party libraries (eg. Lodash)
1022,4/8/2025 19:21,4/8/2025 19:21,https://developer.mozilla.org/en-US/docs/Web,1,3,4,2,5,7,6,
1023,4/8/2025 19:24,4/8/2025 19:24,https://developer.mozilla.org/,1,6,4,5,7,3,2,
1024,4/8/2025 19:35,4/8/2025 19:35,https://developer.mozilla.org/,,,,,,,1,
1025,4/8/2025 19:42,4/8/2025 19:42,https://developer.mozilla.org/,7,2,3,1,4,6,5,
1026,4/8/2025 19:42,4/8/2025 19:42,https://developer.mozilla.org/,,,,,,,,
1027,4/8/2025 19:42,4/8/2025 19:42,https://developer.mozilla.org/,3,1,6,7,5,2,4,
1028,4/8/2025 19:42,4/8/2025 19:42,https://developer.mozilla.org/,1,4,6,5,7,3,2,Don't need typescript when I want to use decorators
1029,4/8/2025 19:45,4/8/2025 19:45,https://developer.mozilla.org/,7,1,6,3,2,5,4,
1030,4/8/2025 19:49,4/8/2025 19:49,https://developer.mozilla.org/,4,3,1,6,2,5,7,
1031,4/8/2025 19:50,4/8/2025 19:50,https://developer.mozilla.org/,3,6,5,4,7,1,2,
1032,4/8/2025 19:54,4/8/2025 19:54,https://developer.mozilla.org/,1,6,2,5,7,4,3,Significantly easier readability for meta programming.
1033,4/8/2025 19:58,4/8/2025 19:58,https://developer.mozilla.org/,5,3,2,1,4,7,6,Dealing with string/Date mismatches makes everything twice as hard. If I could desirable date strings into Dates and just know that everything was always a Date object it would save me so much time and effort.
1034,4/8/2025 19:59,4/8/2025 19:59,https://developer.mozilla.org/,1,5,2,4,6,7,3,time for being decorators a javascript standard has come
1035,4/8/2025 20:01,4/8/2025 20:01,https://developer.mozilla.org/,2,7,3,1,6,4,5,
1036,4/8/2025 20:04,4/8/2025 20:04,https://developer.mozilla.org/,,,,,,,,
1037,4/8/2025 20:05,4/8/2025 20:05,https://developer.mozilla.org/,4,3,2,5,1,7,6,"My ranking is focus on the use of WebAssembly and Workers. The current implementations of both currently force them to be set up outside of bundlers and (if my understanding of these proposals is correct), these changes can assist that."
1038,4/8/2025 20:07,4/8/2025 20:07,https://developer.mozilla.org/,2,,,,,3,1,
1039,4/8/2025 20:09,4/8/2025 20:09,https://developer.mozilla.org/,,2,,,1,,,
1040,4/8/2025 20:09,4/8/2025 20:09,https://developer.mozilla.org/,,,,,,,,
1041,4/8/2025 20:09,4/8/2025 20:09,https://developer.mozilla.org/,3,1,5,2,7,4,6,i just new here so i choose some feature i will used in my work.
1042,4/8/2025 20:14,4/8/2025 20:14,https://developer.mozilla.org/,5,2,4,3,1,7,6,source phase imports
1043,4/8/2025 20:17,4/8/2025 20:17,https://developer.mozilla.org/,,,,,,2,1,
1044,4/8/2025 20:17,4/8/2025 20:17,https://developer.mozilla.org/,1,7,5,4,6,2,3,I've run into a few complex scenarios where decorators were the preferred approach that libraries ended-up using. This usually means we now need to choose between adding a build system or to find an alternative solution (maybe we don't want a build system for a single aspect of our app).  For example:  - Lit's Web Component library needs a build system if you want to use the simpler decorator-based syntax  - Microsoft's TSyringe library uses them extensively  - MobX used decorators for years (unsure if it's still used in the latest version)  Having them natively would be great.  The other reasons given in the proposal (i.e. decorator wrappers for things like logging) are also things I'd like to be able to simplify with native support.
1045,4/8/2025 20:19,4/8/2025 20:19,https://developer.mozilla.org/,,,,,,,,
1046,4/8/2025 20:22,4/8/2025 20:22,https://developer.mozilla.org/,6,4,2,,5,1,3,
1047,4/8/2025 20:23,4/8/2025 20:23,https://developer.mozilla.org/,1,,2,,,,,
1048,4/8/2025 20:23,4/8/2025 20:23,https://developer.mozilla.org/,1,,,2,,4,3,
1049,4/8/2025 20:27,4/8/2025 20:27,https://developer.mozilla.org/,1,,,,,,,
1050,4/8/2025 20:28,4/8/2025 20:28,https://developer.mozilla.org/,,,,,,,,
1051,4/8/2025 20:31,4/8/2025 20:31,https://developer.mozilla.org/,4,5,7,3,6,1,2,
1052,4/8/2025 20:44,4/8/2025 20:44,https://developer.mozilla.org/,1,4,2,7,3,6,5,
1053,4/8/2025 20:49,4/8/2025 20:49,https://developer.mozilla.org/,5,2,1,4,3,7,6,"Internet connection in our country is slow. So, performance is often an issue. Deferred module evaluation will help me optimize our web page performance."
1054,4/8/2025 20:50,4/8/2025 20:50,https://developer.mozilla.org/,,3,,1,2,,,"JSON's inability to handle bigint and proper date is why I switched to CBOR for data transmission and other non-human edited data.  If the intent was to continue this use case for JSON, it needs to be able to represent all the basic types, as well as have methods for transmitting upcoming types like temporal."
1055,4/8/2025 20:51,4/8/2025 20:51,https://developer.mozilla.org/,1,6,3,2,7,4,5,
1056,4/8/2025 20:55,4/8/2025 20:55,https://developer.mozilla.org/,7,5,3,4,6,1,2,"Javascript has enough syntactic oddities, and decorators will only add to the confusion.  Joint iterators sound legitimately useful, and I suppose being able to revive source text for JSON parsing could be helpful."
1057,4/8/2025 20:57,4/8/2025 20:57,https://developer.mozilla.org/,5,2,1,4,3,6,7,
1058,4/8/2025 21:01,4/8/2025 21:01,https://developer.mozilla.org/,,4,1,2,6,5,3,
1059,4/8/2025 21:03,4/8/2025 21:03,https://developer.mozilla.org/,,,,,,,,
1060,4/8/2025 21:06,4/8/2025 21:06,https://developer.mozilla.org/,,2,1,,,,,"Why ""Deferred module evaluation"" is the highest priority?  Because in countries with slow internet, performance issues happen more often. A feature that helps optimizing performance, like Deferred Module Evaluation, will be the most impactful"
1061,4/8/2025 21:12,4/8/2025 21:12,https://developer.mozilla.org/,1,7,5,4,6,2,3,"Decorators without a pre-processing step (e.g. Babel) means more flexibility and control over the language, which means cleaner and smaller code"
1062,4/8/2025 21:13,4/8/2025 21:13,https://developer.mozilla.org/,7,5,2,4,3,6,1,
1063,4/8/2025 21:15,4/8/2025 21:15,https://developer.mozilla.org/,2,6,3,1,7,5,4,
1064,4/8/2025 21:15,4/8/2025 21:15,https://developer.mozilla.org/,2,4,1,3,5,7,6,"Daily, I have to use de decorators with typescript, and the others"
1065,4/8/2025 21:15,4/8/2025 21:15,https://developer.mozilla.org/,1,7,2,5,6,4,3,
1066,4/8/2025 21:24,4/8/2025 21:24,https://developer.mozilla.org/,1,5,2,7,4,6,3,
1067,4/8/2025 21:24,4/8/2025 21:24,https://developer.mozilla.org/,1,5,7,3,6,2,4,
1068,4/8/2025 21:25,4/8/2025 21:25,https://developer.mozilla.org/,,,,,,,,
1069,4/8/2025 21:25,4/8/2025 21:25,https://developer.mozilla.org/,5,1,2,7,3,6,4,
1070,4/8/2025 21:25,4/8/2025 21:25,https://developer.mozilla.org/,7,6,4,3,5,2,1,
1071,4/8/2025 21:29,4/8/2025 21:29,https://developer.mozilla.org/,2,7,4,5,6,3,1,IDK what to do with it. BUT its useful
1072,4/8/2025 21:33,4/8/2025 21:33,https://developer.mozilla.org/,2,4,5,6,7,1,3,
1073,4/8/2025 21:35,4/8/2025 21:35,https://developer.mozilla.org/,1,2,3,5,4,7,6,
1074,4/8/2025 21:37,4/8/2025 21:37,https://developer.mozilla.org/,2,,,,,1,3,
1075,4/8/2025 21:48,4/8/2025 21:48,https://developer.mozilla.org/,1,4,2,7,3,5,6,"The Decorator feature has been used in Typescript workflow for years as an experimental feature. Thrilled to see more coming. Decorator metadata will especially make server-side meta programing largely easier, and push tool chains forward."
1076,4/8/2025 21:49,4/8/2025 21:49,https://developer.mozilla.org/,,,,,,,,
1077,4/8/2025 21:52,4/8/2025 21:52,https://developer.mozilla.org/,,,,,,,,
1078,4/8/2025 21:53,4/8/2025 21:53,https://developer.mozilla.org/,,,1,,,,,Ideally perf gains.
1079,4/8/2025 21:54,4/8/2025 21:54,https://developer.mozilla.org/,6,2,4,1,3,5,7,
1080,4/8/2025 21:58,4/8/2025 21:58,https://developer.mozilla.org/,3,7,6,4,5,1,2,"Joint Iteration would allow easier manipulation of data. At the end of the day, the goal of software is to manipulate data, and the easier it is to do that, the less is in the way of making software that does what you want, with as little fuss possible."
1081,4/8/2025 21:58,4/8/2025 21:58,https://developer.mozilla.org/,4,1,3,7,2,6,5,"Coming from Flutter, Kotlin, Swift and such, the web's developer ecosystem is a mess. A dev toolkit should 'just work out of the box' and the web certainly does not. This ordering would help to bring things closer to 'just works'."
1082,4/8/2025 21:58,4/8/2025 21:58,https://developer.mozilla.org/,7,6,3,4,5,1,2,
1083,4/8/2025 22:10,4/8/2025 22:10,https://developer.mozilla.org/,1,6,7,4,5,2,3,Decorators just make sense to have since the inclusion of traditional Class syntax. It cleans up code bases/libraries and makes writing classes much easier and keeps them more organized.
1084,4/8/2025 22:12,4/8/2025 22:12,https://developer.mozilla.org/,,1,,,,,,
1085,4/8/2025 22:13,4/8/2025 22:13,https://developer.mozilla.org/,,2,,1,,,,
1086,4/8/2025 22:14,4/8/2025 22:14,https://developer.mozilla.org/,1,6,7,2,5,3,4,
1087,4/8/2025 22:17,4/8/2025 22:17,https://developer.mozilla.org/,2,7,1,5,6,4,3,"We have a very JS heavy react webapp where each page is like a different smaller app, deferred module evaluation could alleviate our performance issues a bit."
1088,4/8/2025 22:17,4/8/2025 22:17,https://developer.mozilla.org/,,,,,,,,
1089,4/8/2025 22:19,4/8/2025 22:19,https://developer.mozilla.org/,1,3,4,6,2,5,7,
1090,4/8/2025 22:30,4/8/2025 22:30,https://developer.mozilla.org/,2,6,1,4,5,3,7,I have found myself annoyed in the past by how dynamic imports necessarily incurred a performance penalty by requiring an extra network request. It would be nice 
1091,4/8/2025 22:40,4/8/2025 22:40,https://developer.mozilla.org/,4,2,1,5,3,7,6,"I specialize in front-end development, with a focus on progressive enhancement.  Decoupling synchronous browser behaviors from their bound counterparts would be a game-changer—it would allow for a much cleaner and more maintainable codebase.  While I'm currently using asynchronous module loading, it comes with some clear limitations."
1092,4/8/2025 22:41,4/8/2025 22:41,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,7,2,5,1,3,6,4,
1093,4/8/2025 22:43,4/8/2025 22:43,https://developer.mozilla.org/,1,,,,,,,
1094,4/8/2025 22:44,4/8/2025 22:44,https://developer.mozilla.org/,1,3,2,7,4,6,5,"Deferred module evaluation is one I am particularly keen for both lazy loading of modules and managing circular imports.  I've placed decorators above as they are generally speaking a more broadly applicable feature, however, I keep running into the limitation of decorators on classes only."
1095,4/8/2025 22:45,4/8/2025 22:45,https://developer.mozilla.org/,1,6,4,5,7,2,3,
1096,4/8/2025 22:45,4/8/2025 22:45,https://developer.mozilla.org/,1,6,4,5,7,3,2,decorators are a great way to abstract reusable logic
1097,4/8/2025 22:45,4/8/2025 22:45,https://developer.mozilla.org/,1,7,4,5,6,2,3,Standard decorators would be very handy. Zip would also be convenient.
1098,4/8/2025 22:48,4/8/2025 22:48,https://developer.mozilla.org/,,1,2,,,,,
1099,4/8/2025 22:51,4/8/2025 22:51,https://developer.mozilla.org/,,,,,,,,
1100,4/8/2025 22:52,4/8/2025 22:52,https://developer.mozilla.org/,6,4,1,2,3,7,5,It would definitely increase the performance of a complex JS app!
1101,4/8/2025 22:56,4/8/2025 22:56,https://developer.mozilla.org/,2,1,4,6,5,7,3,
1102,4/8/2025 23:00,4/8/2025 23:00,https://developer.mozilla.org/,6,4,7,5,3,2,1,I use iterator helpers like the ones being proposed in other languages like Rust and they make code simpler and easier to understand. It would be great if they were added to JS too
1103,4/8/2025 23:04,4/8/2025 23:04,https://developer.mozilla.org/,5,2,3,7,4,6,1,i like 
1104,4/8/2025 23:09,4/8/2025 23:09,https://developer.mozilla.org/,1,3,2,5,4,6,7,
1105,4/8/2025 23:11,4/8/2025 23:11,https://developer.mozilla.org/,,,,,,1,,
1106,4/8/2025 23:15,4/8/2025 23:15,https://developer.mozilla.org/,,,,,2,1,,
1107,4/8/2025 23:15,4/8/2025 23:15,https://developer.mozilla.org/,2,3,6,7,1,5,4,
1108,4/8/2025 23:21,4/8/2025 23:21,https://developer.mozilla.org/,6,4,7,2,3,5,1,
1109,4/8/2025 23:26,4/8/2025 23:26,https://developer.mozilla.org/,1,2,3,5,7,6,4,
1110,4/8/2025 23:31,4/8/2025 23:31,https://developer.mozilla.org/,1,2,4,7,3,6,5,"I intend to use decorators as an alternative to function generator functions, which are very common when trying to do something reactively.   Provided decorators give a clean and transparent syntax which while being concise, avoids the roundabouts of a wrapper function, I would be very happy for the developer experience provided here."
1111,4/8/2025 23:34,4/8/2025 23:34,https://developer.mozilla.org/,3,7,5,1,6,2,4,"I strongly support the enhancements to JSON.parse. Currently, the functionality of JSON is quite basic, making it difficult to serialize and deserialize custom types or values. In many cases, manually constructing these processes is more practical. This proposed feature perfectly meets my needs by providing a convenient way to customize the serialization and deserialization processes."
1112,4/8/2025 23:34,4/8/2025 23:34,https://developer.mozilla.org/,,,,,,,,
1113,4/8/2025 23:35,4/8/2025 23:35,https://developer.mozilla.org/,3,5,4,6,1,7,2,
1114,4/8/2025 23:40,4/8/2025 23:40,https://developer.mozilla.org/,7,3,5,6,4,2,1,
1115,4/8/2025 23:43,4/8/2025 23:43,https://developer.mozilla.org/,2,1,5,3,4,6,7,I ordered them by my daily-work type of tasks. 
1116,4/8/2025 23:44,4/8/2025 23:44,https://developer.mozilla.org/,2,,,,1,,,
1117,4/8/2025 23:46,4/8/2025 23:46,https://developer.mozilla.org/,,,,,,,,
1118,4/8/2025 23:47,4/8/2025 23:47,https://developer.mozilla.org/,7,2,4,1,3,6,5,
1119,4/8/2025 23:49,4/8/2025 23:49,https://developer.mozilla.org/,1,,,2,,,3,
1120,4/8/2025 23:51,4/8/2025 23:51,https://developer.mozilla.org/,1,6,5,7,2,3,4,It allows much more flexibility and productivity as I can model my data in any way without having to deal with weird syntax.
1121,4/8/2025 23:51,4/8/2025 23:51,https://developer.mozilla.org/zh-CN/docs/Web/SVG,,,,,,,,
1122,4/8/2025 23:56,4/8/2025 23:56,https://developer.mozilla.org/,1,2,4,3,5,7,6,
1123,4/9/2025 0:01,4/9/2025 0:01,https://developer.mozilla.org/,1,6,3,2,7,4,5,the first one always comes to my head when im dealing with large node code base. the second one always shows up when dealing with operations of important imformation with great precisions such as currency and time.
1124,4/9/2025 0:03,4/9/2025 0:03,https://developer.mozilla.org/,4,2,3,1,7,5,6,
1125,4/9/2025 0:03,4/9/2025 0:03,https://developer.mozilla.org/,6,2,7,3,1,5,4,
1126,4/9/2025 0:07,4/9/2025 0:07,https://developer.mozilla.org/,,,3,1,2,,,
1127,4/9/2025 0:10,4/9/2025 0:10,https://developer.mozilla.org/,1,2,3,5,7,4,6,"I am already using decorators in Nest.js lib. Also workers - ESM phase imports are very important, so as a developer my code is type safe and also when using various builder tools - url for worker is a bit of a mess."
1128,4/9/2025 0:11,4/9/2025 0:11,https://developer.mozilla.org/,7,6,2,1,3,5,4,
1129,4/9/2025 0:14,4/9/2025 0:14,https://developer.mozilla.org/,,,,1,,,,2
1130,4/9/2025 0:15,4/9/2025 0:15,https://developer.mozilla.org/,6,1,3,2,4,7,5,
1131,4/9/2025 0:17,4/9/2025 0:17,https://developer.mozilla.org/,1,,,,,,,
1132,4/9/2025 0:17,4/9/2025 0:17,https://developer.mozilla.org/,2,3,1,5,4,7,6,
1133,4/9/2025 0:18,4/9/2025 0:18,https://developer.mozilla.org/,6,5,2,7,4,1,3,
1134,4/9/2025 0:19,4/9/2025 0:19,https://developer.mozilla.org/,,4,,3,5,1,2,
1135,4/9/2025 0:22,4/9/2025 0:22,https://developer.mozilla.org/,1,3,4,7,2,6,5,"decorator is helpful to do sth like marco programming, and it's more eazy to load some assets with import phase"
1136,4/9/2025 0:23,4/9/2025 0:23,https://developer.mozilla.org/,7,5,4,2,6,1,3,
1137,4/9/2025 0:24,4/9/2025 0:24,https://developer.mozilla.org/,,,,1,,,2,
1138,4/9/2025 0:24,4/9/2025 0:24,https://developer.mozilla.org/,1,5,4,3,6,7,2,
1139,4/9/2025 0:26,4/9/2025 0:26,https://developer.mozilla.org/,,,,,,,,
1140,4/9/2025 0:31,4/9/2025 0:31,https://developer.mozilla.org/,2,6,4,7,5,1,3,
1141,4/9/2025 0:31,4/9/2025 0:31,https://developer.mozilla.org/,1,7,6,4,5,2,3,"decorators are quite powerful and already exist in many other languages (eg Python) and have numerous uses (eg logging, input validation, memoization); I'm surprised they haven't been brought to the JavaScript/TypeScript ecosystem"
1142,4/9/2025 0:32,4/9/2025 0:32,https://developer.mozilla.org/,,,,,,,,
1143,4/9/2025 0:34,4/9/2025 0:34,https://developer.mozilla.org/,1,,,,,,,
1144,4/9/2025 0:35,4/9/2025 0:35,https://developer.mozilla.org/,1,4,3,7,2,6,5,
1145,4/9/2025 0:36,4/9/2025 0:36,https://developer.mozilla.org/,1,7,5,4,6,3,2,
1146,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,3,5,6,4,7,1,2,It would greatly help in making my data analytics functions easier to read and understand for my non-developper colleagues.
1147,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,4,3,7,5,2,1,6,
1148,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,1,4,6,2,5,7,3,
1149,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,1,5,3,2,4,7,6,
1150,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,3,7,4,6,5,1,2,"I really like using iterators, they make my code much cleaner. Not only would the zip function really help me but this added bit of performance would I think convince more people that this is a good way of doing things, since it would no longer have the 'performance cost' (we are mainly working with arrays of max 20-30 elements so no big deal really)"
1151,4/9/2025 0:37,4/9/2025 0:37,https://developer.mozilla.org/,1,5,6,7,4,2,3,Being able to log all reads & writes to a variable with a decorator would massively streamline debugging of my JS projects.
1152,4/9/2025 0:38,4/9/2025 0:38,https://developer.mozilla.org/,3,4,5,7,1,2,6,
1153,4/9/2025 0:40,4/9/2025 0:40,https://developer.mozilla.org/,3,7,5,1,6,2,4,
1154,4/9/2025 0:40,4/9/2025 0:40,https://developer.mozilla.org/,3,7,5,1,4,6,2,
1155,4/9/2025 0:42,4/9/2025 0:42,https://developer.mozilla.org/,1,7,5,2,6,4,3,
1156,4/9/2025 0:46,4/9/2025 0:46,https://developer.mozilla.org/,7,5,6,3,4,1,2,Zip() is a common operation that is currently either implemented whenever it's required or a library is depended upon.
1157,4/9/2025 0:48,4/9/2025 0:48,https://developer.mozilla.org/,7,5,1,4,6,3,2,Loading pages fast is a top priority 
1158,4/9/2025 0:49,4/9/2025 0:49,https://developer.mozilla.org/,1,7,4,2,6,5,3,
1159,4/9/2025 0:51,4/9/2025 0:51,https://developer.mozilla.org/,1,7,5,3,6,4,2,
1160,4/9/2025 0:52,4/9/2025 0:52,https://developer.mozilla.org/,1,4,3,2,5,6,7,
1161,4/9/2025 0:55,4/9/2025 0:55,https://developer.mozilla.org/,2,1,3,,,,,
1162,4/9/2025 0:56,4/9/2025 0:56,https://developer.mozilla.org/,1,7,5,2,6,4,3,"Decorators would greatly assist with common ""clean up"" type operations (e.g., closing file handles, database connections) that are currently not ergonomic to implement and a regular source of bugs."
1163,4/9/2025 0:58,4/9/2025 0:58,https://developer.mozilla.org/,,,,,,,,
1164,4/9/2025 0:59,4/9/2025 0:59,https://developer.mozilla.org/,1,4,6,7,5,2,3,
1165,4/9/2025 1:01,4/9/2025 1:01,https://developer.mozilla.org/,2,4,3,7,5,1,6,"I frequently have to iterate over two arrays or similar structures simultaneously, and this means either implementing a zip utility or reverting back to using indices rather than meaningful variable names. It's a feature I sorely miss whenever I get back to JS from working with Python."
1166,4/9/2025 1:01,4/9/2025 1:01,https://developer.mozilla.org/,7,3,1,6,2,5,4,Improve performance of the webiste without incurring in additional Network request. If the execution can be programmatically delayed or can be done once something in the viewport triggers it then it would be useful as well other than when a module property is executed.
1167,4/9/2025 1:01,4/9/2025 1:01,https://developer.mozilla.org/,1,3,7,4,2,6,5,Make the code I am writing a lot more concise.
1168,4/9/2025 1:05,4/9/2025 1:05,https://developer.mozilla.org/,2,6,4,7,5,3,1,
1169,4/9/2025 1:12,4/9/2025 1:12,https://developer.mozilla.org/,1,7,5,2,6,4,3,
1170,4/9/2025 1:13,4/9/2025 1:13,https://developer.mozilla.org/,1,7,2,3,4,5,6,
1171,4/9/2025 1:14,4/9/2025 1:14,https://developer.mozilla.org/,,,,,,,,
1172,4/9/2025 1:15,4/9/2025 1:15,https://developer.mozilla.org/,1,3,7,5,2,4,6,
1173,4/9/2025 1:18,4/9/2025 1:18,https://developer.mozilla.org/,,,1,,,,,
1174,4/9/2025 1:20,4/9/2025 1:20,https://developer.mozilla.org/,1,5,2,3,4,6,7,
1175,4/9/2025 1:28,4/9/2025 1:28,https://developer.mozilla.org/,1,5,7,6,4,3,2,
1176,4/9/2025 1:29,4/9/2025 1:29,https://developer.mozilla.org/,1,5,2,3,6,4,7,
1177,4/9/2025 1:29,4/9/2025 1:29,https://developer.mozilla.org/,7,5,6,2,3,1,4,
1178,4/9/2025 1:30,4/9/2025 1:30,https://developer.mozilla.org/,2,7,5,1,6,3,4,
1179,4/9/2025 1:34,4/9/2025 1:34,https://developer.mozilla.org/,3,1,6,2,4,5,7,Making workers more standardised and easier to use.
1180,4/9/2025 1:34,4/9/2025 1:34,https://developer.mozilla.org/,1,3,4,2,5,7,6,
1181,4/9/2025 1:34,4/9/2025 1:34,https://developer.mozilla.org/,2,3,4,1,5,6,7,
1182,4/9/2025 1:35,4/9/2025 1:35,https://developer.mozilla.org/,,,,,,,,
1183,4/9/2025 1:37,4/9/2025 1:37,https://developer.mozilla.org/,4,1,3,,2,6,5,
1184,4/9/2025 1:37,4/9/2025 1:37,https://developer.mozilla.org/,1,7,2,5,6,4,3,
1185,4/9/2025 1:37,4/9/2025 1:37,https://developer.mozilla.org/,3,7,6,2,4,5,1,
1186,4/9/2025 1:37,4/9/2025 1:37,https://developer.mozilla.org/,,,,2,,,1,
1187,4/9/2025 1:38,4/9/2025 1:38,https://developer.mozilla.org/,5,1,4,7,2,6,3,
1188,4/9/2025 1:40,4/9/2025 1:40,https://developer.mozilla.org/,7,1,3,2,4,5,6,"This is just my personal opinion, I just think this arrangement is suitable for beginners like me."
1189,4/9/2025 1:40,4/9/2025 1:40,https://developer.mozilla.org/,1,,,,,2,,
1190,4/9/2025 1:40,4/9/2025 1:40,https://developer.mozilla.org/,7,3,1,4,2,5,6,
1191,4/9/2025 1:41,4/9/2025 1:41,https://survey.alchemer.com/,,,1,2,,,,
1192,4/9/2025 1:41,4/9/2025 1:41,https://developer.mozilla.org/,5,7,1,4,6,3,2,Loading the JS bundles is always a problem with performance. The iteration and JSON parsing is for better developer experience.
1193,4/9/2025 1:43,4/9/2025 1:43,https://developer.mozilla.org/,7,5,6,3,4,2,1,"Iterator improvements were missing, so built in solutions would be nice instead of writing it myself, Json improvements will spare me from manual parsing in some edge-cases, but imports, evaluation and decorators are just optimizations, im near aganist decorators, since i will not use them and will be bad for browser compatibility in a short term"
1194,4/9/2025 1:44,4/9/2025 1:44,https://developer.mozilla.org/,1,4,2,5,3,7,6,
1195,4/9/2025 1:44,4/9/2025 1:44,https://developer.mozilla.org/,1,7,4,2,3,6,5,I'm excited to see the use of Decorators in ORMs
1196,4/9/2025 1:47,4/9/2025 1:47,https://developer.mozilla.org/,,,,,,,,
1197,4/9/2025 1:48,4/9/2025 1:48,,2,5,4,6,7,3,1,
1198,4/9/2025 1:50,4/9/2025 1:50,https://developer.mozilla.org/,1,4,7,6,5,3,2,
1199,4/9/2025 1:51,4/9/2025 1:51,https://developer.mozilla.org/,3,6,4,7,5,2,1,iterator sequences are great for maintenance as you can use them to make immutable sequences and control repetition within 
1200,4/9/2025 1:53,4/9/2025 1:53,https://developer.mozilla.org/,2,3,1,4,5,7,6,
1201,4/9/2025 1:56,4/9/2025 1:56,https://developer.mozilla.org/,1,2,7,3,5,6,4,Decorators are super powerful and flexible. I had a good time using them in Python and would love to see them come to JS
1202,4/9/2025 1:58,4/9/2025 1:58,https://developer.mozilla.org/,1,3,2,5,4,7,6,
1203,4/9/2025 1:58,4/9/2025 1:58,https://developer.mozilla.org/,4,7,5,2,6,1,3,It would allow me to replace all remaining counted loops by the equivalent iterator-based loops.
1204,4/9/2025 1:58,4/9/2025 1:58,https://developer.mozilla.org/,3,7,4,5,6,2,1,
1205,4/9/2025 1:58,4/9/2025 1:58,https://developer.mozilla.org/,,,,,,,,
1206,4/9/2025 1:59,4/9/2025 1:59,https://developer.mozilla.org/,3,2,1,5,4,6,7,"More improved import handling would be great, today loading a big ESM project like BabylonJS will go over hundreds of imports before the content is loaded. Having more options to tackle this would be great."
1207,4/9/2025 1:59,4/9/2025 1:59,https://developer.mozilla.org/,3,,,2,,4,1,
1208,4/9/2025 2:02,4/9/2025 2:02,https://developer.mozilla.org/,3,1,2,7,4,6,5,
1209,4/9/2025 2:03,4/9/2025 2:03,https://developer.mozilla.org/,1,5,7,6,4,2,3,
1210,4/9/2025 2:03,4/9/2025 2:03,https://developer.mozilla.org/,1,2,6,3,7,4,5,
1211,4/9/2025 2:04,4/9/2025 2:04,https://developer.mozilla.org/,1,,,2,5,3,4,"Decorators are currently a Stage 3 proposal in TC39 (so not fully finalized, but getting close). They're basically a syntax sugar for modifying classes and their members (like properties or methods) in a declarative way.   Use Cases: - Logging - Authorization - Dependency Injection"
1212,4/9/2025 2:06,4/9/2025 2:06,https://developer.mozilla.org/,4,6,3,5,7,2,1,Just convenience. But I'd rather see improvements to web components.
1213,4/9/2025 2:06,4/9/2025 2:06,https://developer.mozilla.org/,1,3,2,7,4,5,6,
1214,4/9/2025 2:08,4/9/2025 2:08,https://developer.mozilla.org/,,,,,,,1,
1215,4/9/2025 2:09,4/9/2025 2:09,https://developer.mozilla.org/,1,3,2,6,7,5,4,
1216,4/9/2025 2:09,4/9/2025 2:09,https://developer.mozilla.org/,,,1,,,,,Most of these seem useless
1217,4/9/2025 2:13,4/9/2025 2:13,https://developer.mozilla.org/,2,5,1,3,4,7,6,"Improve performance natively, without relying on pre-processing"
1218,4/9/2025 2:13,4/9/2025 2:13,https://developer.mozilla.org/,1,5,6,4,7,3,2,Cut down ugly boilerplate code
1219,4/9/2025 2:13,4/9/2025 2:13,https://developer.mozilla.org/,1,,,,,,,
1220,4/9/2025 2:14,4/9/2025 2:14,https://developer.mozilla.org/,7,3,4,1,2,5,6,"Honestly, I've never run into any of these problems, I guess it might help me if I need BigInt in some JSON."
1221,4/9/2025 2:16,4/9/2025 2:16,https://developer.mozilla.org/,1,7,5,3,4,2,6,i dont fully understand the extent of how useful the ones i ranked bottom are
1222,4/9/2025 2:19,4/9/2025 2:19,https://developer.mozilla.org/,,,,,,,,This allows for increased functionality in processing and writing code for my needs. I only design simple website and want to use JS to perform query analysis like I can with R or python. These updates help accomplish these tasks.
1223,4/9/2025 2:20,4/9/2025 2:20,https://developer.mozilla.org/,1,7,3,2,5,6,4,
1224,4/9/2025 2:21,4/9/2025 2:21,https://developer.mozilla.org/,1,4,2,7,3,6,5,"I'm already using decorators in TypeScript, so having them in JavaScript would be great for compatibility."
1225,4/9/2025 2:21,4/9/2025 2:21,https://developer.mozilla.org/,2,5,6,4,7,3,1,
1226,4/9/2025 2:22,4/9/2025 2:22,https://developer.mozilla.org/,,,,,,,,
1227,4/9/2025 2:24,4/9/2025 2:24,https://developer.mozilla.org/,1,3,4,7,6,5,2,
1228,4/9/2025 2:26,4/9/2025 2:26,https://developer.mozilla.org/,1,3,2,4,5,7,6,
1229,4/9/2025 2:26,4/9/2025 2:26,https://developer.mozilla.org/,1,,,2,,4,3,
1230,4/9/2025 2:27,4/9/2025 2:27,https://developer.mozilla.org/,2,4,3,1,5,7,6,
1231,4/9/2025 2:27,4/9/2025 2:27,https://developer.mozilla.org/,,,,,,,,
1232,4/9/2025 2:28,4/9/2025 2:28,https://developer.mozilla.org/,1,4,5,2,7,6,3,
1233,4/9/2025 2:28,4/9/2025 2:28,https://developer.mozilla.org/,7,3,4,1,2,5,6,
1234,4/9/2025 2:29,4/9/2025 2:29,https://developer.mozilla.org/,,,,,,,,
1235,4/9/2025 2:32,4/9/2025 2:32,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,5,7,2,6,3,4,It is becoming a standard feature of many other environments (like Typescript) so having a native JS equivalent would make its spread easier.
1236,4/9/2025 2:34,4/9/2025 2:34,https://developer.mozilla.org/,1,2,,5,6,3,4,
1237,4/9/2025 2:35,4/9/2025 2:35,https://developer.mozilla.org/,2,6,5,4,7,3,1,It would make it far easier to combine multiple operators without the need of an external library or a custom implementation.
1238,4/9/2025 2:36,4/9/2025 2:36,https://developer.mozilla.org/,,,1,,,,2,
1239,4/9/2025 2:38,4/9/2025 2:38,https://developer.mozilla.org/,1,7,4,2,6,3,5,
1240,4/9/2025 2:42,4/9/2025 2:42,https://developer.mozilla.org/,,,,,,,,
1241,4/9/2025 2:42,4/9/2025 2:42,https://developer.mozilla.org/,,3,2,1,,,,
1242,4/9/2025 2:43,4/9/2025 2:43,https://developer.mozilla.org/,1,6,7,2,5,3,4,
1243,4/9/2025 2:44,4/9/2025 2:44,https://developer.mozilla.org/,1,6,3,2,7,5,4,
1244,4/9/2025 2:45,4/9/2025 2:45,https://developer.mozilla.org/,2,6,7,1,4,5,3,"rawJson helps in adding some stuff that is actually a variable, when using JSON to store some file content, say"
1245,4/9/2025 2:46,4/9/2025 2:46,https://developer.mozilla.org/,3,4,2,,1,,,
1246,4/9/2025 2:46,4/9/2025 2:46,https://developer.mozilla.org/,5,3,2,4,7,6,1,
1247,4/9/2025 2:46,4/9/2025 2:46,https://developer.mozilla.org/,,,,,,,,
1248,4/9/2025 2:49,4/9/2025 2:49,https://developer.mozilla.org/,7,5,4,6,2,1,3,
1249,4/9/2025 2:51,4/9/2025 2:51,https://developer.mozilla.org/,3,5,4,7,6,2,1,"Iterators are still not fully realized in JS, so it's my top prioritity. Decorators are useful, but would have been more useful on funcs as well"
1250,4/9/2025 2:51,4/9/2025 2:51,https://developer.mozilla.org/,4,5,7,6,3,2,1,zipping would be incredibly useful.
1251,4/9/2025 2:52,4/9/2025 2:52,https://developer.mozilla.org/,1,5,6,7,4,2,3,"Decorators would take care of some hidden compat issues between libraries that expose decorators.  Better iterators would help creating useful datastructures without relying on 3rd-party standard libraries.  Source phase imports would (I hope) enable a healthier plugin system at the language level, and maybe, just maybe, we can finally see some movement regarding JS Sugar and especially pipeline operators."
1252,4/9/2025 2:53,4/9/2025 2:53,https://developer.mozilla.org/,7,4,5,6,3,2,1,"There are quite a few places where I need to concatenate stuff, and the current choice is either create a big array (more allocations) or creating a utility function (non standard, must be imported). Having more possibilities of iteration in general would be nice"
1253,4/9/2025 2:56,4/9/2025 2:56,https://developer.mozilla.org/,7,3,5,6,4,1,2,
1254,4/9/2025 2:56,4/9/2025 2:56,https://developer.mozilla.org/,1,7,6,3,5,2,4,
1255,4/9/2025 2:57,4/9/2025 2:57,https://developer.mozilla.org/,1,6,2,7,5,3,4,decorators were promised since babel days... come on!
1256,4/9/2025 3:02,4/9/2025 3:02,https://developer.mozilla.org/,5,6,1,4,7,3,2,
1257,4/9/2025 3:05,4/9/2025 3:05,https://developer.mozilla.org/,1,3,2,7,4,6,5,"It's already widely used in TypeScript ecosystem, and various doc autogen systems. Don't wanna see another syntax change. Would love to see this standardized ASAP."
1258,4/9/2025 3:08,4/9/2025 3:08,https://developer.mozilla.org/,1,3,4,7,2,6,5,
1259,4/9/2025 3:08,4/9/2025 3:08,https://developer.mozilla.org/,1,5,4,2,3,7,6,
1260,4/9/2025 3:09,4/9/2025 3:09,https://developer.mozilla.org/,1,3,7,2,4,6,5,It will help me debug better.
1261,4/9/2025 3:12,4/9/2025 3:12,https://developer.mozilla.org/,3,6,4,7,5,1,2,
1262,4/9/2025 3:12,4/9/2025 3:12,https://developer.mozilla.org/,,2,,,,,1,
1263,4/9/2025 3:13,4/9/2025 3:13,https://developer.mozilla.org/,,,,1,,3,2,seems like a reasonable feature + does not introduce great complexity into JS or engine code
1264,4/9/2025 3:15,4/9/2025 3:15,https://developer.mozilla.org/,6,4,7,1,2,3,5,
1265,4/9/2025 3:17,4/9/2025 3:17,https://developer.mozilla.org/,3,,,4,,1,2,
1266,4/9/2025 3:18,4/9/2025 3:18,https://developer.mozilla.org/,7,3,5,1,2,6,4,
1267,4/9/2025 3:19,4/9/2025 3:19,https://developer.mozilla.org/,4,,,1,,2,3,
1268,4/9/2025 3:20,4/9/2025 3:20,https://developer.mozilla.org/,,,,,,,,
1269,4/9/2025 3:22,4/9/2025 3:22,https://developer.mozilla.org/,1,2,3,6,7,5,4,
1270,4/9/2025 3:25,4/9/2025 3:25,https://developer.mozilla.org/,7,5,3,4,6,2,1,
1271,4/9/2025 3:26,4/9/2025 3:26,https://developer.mozilla.org/,1,6,2,4,7,3,5,
1272,4/9/2025 3:26,4/9/2025 3:26,https://developer.mozilla.org/,1,5,4,7,6,2,3,
1273,4/9/2025 3:26,4/9/2025 3:26,https://developer.mozilla.org/,2,6,5,7,1,3,4,Lower barrier to introducing WASM into my projects
1274,4/9/2025 3:27,4/9/2025 3:27,https://developer.mozilla.org/,5,2,3,4,1,6,7,
1275,4/9/2025 3:34,4/9/2025 3:34,https://developer.mozilla.org/,6,3,1,5,2,7,4,Death of growth in the mobile and desktop space is bundling size. We need more control. Less Javascript in our javascript. 
1276,4/9/2025 3:40,4/9/2025 3:40,https://developer.mozilla.org/,1,4,2,5,3,6,7,To improve the javascript ecosystem
1277,4/9/2025 3:40,4/9/2025 3:40,https://developer.mozilla.org/,1,6,4,7,5,3,2,decorator is a nice improvement for DX
1278,4/9/2025 3:43,4/9/2025 3:43,https://developer.mozilla.org/,1,6,3,2,4,7,5,Decorators are such a quality of life improvement in other languages
1279,4/9/2025 3:44,4/9/2025 3:44,https://developer.mozilla.org/,1,4,2,7,5,3,6,
1280,4/9/2025 3:46,4/9/2025 3:46,https://developer.mozilla.org/,1,6,5,4,7,2,3,"Idk, most of these don't mean anything to me. The top one is the only fun addition but sounds awfully colse to getter/setter we already have, all others don't add any new cool syntax tricks or programming features. All this is mostly about computers doing computer things, systems problems."
1281,4/9/2025 3:46,4/9/2025 3:46,https://developer.mozilla.org/,4,3,6,5,1,7,2,
1282,4/9/2025 3:47,4/9/2025 3:47,https://developer.mozilla.org/,7,1,5,2,3,6,4,
1283,4/9/2025 3:48,4/9/2025 3:48,https://developer.mozilla.org/,,,,,,,,"these features would help me improve code efficiency, maintainability, and performance. ESM phase imports and source phase imports would allow better module management, ensuring only necessary code is loaded. Decorators would enhance reusability and structure, making TypeScript development more scalable. JSON.parse source access would provide better control over data processing, improving performance. Joint iteration would optimize operations involving multiple collections, reducing execution time. Deferred module evaluation would enhance application performance by loading modules only when needed. Iterator sequence would ensure consistency in handling asynchronous data flows."
1284,4/9/2025 3:49,4/9/2025 3:49,https://developer.mozilla.org/,1,6,5,4,7,3,2,"Cleaner code, easier to read."
1285,4/9/2025 3:50,4/9/2025 3:50,https://developer.mozilla.org/,3,5,4,7,6,2,1,
1286,4/9/2025 3:53,4/9/2025 3:53,https://developer.mozilla.org/,5,3,4,1,2,6,7,I need to (de)serialize BigInt as JSON as transparently as possible. Having a more powerful reviver function would help.
1287,4/9/2025 3:55,4/9/2025 3:55,https://developer.mozilla.org/,1,5,7,4,6,2,3,
1288,4/9/2025 3:57,4/9/2025 3:57,https://developer.mozilla.org/,3,7,4,5,6,1,2,"Lodash like library have been supported iteration functions. If some of frequently used function in Lodash will become nativebase, it is welcome."
1289,4/9/2025 4:04,4/9/2025 4:04,https://developer.mozilla.org/,1,6,5,2,7,4,3,
1290,4/9/2025 4:09,4/9/2025 4:09,https://developer.mozilla.org/,5,3,7,1,4,6,2,
1291,4/9/2025 4:10,4/9/2025 4:10,https://developer.mozilla.org/,,,,,,,,
1292,4/9/2025 4:12,4/9/2025 4:12,https://developer.mozilla.org/,5,7,4,2,6,3,1,
1293,4/9/2025 4:13,4/9/2025 4:13,https://developer.mozilla.org/,3,6,4,7,5,2,1,
1294,4/9/2025 4:17,4/9/2025 4:17,https://developer.mozilla.org/,1,3,4,6,2,7,5,
1295,4/9/2025 4:18,4/9/2025 4:18,https://developer.mozilla.org/,6,3,4,5,2,1,7,
1296,4/9/2025 4:19,4/9/2025 4:19,https://developer.mozilla.org/,6,2,1,7,3,5,4,
1297,4/9/2025 4:20,4/9/2025 4:20,https://developer.mozilla.org/,7,1,2,3,4,6,5,
1298,4/9/2025 4:20,4/9/2025 4:20,https://developer.mozilla.org/,1,7,3,4,6,5,2,
1299,4/9/2025 4:21,4/9/2025 4:21,https://developer.mozilla.org/,,,,,,,,
1300,4/9/2025 4:22,4/9/2025 4:22,https://developer.mozilla.org/,5,6,7,3,4,1,2,
1301,4/9/2025 4:22,4/9/2025 4:22,https://developer.mozilla.org/,,,,,,,,
1302,4/9/2025 4:23,4/9/2025 4:23,https://developer.mozilla.org/,1,4,2,7,3,5,6,"I often needs decorators in my classes which I implement with proxies, geters/setters. The decorator syntax would make it more semantic and easy."
1303,4/9/2025 4:25,4/9/2025 4:25,https://developer.mozilla.org/,,,,,,,,Would help produce clearer code.  Iterating over multiple iterators at once is quite common. improved JSON parsing is obviously a big +. Would love to see structs in there but that's not on the list.
1304,4/9/2025 4:26,4/9/2025 4:26,https://developer.mozilla.org/,1,7,6,2,5,3,4,Decorators would help to clean up my code
1305,4/9/2025 4:32,4/9/2025 4:32,https://developer.mozilla.org/,4,3,5,1,2,7,6,"JSON.parse is a central functionality that is relevant to my day-to-day work. Although I have not run into the shortcomings (like lossy roundtrips) yet, I might run into those problems just next month or next year. Therefore it does make sense to me that those shortcomings are addressed and mitigated by the TC39 efforts and additions to the Web standards. So this ends up being my choice for priority #1."
1306,4/9/2025 4:33,4/9/2025 4:33,https://developer.mozilla.org/,1,3,4,6,7,5,2,Decorators rock.
1307,4/9/2025 4:36,4/9/2025 4:36,https://developer.mozilla.org/,1,,,3,,,2,
1308,4/9/2025 4:36,4/9/2025 4:36,https://developer.mozilla.org/,1,5,3,2,6,4,7,"Decorators could enable a much more concise way of memoizing components in react. In theory, I could use @memo on the top of a component, and that decorator would know to memoize the component and specify the display name;"
1309,4/9/2025 4:37,4/9/2025 4:37,https://developer.mozilla.org/,5,3,7,1,2,4,6,
1310,4/9/2025 4:38,4/9/2025 4:38,https://developer.mozilla.org/,1,,,2,,,,
1311,4/9/2025 4:39,4/9/2025 4:39,https://developer.mozilla.org/,1,5,3,2,6,7,4,
1312,4/9/2025 4:39,4/9/2025 4:39,https://developer.mozilla.org/,4,7,1,6,2,5,3,Deferred module evaluation actually helps with long startup time of Node.JS apps; the rest is just syntactic sugar
1313,4/9/2025 4:39,4/9/2025 4:39,https://developer.mozilla.org/,,,,,,,,
1314,4/9/2025 4:39,4/9/2025 4:39,https://developer.mozilla.org/,7,6,4,3,5,1,2,Iterators assist with designing novel or interesting data structures. The existing helpers need some expansion to be more useful and drop reliance on libraries or frameworks.
1315,4/9/2025 4:40,4/9/2025 4:40,https://developer.mozilla.org/,,,,,,,,
1316,4/9/2025 4:41,4/9/2025 4:41,https://developer.mozilla.org/,1,6,3,2,7,4,5,This reduces a lot of boilerplate code. 
1317,4/9/2025 4:41,4/9/2025 4:41,https://developer.mozilla.org/,,,,,,,,
1318,4/9/2025 4:41,4/9/2025 4:41,https://developer.mozilla.org/,6,5,7,2,1,3,4,
1319,4/9/2025 4:42,4/9/2025 4:42,https://developer.mozilla.org/,2,6,1,7,5,4,3,
1320,4/9/2025 4:44,4/9/2025 4:44,https://developer.mozilla.org/,3,,,,,2,1,
1321,4/9/2025 4:45,4/9/2025 4:45,https://developer.mozilla.org/,,,,,,,,
1322,4/9/2025 4:46,4/9/2025 4:46,https://developer.mozilla.org/,4,5,3,6,2,7,1,"Iterator sequence for that nice rust-y functional programming style with methods, and Source phase + Deferred module for optimization opportunities. Joint iteration and JSON.parse source are significantly below the others in my use cases."
1323,4/9/2025 4:47,4/9/2025 4:47,https://developer.mozilla.org/,1,2,7,4,5,3,6,
1324,4/9/2025 4:50,4/9/2025 4:50,https://developer.mozilla.org/,2,6,5,3,7,1,4,I could finally compare two arrays without mixing up the indexes
1325,4/9/2025 4:51,4/9/2025 4:51,https://developer.mozilla.org/,,,,,,,,
1326,4/9/2025 4:52,4/9/2025 4:52,https://developer.mozilla.org/,7,1,6,3,5,2,4,
1327,4/9/2025 4:53,4/9/2025 4:53,https://developer.mozilla.org/,,,,3,,2,1,Ease implementation of certain algorithms.
1328,4/9/2025 4:58,4/9/2025 4:58,https://developer.mozilla.org/,7,5,2,6,3,1,4,
1329,4/9/2025 4:58,4/9/2025 4:58,https://developer.mozilla.org/,1,6,2,3,4,7,5,I am primarily working in python and constructs such as decorators and context manager are awesome tools. I don't know much about the other proposals though. But decorators and context managers would be awesome.
1330,4/9/2025 5:00,4/9/2025 5:00,https://developer.mozilla.org/,,,1,,,,,
1331,4/9/2025 5:00,4/9/2025 5:00,https://developer.mozilla.org/,1,6,2,5,7,4,3,
1332,4/9/2025 5:04,4/9/2025 5:04,https://developer.mozilla.org/,2,4,7,1,5,3,6,
1333,4/9/2025 5:07,4/9/2025 5:07,https://developer.mozilla.org/,3,6,2,1,5,4,7,
1334,4/9/2025 5:10,4/9/2025 5:10,https://developer.mozilla.org/,1,4,2,3,5,7,6,
1335,4/9/2025 5:10,4/9/2025 5:10,https://developer.mozilla.org/,7,6,4,1,5,3,2,JSON.parse will be fast and security will be more natively supported
1336,4/9/2025 5:10,4/9/2025 5:10,https://developer.mozilla.org/,1,,,2,,3,,
1337,4/9/2025 5:15,4/9/2025 5:15,https://developer.mozilla.org/,1,4,2,7,3,5,6,
1338,4/9/2025 5:19,4/9/2025 5:19,https://developer.mozilla.org/,5,7,6,2,4,1,3,
1339,4/9/2025 5:20,4/9/2025 5:20,https://developer.mozilla.org/,,,,,,,,
1340,4/9/2025 5:21,4/9/2025 5:21,https://developer.mozilla.org/,1,6,7,4,5,2,3,"Decorators are invaluable to me in Java, Python, and other languages that include them as language features or extensions already. Even if I don't frequently create them myself, libraries that use decorators have proven to be a powerful tool in my day-to-day. They seriously improve ergonomics of things like dependency injection in Java, and I imagine they could be used to similar effect in JavaScript."
1341,4/9/2025 5:21,4/9/2025 5:21,https://developer.mozilla.org/,1,,,,,,,
1342,4/9/2025 5:22,4/9/2025 5:22,https://developer.mozilla.org/,3,1,7,2,6,5,4,
1343,4/9/2025 5:25,4/9/2025 5:25,https://developer.mozilla.org/,1,6,7,2,5,3,4,Decorators would be fantastically useful and make my code far clearer and safer. JSON round-trip errors are terrible and one of the longest-standing issues in JS. Joint iterators are IMO one of the major missing pieces of functionality vs e.g. Python. Iterator sequencing would be a nice little piece of syntactic sugar. The rest of the items I'm unlikely to actually use.
1344,4/9/2025 5:27,4/9/2025 5:27,https://developer.mozilla.org/,5,7,1,3,2,6,4,
1345,4/9/2025 5:28,4/9/2025 5:28,https://developer.mozilla.org/,4,1,2,3,5,7,6,I used JavaScript-like programming language.
1346,4/9/2025 5:29,4/9/2025 5:29,https://developer.mozilla.org/,,,,,,,,"I want 2 simple things: 1 - basic primitive types (int, float, bool, string).  2 - strict functions with defined parameters.  This would solve huge problems in the world. "
1347,4/9/2025 5:32,4/9/2025 5:32,https://developer.mozilla.org/,1,3,2,7,4,6,5,
1348,4/9/2025 5:32,4/9/2025 5:32,https://developer.mozilla.org/,7,6,3,5,4,1,2,
1349,4/9/2025 5:33,4/9/2025 5:33,https://developer.mozilla.org/,1,5,2,7,6,4,3,
1350,4/9/2025 5:36,4/9/2025 5:36,https://developer.mozilla.org/,2,7,3,1,6,5,4,
1351,4/9/2025 5:37,4/9/2025 5:37,https://developer.mozilla.org/,1,4,3,7,2,5,6,"I love decorators, but their transpiled output is very bloated. Native support for decorators would be awesome for libraries like lit element. I just wish decorators worked with regular functions, as implemented they basically have no use in a fully hook-based react app."
1352,4/9/2025 5:38,4/9/2025 5:38,https://developer.mozilla.org/,2,,,,,1,,
1353,4/9/2025 5:39,4/9/2025 5:39,https://developer.mozilla.org/,5,7,4,3,6,1,2,
1354,4/9/2025 5:41,4/9/2025 5:41,https://developer.mozilla.org/,1,2,3,5,4,6,7,"Decorators would make my code much more cleaner and readable, everything becomes more intuitive"
1355,4/9/2025 5:43,4/9/2025 5:43,https://developer.mozilla.org/,2,5,1,6,7,3,4,"deferred module eval introduces something that as of right now cannot be done, and impacts low-budget devices which is the majority of our users. decorators, together with function decorators, would improve DX and code legibility when introducing multiple high order functions"
1356,4/9/2025 5:43,4/9/2025 5:43,https://developer.mozilla.org/,7,5,6,1,4,3,2,
1357,4/9/2025 5:43,4/9/2025 5:43,https://developer.mozilla.org/,,,,,,,,
1358,4/9/2025 5:44,4/9/2025 5:44,https://developer.mozilla.org/,1,4,2,5,3,7,6,"As I primarily develop Web Components with the Lit library, which increasingly uses decorator syntax for various thing (property/state declaration, custom element definition etc), I have gotten used to the syntax, and it's the only non-standard ES syntactic feature we use on the project (we did hope it would become standard long time ago)."
1359,4/9/2025 5:45,4/9/2025 5:45,https://developer.mozilla.org/,7,4,6,3,5,1,2,"iterators are useful, and having more ergonomic apis would benefit working with them greatly"
1360,4/9/2025 5:46,4/9/2025 5:46,https://developer.mozilla.org/,,,1,,,,,
1361,4/9/2025 5:47,4/9/2025 5:47,https://developer.mozilla.org/,2,4,1,7,3,5,6,
1362,4/9/2025 5:49,4/9/2025 5:49,https://developer.mozilla.org/,,,,,,,,
1363,4/9/2025 5:50,4/9/2025 5:50,https://developer.mozilla.org/,1,,2,3,,5,4,It would eliminate a lot of bolierplate patterns
1364,4/9/2025 5:51,4/9/2025 5:51,https://developer.mozilla.org/,1,6,5,2,7,4,3,
1365,4/9/2025 5:51,4/9/2025 5:51,https://developer.mozilla.org/,,,,1,,,,
1366,4/9/2025 5:51,4/9/2025 5:51,https://developer.mozilla.org/,,,,,,,,
1367,4/9/2025 5:53,4/9/2025 5:53,https://developer.mozilla.org/,1,,,,,,,
1368,4/9/2025 5:54,4/9/2025 5:54,https://developer.mozilla.org/,7,2,3,5,1,4,6,"WASM modules.  Also, I'm concerned ""decorators"" will rank highly just because so many more developers are familiar with them even if features like Source Phase Imports will enable more new functionality. Please take this into consideration!"
1369,4/9/2025 5:56,4/9/2025 5:56,https://developer.mozilla.org/,1,7,6,2,5,4,3,"It would help me in working with Javascript in a more friendly way. As a Angular developer, I feel like decorators are way more powerful and if implemented the same in Javascript it would be really great. Apart from that I also liked the other features inclusions which will be a addon while development."
1370,4/9/2025 6:00,4/9/2025 6:00,https://developer.mozilla.org/,1,4,3,2,5,7,6,
1371,4/9/2025 6:01,4/9/2025 6:01,https://developer.mozilla.org/,4,2,1,5,3,6,7,
1372,4/9/2025 6:04,4/9/2025 6:04,https://developer.mozilla.org/,1,7,5,2,6,4,3,Decorators would reduce boilerplate code and would allow you to do cool things more easily.
1373,4/9/2025 6:08,4/9/2025 6:08,https://developer.mozilla.org/,1,,,,,3,2,
1374,4/9/2025 6:09,4/9/2025 6:09,https://developer.mozilla.org/,1,2,3,6,4,7,5,
1375,4/9/2025 6:10,4/9/2025 6:10,https://developer.mozilla.org/,4,7,1,5,6,2,3,
1376,4/9/2025 6:13,4/9/2025 6:13,https://developer.mozilla.org/,,,,,,,,
1377,4/9/2025 6:16,4/9/2025 6:16,https://developer.mozilla.org/,4,5,3,6,7,1,2,
1378,4/9/2025 6:16,4/9/2025 6:16,https://developer.mozilla.org/,1,6,3,5,7,2,4,
1379,4/9/2025 6:17,4/9/2025 6:17,https://developer.mozilla.org/,,,,,,,,"I mainly work on applications with large bundles, so deferred evaluation could improve the user experience."
1380,4/9/2025 6:18,4/9/2025 6:18,https://developer.mozilla.org/,4,3,7,6,5,1,2,
1381,4/9/2025 6:18,4/9/2025 6:18,https://developer.mozilla.org/,1,7,2,5,6,4,3,I and many people have been doing meta-programming with Javascript using a non-standard decorator implementation provided by TypeScript. It's time for the standard Decorators spec to be finalized and totally replace the legacy one.
1382,4/9/2025 6:19,4/9/2025 6:19,https://developer.mozilla.org/,5,4,7,3,2,6,1,
1383,4/9/2025 6:24,4/9/2025 6:24,https://developer.mozilla.org/,1,6,5,4,7,2,3,lots of cases where metaprogramming simplifies a lot of abstractions
1384,4/9/2025 6:24,4/9/2025 6:24,https://developer.mozilla.org/,1,,,,,,,
1385,4/9/2025 6:25,4/9/2025 6:25,https://developer.mozilla.org/,1,3,6,5,2,7,4,
1386,4/9/2025 6:26,4/9/2025 6:26,https://developer.mozilla.org/,1,5,2,3,4,7,6,"It allows adding info for validation, transformation, serialization etc. and implement other functionality directly on the objects/properties in question."
1387,4/9/2025 6:26,4/9/2025 6:26,https://developer.mozilla.org/,7,5,4,1,6,2,3,
1388,4/9/2025 6:26,4/9/2025 6:26,https://developer.mozilla.org/,1,,2,,,3,4,
1389,4/9/2025 6:27,4/9/2025 6:27,https://developer.mozilla.org/,4,3,2,1,5,6,7,
1390,4/9/2025 6:27,4/9/2025 6:27,https://developer.mozilla.org/,1,6,4,7,5,2,3,
1391,4/9/2025 6:28,4/9/2025 6:28,https://developer.mozilla.org/,6,4,5,3,7,2,1,"prefer using iterator every day, I like it, I need it."
1392,4/9/2025 6:29,4/9/2025 6:29,,3,7,6,5,2,4,1,
1393,4/9/2025 6:29,4/9/2025 6:29,https://developer.mozilla.org/,3,,2,,1,,,Less for me to think about if WASM modules can import each other in a simpler way.
1394,4/9/2025 6:32,4/9/2025 6:32,https://developer.mozilla.org/,3,6,4,5,7,1,2,
1395,4/9/2025 6:36,4/9/2025 6:36,https://developer.mozilla.org/,1,6,7,3,4,5,2,
1396,4/9/2025 6:36,4/9/2025 6:36,https://developer.mozilla.org/,,,,,,,,None of these are any use. They just bloat the language as far as I am concerned. Something useful would be a way to convert an iterator (one of those annoying things that you can't get the length of and you can only call .next()) into an array. Something implemented in fast native code.  Iterators are a pain.
1397,4/9/2025 6:37,4/9/2025 6:37,https://developer.mozilla.org/,3,6,4,5,7,2,1,
1398,4/9/2025 6:37,4/9/2025 6:37,https://developer.mozilla.org/,7,1,5,4,2,6,3,
1399,4/9/2025 6:38,4/9/2025 6:38,https://developer.mozilla.org/,3,4,2,5,1,6,7,I really want the WASM support to be as complete as possible
1400,4/9/2025 6:38,4/9/2025 6:38,https://developer.mozilla.org/,2,3,5,1,4,6,7,
1401,4/9/2025 6:38,4/9/2025 6:38,https://developer.mozilla.org/,2,7,1,4,3,5,6,
1402,4/9/2025 6:40,4/9/2025 6:40,https://developer.mozilla.org/,1,6,2,5,7,3,4,
1403,4/9/2025 6:41,4/9/2025 6:41,https://developer.mozilla.org/,7,2,3,6,1,5,4,I like to see progress on WebAssembly implementation 
1404,4/9/2025 6:42,4/9/2025 6:42,https://developer.mozilla.org/,6,2,4,1,3,7,5,
1405,4/9/2025 6:42,4/9/2025 6:42,https://developer.mozilla.org/,1,,,,,3,2,
1406,4/9/2025 6:45,4/9/2025 6:45,https://developer.mozilla.org/,3,7,4,5,6,1,2,"Iterator helper methods will help a lot with day to day code, making things more maintainable as well as more performant than existing solutions"
1407,4/9/2025 6:46,4/9/2025 6:46,https://developer.mozilla.org/,1,2,4,3,5,7,6,
1408,4/9/2025 6:46,4/9/2025 6:46,https://developer.mozilla.org/,1,4,5,2,3,6,7,
1409,4/9/2025 6:46,4/9/2025 6:46,https://developer.mozilla.org/,1,,,,,,,
1410,4/9/2025 6:48,4/9/2025 6:48,https://developer.mozilla.org/,2,3,7,1,4,5,6,Usage with lists & arrays
1411,4/9/2025 6:50,4/9/2025 6:50,https://developer.mozilla.org/,6,5,7,1,3,2,4,Based on the issues faced frequently in real time.
1412,4/9/2025 6:54,4/9/2025 6:54,https://developer.mozilla.org/,5,4,1,6,3,2,7,
1413,4/9/2025 6:55,4/9/2025 6:55,https://developer.mozilla.org/,2,,,,3,1,,"I use zip all the time since i like functional style programming, since it isn't built in i have to add a library like lodash or write my own every time which isnt super fun."
1414,4/9/2025 6:56,4/9/2025 6:56,https://developer.mozilla.org/,,,,,,,,
1415,4/9/2025 6:55,4/9/2025 6:55,https://developer.mozilla.org/,7,5,1,2,6,3,4,
1416,4/9/2025 6:57,4/9/2025 6:57,https://developer.mozilla.org/,1,,2,,,,3,Quality of life. Ease of use. Code reusability 
1417,4/9/2025 7:00,4/9/2025 7:00,https://developer.mozilla.org/,3,6,4,7,5,1,2,
1418,4/9/2025 7:01,4/9/2025 7:01,https://developer.mozilla.org/,1,6,7,5,4,2,3,I think decorators are neat
1419,4/9/2025 7:01,4/9/2025 7:01,https://developer.mozilla.org/,3,,1,2,,,,
1420,4/9/2025 7:01,4/9/2025 7:01,https://developer.mozilla.org/,5,3,1,4,2,6,7,
1421,4/9/2025 7:02,4/9/2025 7:02,https://developer.mozilla.org/,7,3,5,6,4,1,2,"I use iterators every day in my work, having more native support would be wonderful.  The phase imports are important going forwards to better support WASM and developing tech. "
1422,4/9/2025 7:03,4/9/2025 7:03,https://developer.mozilla.org/,1,,,2,,,,"I use JavaScript every day, but I haven't heard of any of those. Can you provide some explanations for each to make this survey more successful?"
1423,4/9/2025 7:04,4/9/2025 7:04,https://developer.mozilla.org/,,,,,,,,
1424,4/9/2025 7:09,4/9/2025 7:09,https://developer.mozilla.org/,7,2,5,6,1,3,4,"Decorators would not help me as a developer, so I ranked it last. I'm a grumpy person who's not a fan of the behaviors it encourages.  JSON.parse source text access is not a problem I've faced.  Deferred module evaluation, well I'm always using a bundler capable of code splitting, so I don't feel this pain.  New standard library features are almost always welcome, since I use those frequently in $DAY_JOB. we turn to `itertools` or `lodash` because most of the transformations can't be done without helper code. The new ergonomics of `Set` and `Iterator` prototypes don't just mean it's easier to work with, it means we use those structures when we otherwise wouldn't bother. So I'm always in favor of more tools in that domain.  For source-phase imports and the correlated workers improvement, that's exciting. Every bundler has ideas about what that looks like (appending `?worker` or `?src`) or configuring all the disparate tools to allow JSON imports. It wrecks TypeScript unless you add magical definitions. While the runtime behavior doesn't impact me, having a standard way of expressing it means I'll spend less time fighting the tools. It's an added bonus that I can prototype with the same syntax outside a bundler."
1425,4/9/2025 7:09,4/9/2025 7:09,https://developer.mozilla.org/,1,6,5,7,3,2,4,
1426,4/9/2025 7:10,4/9/2025 7:10,https://developer.mozilla.org/,5,6,1,2,7,4,3,
1427,4/9/2025 7:11,4/9/2025 7:11,https://developer.mozilla.org/,5,6,1,4,7,2,3,
1428,4/9/2025 7:12,4/9/2025 7:12,https://developer.mozilla.org/,3,6,7,4,5,2,1,I often find myself using `[...someIterator]`and this seems like the most likely thing to affect how I use iterators.
1429,4/9/2025 7:14,4/9/2025 7:14,https://developer.mozilla.org/,,,,,,,,
1430,4/9/2025 7:16,4/9/2025 7:16,https://developer.mozilla.org/,1,2,5,4,3,7,6,
1431,4/9/2025 7:21,4/9/2025 7:21,https://developer.mozilla.org/,1,7,5,3,6,4,2,
1432,4/9/2025 7:21,4/9/2025 7:21,https://developer.mozilla.org/,1,3,6,7,5,4,2,
1433,4/9/2025 7:21,4/9/2025 7:21,https://developer.mozilla.org/,,,,,,,,
1434,4/9/2025 7:23,4/9/2025 7:23,https://developer.mozilla.org/,,,,,,,,I'm never a big fan of decorators in any language. I feel like they add a level of black box magic that unnecessarily abstracts away features. Iterators are heavily lacking in JS. I'd love to see them get more love. Better importing dynamics will HEAVILY improve npm packaging and whatnot. so good
1435,4/9/2025 7:23,4/9/2025 7:23,https://developer.mozilla.org/,1,4,6,7,5,3,2,
1436,4/9/2025 7:24,4/9/2025 7:24,https://developer.mozilla.org/,1,3,2,5,7,6,4,I believe it will boost annotation/decorator frameworks.
1437,4/9/2025 7:25,4/9/2025 7:25,https://developer.mozilla.org/,,,,,,,,"Decorators/annotations are fundamental to advances in other languages, and it's hard to imagine something that would have a larger impact on the JavaScript ecosystem at this point."
1438,4/9/2025 7:26,4/9/2025 7:26,https://developer.mozilla.org/,1,4,5,2,3,7,6,
1439,4/9/2025 7:26,4/9/2025 7:26,https://developer.mozilla.org/,1,7,5,2,6,3,4,
1440,4/9/2025 7:27,4/9/2025 7:27,https://developer.mozilla.org/,3,6,5,4,7,1,2,
1441,4/9/2025 7:28,4/9/2025 7:28,https://developer.mozilla.org/,2,3,1,5,4,7,6,
1442,4/9/2025 7:28,4/9/2025 7:28,https://developer.mozilla.org/,6,1,3,2,4,5,7,
1443,4/9/2025 7:28,4/9/2025 7:28,https://developer.mozilla.org/,1,7,4,6,5,3,2,Decorators allow you to sign logic directly on a class or method without mixing the underlying business logic with the technical one.
1444,4/9/2025 7:29,4/9/2025 7:29,https://developer.mozilla.org/,1,5,3,6,4,2,7,
1445,4/9/2025 7:30,4/9/2025 7:30,https://developer.mozilla.org/,1,7,5,4,6,3,2,"In my opinion, decorators are a quick win that should have been implemented long ago. iterators concatenation & zipping is nice to have, and the rest I would not benefit from that much."
1446,4/9/2025 7:31,4/9/2025 7:31,https://developer.mozilla.org/,4,5,3,7,6,1,2,
1447,4/9/2025 7:36,4/9/2025 7:36,https://developer.mozilla.org/,1,4,3,2,5,6,7,"I'm not a senior developer to have a full understanding of how decorators work, but using examples of another programming languages like Java (if I'm being correct), that some tags let you change the way objects work (like lombok), It will help a lot Javascript to be transparent and faster to implement design patterns without all the boilerplate. "
1448,4/9/2025 7:36,4/9/2025 7:36,https://developer.mozilla.org/,3,4,5,7,6,1,2,Sometimes I wish I could Zip iterators like in python.
1449,4/9/2025 7:41,4/9/2025 7:41,https://developer.mozilla.org/,,,,,,,,
1450,4/9/2025 7:41,4/9/2025 7:41,https://developer.mozilla.org/,,,,,,,,"The most common things I have to do on a day to day basis is load modules, parse json and iterate the resulting data."
1451,4/9/2025 7:42,4/9/2025 7:42,https://developer.mozilla.org/,1,4,7,5,6,3,2,
1452,4/9/2025 7:43,4/9/2025 7:43,https://developer.mozilla.org/,4,2,3,7,1,5,6,
1453,4/9/2025 7:44,4/9/2025 7:44,https://developer.mozilla.org/en-US/docs/Web/CSS/color_value,,,,,,,,
1454,4/9/2025 7:44,4/9/2025 7:44,https://developer.mozilla.org/,4,6,7,3,5,1,2,I likely will use iterator's util in my work and maybe Json.parse/ decorator but for `import` related feature I'm still heavily depended on bundling so I don't see  immediate value
1455,4/9/2025 7:45,4/9/2025 7:45,https://developer.mozilla.org/,,5,6,2,4,1,3,
1456,4/9/2025 7:45,4/9/2025 7:45,https://developer.mozilla.org/,1,6,4,7,5,2,3,Decorators can be useful to express programming intent more declaratively and make code more readable.
1457,4/9/2025 7:46,4/9/2025 7:46,https://developer.mozilla.org/,,,,1,2,3,,
1458,4/9/2025 7:46,4/9/2025 7:46,https://developer.mozilla.org/,1,5,2,7,6,4,3,
1459,4/9/2025 7:47,4/9/2025 7:47,https://developer.mozilla.org/,5,1,7,6,2,3,4,
1460,4/9/2025 7:48,4/9/2025 7:48,https://developer.mozilla.org/,1,6,7,2,3,4,5,"None of these proposals would really help me as a developer because half of them, such as ""source imports"" are pretty niche. BUT decorators would be really nice though, especially for frameworks like discord.js. I don't really care about deferred module evaluation anyway, because I think it's a bad practice to dynamically import JS files with require(), so I never use it."
1461,4/9/2025 7:48,4/9/2025 7:48,https://developer.mozilla.org/,3,1,2,7,6,4,5,easier to meet bundle size requirements
1462,4/9/2025 7:49,4/9/2025 7:49,https://developer.mozilla.org/,2,,,1,,,,
1463,4/9/2025 7:49,4/9/2025 7:49,https://developer.mozilla.org/,6,2,5,7,1,3,4,"I want to use WebAssembly, compiled from other languages, and this seems key to making that possible or better."
1464,4/9/2025 7:51,4/9/2025 7:51,https://developer.mozilla.org/,2,6,5,7,1,3,4,
1465,4/9/2025 7:51,4/9/2025 7:51,https://developer.mozilla.org/,,,,,,2,1,
1466,4/9/2025 7:51,4/9/2025 7:51,https://developer.mozilla.org/,,,,,,,,
1467,4/9/2025 7:54,4/9/2025 7:54,https://developer.mozilla.org/,5,7,1,3,6,4,2,
1468,4/9/2025 7:56,4/9/2025 7:56,https://developer.mozilla.org/,,,,,,,,"I don't care much about any of these, but I don't want decorators in the spec. They are not an improvement."
1469,4/9/2025 7:58,4/9/2025 7:58,https://developer.mozilla.org/,1,6,4,5,7,3,2,
1470,4/9/2025 7:58,4/9/2025 7:58,https://developer.mozilla.org/,4,7,1,6,5,2,3,
1471,4/9/2025 7:59,4/9/2025 7:59,https://developer.mozilla.org/,1,7,5,2,6,4,3,
1472,4/9/2025 8:04,4/9/2025 8:04,https://developer.mozilla.org/,6,7,5,4,3,2,1,"(As context, I usually work on relatively small JavaScript programs that don't run into significant performance issues)  I frequently have to query multiple sources for data and then combine the output. It would be great to be able to do that more easily"
1473,4/9/2025 8:05,4/9/2025 8:05,https://developer.mozilla.org/,1,3,4,2,5,7,6,
1474,4/9/2025 8:05,4/9/2025 8:05,https://developer.mozilla.org/,2,,,1,,,,"JSON actually fixes a quite frequent issue (at least for me). That said, they are plenty of issues regarding (de)serialization in JS that would need to be addressed. (It's way to complicated to serialize / deserialize something for instance an instance of a class in a reliable way)  Decorators can be useful to write clean code.  For the rest, I don't have a clue."
1475,4/9/2025 8:08,4/9/2025 8:08,https://developer.mozilla.org/,1,,,,,3,2,
1476,4/9/2025 8:10,4/9/2025 8:10,https://developer.mozilla.org/,1,2,4,6,3,7,5,
1477,4/9/2025 8:10,4/9/2025 8:10,https://developer.mozilla.org/,4,7,5,3,6,2,1,
1478,4/9/2025 8:10,4/9/2025 8:10,https://developer.mozilla.org/,5,2,4,3,1,7,6,"I don't think I'd personally use any of these as a developer (since I want to be compatible with ECMAScript 3), but it sounds like the phase imports do not have an effective workaround, so I'd prefer to see those happen because it might affect me as a consumer and then indirectly as a developer (if, say, future software in my toolchain relies on it).  JSON.parse sounds intriguing as something I might polyfill, but I already work around it by only putting in data that can be properly round tripped."
1479,4/9/2025 8:12,4/9/2025 8:12,https://developer.mozilla.org/,5,1,7,6,2,3,4,
1480,4/9/2025 8:14,4/9/2025 8:14,https://developer.mozilla.org/,7,2,1,3,4,6,5,
1481,4/9/2025 8:16,4/9/2025 8:16,https://developer.mozilla.org/,4,7,5,1,6,2,3,Having control over data reinflation/reanimation has real potential benefit.  The rest is hard to get excited about.
1482,4/9/2025 8:16,4/9/2025 8:16,https://developer.mozilla.org/,1,3,6,4,7,5,2,
1483,4/9/2025 8:18,4/9/2025 8:18,https://developer.mozilla.org/,1,,2,,,,,
1484,4/9/2025 8:18,4/9/2025 8:18,https://developer.mozilla.org/,7,6,2,1,5,4,3,
1485,4/9/2025 8:18,4/9/2025 8:18,https://developer.mozilla.org/,1,4,2,5,3,7,6,
1486,4/9/2025 8:20,4/9/2025 8:20,https://developer.mozilla.org/,2,1,3,6,4,5,7,
1487,4/9/2025 8:20,4/9/2025 8:20,https://developer.mozilla.org/,3,6,2,7,5,4,1,
1488,4/9/2025 8:22,4/9/2025 8:22,https://developer.mozilla.org/,3,5,1,4,2,6,7,improve application loading time.
1489,4/9/2025 8:23,4/9/2025 8:23,https://developer.mozilla.org/,1,7,5,2,3,6,4,
1490,4/9/2025 8:24,4/9/2025 8:24,https://developer.mozilla.org/,1,,2,,,,,"While I don't have anything against any of the proposals, I don't think any of them particularly impacts me."
1491,4/9/2025 8:24,4/9/2025 8:24,https://developer.mozilla.org/,1,6,4,5,7,2,3,"decorators are an essential tool to keep global namespace clean and also create an effective set of tooling. People already use them in their natural form, it'd be nice to catch up with the current times"
1492,4/9/2025 8:24,4/9/2025 8:24,https://developer.mozilla.org/,4,5,7,1,6,2,3,Can improve some used reviver functions
1493,4/9/2025 8:29,4/9/2025 8:29,https://developer.mozilla.org/,1,6,7,4,5,2,3,Decorators are nice and expressive. Stuff with iterators are missing pieces. JSON extension is what we need to avoid precision loss.
1494,4/9/2025 8:31,4/9/2025 8:31,https://developer.mozilla.org/,1,,,,,,,type-graphql and typeorm can move away from experimental decorators
1495,4/9/2025 8:32,4/9/2025 8:32,https://developer.mozilla.org/,,,,,,,,
1496,4/9/2025 8:33,4/9/2025 8:33,https://developer.mozilla.org/,4,2,5,1,6,7,3,
1497,4/9/2025 8:33,4/9/2025 8:33,https://developer.mozilla.org/,,,,1,,,,
1498,4/9/2025 8:34,4/9/2025 8:34,https://developer.mozilla.org/,7,4,1,6,5,3,2,
1499,4/9/2025 8:34,4/9/2025 8:34,https://developer.mozilla.org/,5,1,6,3,4,7,2,
1500,4/9/2025 8:35,4/9/2025 8:35,https://developer.mozilla.org/,,,,,,,,
1501,4/9/2025 8:38,4/9/2025 8:38,https://developer.mozilla.org/,,,,1,,3,2,
1502,4/9/2025 8:38,4/9/2025 8:38,https://developer.mozilla.org/,1,6,7,4,5,2,3,I love decorators < 3
1503,4/9/2025 8:38,4/9/2025 8:38,https://developer.mozilla.org/,,,,,,2,1,Decorators make me sad. They seem too complicated.
1504,4/9/2025 8:40,4/9/2025 8:40,https://developer.mozilla.org/,3,4,2,6,1,5,7,"I would love to use webassembly more, but the current state of integration with javascript is pretty dire. This would significantly improve DX."
1505,4/9/2025 8:41,4/9/2025 8:41,https://developer.mozilla.org/,1,,,2,,,,
1506,4/9/2025 8:42,4/9/2025 8:42,https://developer.mozilla.org/,,,,2,,1,3,
1507,4/9/2025 8:43,4/9/2025 8:43,https://developer.mozilla.org/,7,6,3,4,5,1,2,"I think it's a pretty common operation to work on a tuple of iterators together, and in general benefit working with iterators over arrays as such"
1508,4/9/2025 8:44,4/9/2025 8:44,https://developer.mozilla.org/,,,,,,1,2,
1509,4/9/2025 8:46,4/9/2025 8:46,https://developer.mozilla.org/,2,4,1,7,5,3,6,Performance gains are always nice :)
1510,4/9/2025 8:47,4/9/2025 8:47,https://developer.mozilla.org/,7,5,4,2,6,1,3,zip is a simple thing that most languages support and would greatly help ergonomics.
1511,4/9/2025 8:48,4/9/2025 8:48,https://developer.mozilla.org/,1,6,5,4,7,3,2,meta programming improve efficiency
1512,4/9/2025 8:48,4/9/2025 8:48,https://developer.mozilla.org/,1,5,7,4,6,3,2,"Having decorators would simplify so much in everyday development. Your document highlights some use cases in logging and mapping, but there is so much more, such as simplifying the web components syntax, dependency injection, runtime schema validation. We would also get a simple way to mark elements with properties, like a component that can only be rendered on the client when using SSR, or adding metadata such as unique IDs or human readable names."
1513,4/9/2025 8:50,4/9/2025 8:50,https://developer.mozilla.org/,1,2,4,6,3,7,5,
1514,4/9/2025 8:50,4/9/2025 8:50,https://developer.mozilla.org/,7,6,3,4,5,2,1,"The iterator stuff would just make so many array operations more fluid and likely less memory intensive.  I really don't want decorators, I haven't seen an implementation I've liked to date."
1515,4/9/2025 8:50,4/9/2025 8:50,https://developer.mozilla.org/,3,,5,4,,2,1,"i need to do a lot of data-juggling, any iterator methods are a welcome sight"
1516,4/9/2025 8:52,4/9/2025 8:52,https://developer.mozilla.org/,5,1,7,3,4,2,6,1
1517,4/9/2025 8:56,4/9/2025 8:56,https://survey.alchemer.com/,1,7,3,2,6,4,5,new language features are always most welcome
1518,4/9/2025 9:01,4/9/2025 9:01,https://developer.mozilla.org/,1,6,2,7,5,4,3,
1519,4/9/2025 9:06,4/9/2025 9:06,https://developer.mozilla.org/,2,3,1,6,7,5,4,
1520,4/9/2025 9:07,4/9/2025 9:07,https://developer.mozilla.org/,6,2,3,7,1,5,4,I just think it's neat
1521,4/9/2025 9:08,4/9/2025 9:08,https://developer.mozilla.org/,1,7,5,4,6,2,3,
1522,4/9/2025 9:08,4/9/2025 9:08,https://developer.mozilla.org/,1,2,4,7,3,5,6,
1523,4/9/2025 9:10,4/9/2025 9:10,https://developer.mozilla.org/,,,,,,,,
1524,4/9/2025 9:12,4/9/2025 9:12,https://developer.mozilla.org/,,4,2,3,1,,,wasm
1525,4/9/2025 9:13,4/9/2025 9:13,https://developer.mozilla.org/,1,6,3,2,5,7,4,
1526,4/9/2025 9:16,4/9/2025 9:16,https://developer.mozilla.org/,,,,,,,1,
1527,4/9/2025 9:20,4/9/2025 9:20,https://developer.mozilla.org/,1,2,7,3,4,5,6,decorators can really help avoid code redundancy and in terms of packaging and/or in OOP
1528,4/9/2025 9:24,4/9/2025 9:24,https://developer.mozilla.org/,4,7,5,3,6,2,1,
1529,4/9/2025 9:27,4/9/2025 9:27,https://developer.mozilla.org/,1,4,2,3,5,6,7,"Decorators are an incredibly useful feature in TypeScript if used sparingly. Especially in combination with functions it allows to easily attach metadata without adding extra method calls inside the function, keeping the function itself focused on the actual task.  We use them at work quite a bit in TypeScript, PHP (called ""Attributes"") and Rust (called ""Macros"") these days. It's a powerful tool for just the right problem."
1530,4/9/2025 9:30,4/9/2025 9:30,https://developer.mozilla.org/,,3,,2,,1,,
1531,4/9/2025 9:32,4/9/2025 9:32,https://developer.mozilla.org/,1,4,2,7,3,5,6,
1532,4/9/2025 9:33,4/9/2025 9:33,https://developer.mozilla.org/,,,,,,,,"I am a heavy user of Babel's decorator polyfills for the Ember.js framework, which has several features waiting for the decorator proposal to be completed before it can refactor its build process."
1533,4/9/2025 9:34,4/9/2025 9:34,https://developer.mozilla.org/,4,7,1,6,5,2,3,"Native lazy loading would be beneficial than attempting to handle at the framework / library level.  Multiple iterators is nice to have, but less likely used  Decorators is largely unused in most languages (barring python), but has its use cases.  Others I didn't see being used a lot"
1534,4/9/2025 9:34,4/9/2025 9:34,https://developer.mozilla.org/,5,6,3,1,2,4,7,
1535,4/9/2025 9:35,4/9/2025 9:35,https://developer.mozilla.org/,1,5,2,3,4,6,7,
1536,4/9/2025 9:41,4/9/2025 9:41,https://developer.mozilla.org/,,,,,,,,
1537,4/9/2025 9:42,4/9/2025 9:42,https://developer.mozilla.org/,,,,,,,,
1538,4/9/2025 9:49,4/9/2025 9:49,https://developer.mozilla.org/,,,,,,,,"My #1 choice is #1 not because the benefit is massive, but because there is a small benefit with a near-0 cost. Web standards are bloated enough as is."
1539,4/9/2025 9:52,4/9/2025 9:52,https://developer.mozilla.org/,,1,3,4,2,,,
1540,4/9/2025 9:53,4/9/2025 9:53,https://developer.mozilla.org/,1,3,5,2,4,6,7,Decorators would really help our team have more organized DRY codebase.
1541,4/9/2025 9:53,4/9/2025 9:53,https://developer.mozilla.org/,4,7,5,2,6,1,3,
1542,4/9/2025 9:54,4/9/2025 9:54,https://developer.mozilla.org/,,,2,1,3,,,
1543,4/9/2025 9:54,4/9/2025 9:54,https://developer.mozilla.org/,7,4,1,3,2,5,6,
1544,4/9/2025 9:55,4/9/2025 9:55,https://developer.mozilla.org/,1,5,3,6,4,2,7,
1545,4/9/2025 9:56,4/9/2025 9:56,https://developer.mozilla.org/,3,6,7,4,5,1,2,
1546,4/9/2025 10:00,4/9/2025 10:00,https://developer.mozilla.org/,3,6,4,5,7,1,2,It would help me write cleaner and more intuitive code.
1547,4/9/2025 10:05,4/9/2025 10:05,https://developer.mozilla.org/,2,5,4,3,1,7,6,This feature makes embedding of resources for Node-like programs much easier without external tooling. Deno has an early implementation of this and it is very helpful.
1548,4/9/2025 10:05,4/9/2025 10:05,https://developer.mozilla.org/,3,7,6,4,5,2,1,"I love iterators in Rust, so more JS support is great. Decorators are also cool, but I don't use them all that often. All the meta import stuff I personally haven't found a need for, so it's all just kinda there."
1549,4/9/2025 10:06,4/9/2025 10:06,https://developer.mozilla.org/,7,5,1,2,6,3,4,I only see potential in deferred module evaluations
1550,4/9/2025 10:06,4/9/2025 10:06,https://developer.mozilla.org/,,,2,1,,4,3,
1551,4/9/2025 10:11,4/9/2025 10:11,https://developer.mozilla.org/,5,3,1,4,2,7,6,
1552,4/9/2025 10:12,4/9/2025 10:12,https://developer.mozilla.org/,,,,,,,,
1553,4/9/2025 10:16,4/9/2025 10:16,https://developer.mozilla.org/,1,6,7,3,5,2,4,
1554,4/9/2025 10:18,4/9/2025 10:18,https://developer.mozilla.org/,3,2,1,6,5,4,7,
1555,4/9/2025 10:19,4/9/2025 10:19,https://developer.mozilla.org/,,,,,,,,
1556,4/9/2025 10:22,4/9/2025 10:22,https://developer.mozilla.org/,,,,,,,,
1557,4/9/2025 10:23,4/9/2025 10:23,https://developer.mozilla.org/,1,2,6,7,3,4,5,
1558,4/9/2025 10:24,4/9/2025 10:24,https://developer.mozilla.org/,,,,,,,,
1559,4/9/2025 10:29,4/9/2025 10:29,https://developer.mozilla.org/,1,,,,,,,
1560,4/9/2025 10:29,4/9/2025 10:29,https://developer.mozilla.org/,,,,,,,,
1561,4/9/2025 10:30,4/9/2025 10:30,https://developer.mozilla.org/,,,,,,,,
1562,4/9/2025 10:31,4/9/2025 10:31,https://developer.mozilla.org/,1,7,4,5,6,2,3,
1563,4/9/2025 10:31,4/9/2025 10:31,https://developer.mozilla.org/,2,6,1,7,5,4,3,
1564,4/9/2025 10:32,4/9/2025 10:32,https://developer.mozilla.org/,2,3,1,6,4,7,5,
1565,4/9/2025 10:35,4/9/2025 10:35,https://developer.mozilla.org/,2,5,6,1,7,4,3,"Right now, I have to bring in a module to do what having source text access would give me."
1566,4/9/2025 10:35,4/9/2025 10:35,https://developer.mozilla.org/,1,6,5,4,7,3,2,
1567,4/9/2025 10:37,4/9/2025 10:37,https://developer.mozilla.org/,3,7,1,2,6,4,5,
1568,4/9/2025 10:37,4/9/2025 10:37,https://developer.mozilla.org/,3,6,1,7,5,4,2,seems like it would better large projects
1569,4/9/2025 10:38,4/9/2025 10:38,https://developer.mozilla.org/,3,7,5,4,6,1,2,
1570,4/9/2025 10:43,4/9/2025 10:43,https://developer.mozilla.org/,7,4,5,1,3,2,6,
1571,4/9/2025 10:44,4/9/2025 10:44,https://developer.mozilla.org/,,,,,,,,"I'm torn between Iterator Sequence and JSON.parse. I ranked Iterator Sequence at the top because concatenating iterables is such a common task, and it's nice to have a more efficient solution—especially when working with big datasets. That said, the reason I might lean toward JSON.parse is that the workaround for iterator sequencing is pretty straightforward, while writing a JSON parser from scratch (which I've had to do for ETL work) is way more tedious."
1572,4/9/2025 10:46,4/9/2025 10:46,https://developer.mozilla.org/,,,,,,,,
1573,4/9/2025 10:49,4/9/2025 10:49,https://developer.mozilla.org/,5,1,6,4,7,2,3,
1574,4/9/2025 10:49,4/9/2025 10:49,https://developer.mozilla.org/,,,,,,,,
1575,4/9/2025 10:49,4/9/2025 10:49,https://developer.mozilla.org/,1,7,5,3,2,6,4,Having decorators will allow me to encourage my students to use JS classes more and introduce more CS related topics. This will get them thinking more about the solution architecture than just the imperative syntax.
1576,4/9/2025 10:50,4/9/2025 10:50,https://developer.mozilla.org/,1,7,3,2,6,4,5,
1577,4/9/2025 10:51,4/9/2025 10:51,https://developer.mozilla.org/,1,,,,,2,3,"It will help me simplify my files by separating most complexe feature away from the code, while still explicitly transforming the code (not through a pre-processor). It will be really helpful with custom element for instance."
1578,4/9/2025 10:53,4/9/2025 10:53,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,7,6,3,5,2,4,1,
1579,4/9/2025 10:55,4/9/2025 10:55,https://developer.mozilla.org/,7,4,6,5,3,1,2,Decorators being limited to class definitions has reduced the appeal of the feature greatly.
1580,4/9/2025 10:55,4/9/2025 10:55,https://developer.mozilla.org/,3,7,2,4,5,6,1,
1581,4/9/2025 10:57,4/9/2025 10:57,https://developer.mozilla.org/,1,5,3,7,6,2,4,
1582,4/9/2025 10:59,4/9/2025 10:59,https://developer.mozilla.org/,2,1,,,,,,
1583,4/9/2025 10:59,4/9/2025 10:59,https://developer.mozilla.org/,1,5,4,7,6,2,3,
1584,4/9/2025 11:01,4/9/2025 11:01,https://developer.mozilla.org/,,,,,,,,Deferred modules would make pages with a larger load to be faster.
1585,4/9/2025 11:03,4/9/2025 11:03,https://developer.mozilla.org/,3,4,2,1,5,7,6,
1586,4/9/2025 11:04,4/9/2025 11:04,https://developer.mozilla.org/,,,,,,,,
1587,4/9/2025 11:10,4/9/2025 11:10,https://developer.mozilla.org/,1,5,3,2,4,7,6,
1588,4/9/2025 11:11,4/9/2025 11:11,https://developer.mozilla.org/,,,,,,,,
1589,4/9/2025 11:12,4/9/2025 11:12,https://developer.mozilla.org/,,,,,,,,
1590,4/9/2025 11:14,4/9/2025 11:14,https://developer.mozilla.org/,5,1,7,4,3,6,2,
1591,4/9/2025 11:19,4/9/2025 11:19,https://developer.mozilla.org/,3,6,2,1,7,5,4,
1592,4/9/2025 11:24,4/9/2025 11:24,https://developer.mozilla.org/,4,5,7,6,2,1,3,
1593,4/9/2025 11:24,4/9/2025 11:24,https://developer.mozilla.org/,7,2,3,5,4,1,6,
1594,4/9/2025 11:25,4/9/2025 11:25,https://developer.mozilla.org/,3,4,6,7,5,2,1,"I would like to see the iterator changes, as I often have to work with stream or stream-like processing and I support functional pipelines in any language."
1595,4/9/2025 11:27,4/9/2025 11:27,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,4,2,1,5,3,6,7,
1596,4/9/2025 11:27,4/9/2025 11:27,https://developer.mozilla.org/,5,6,4,7,3,1,2,
1597,4/9/2025 11:28,4/9/2025 11:28,https://developer.mozilla.org/,,,,,,,,
1598,4/9/2025 11:28,4/9/2025 11:28,https://developer.mozilla.org/,,,2,,,1,,
1599,4/9/2025 11:29,4/9/2025 11:29,https://developer.mozilla.org/,7,3,6,1,2,4,5,"I don't want any version of decorators that is limited to classes. Any decorator implementation should work on all variables, functions, classes and methods."
1600,4/9/2025 11:30,4/9/2025 11:30,https://developer.mozilla.org/,7,2,3,4,6,1,5,
1601,4/9/2025 11:30,4/9/2025 11:30,https://developer.mozilla.org/,7,6,4,5,3,1,2,
1602,4/9/2025 11:32,4/9/2025 11:32,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,,,,,,,,I want to have an @intrument decorator which is similar to #[instrument] from Rust's tracing library.
1603,4/9/2025 11:33,4/9/2025 11:33,https://developer.mozilla.org/,1,,,,,,,support for JSX
1604,4/9/2025 11:34,4/9/2025 11:34,https://developer.mozilla.org/,7,6,4,1,5,3,2,"My sorting of these features is mostly ""which of these is likely to cause me the least pain in practice""... the JSON thing seems vaguely useful, and worries me the least.  The rest... scare me.  Iterators are kinda cool—and I wish I used them more—but things like React make it really uncomfortable to work with their mutability, so ... I don't actually use them much.  I'm also pretty disconnected from bundler details and page loading concerns. Any new features w.r.t. module loading, etc., mostly worry me that my webpack / vite / etc configs will have to change AGAIN—even if these features are doing nice things for big corporations (w.r.t. faster ... ads?? grr...)... for an academic-adjacent person like me, Javascript updates threaten new webpack rules are usually a bad thing. The amount of time I already have to spend, trying to parse why in the everlasting f*#$ webpack has changed / broken my configuration ... AGAIN ... is a persistent source of frustration, that distracts me from doing the visual, in-page creative stuff that I actually care about.  Decorators scare the hell out of me, w.r.t. the horrifying things people tend to actually do with them. Considering how much documentation (if you're lucky enough to even have docs) that you have to read in order to understand someone else's python decorator, ... IMO decorators are an anti-pattern in general.  IMO, javascript developers are often MUCH WORSE than python devs, in terms of doing crazy things with the language and refusing to write good documentation about the weird thing they did.  For example: I used to teach a visualization class with d3.js, and it was absolute hell trying to teach new-to-js students how to make sense of Mike Bostock's crazy, use-all-the-advanced-javascript-things ""example"" code. Observable.js—tweaking Javascript itself—has made things much, much worse for pedagogy.  For education, support for decorators sounds like a recipe for disaster.  I understand that they're probably coming for us anyway, and that I'm just an old man yelling at clouds. But please ... delay decorators as long as possible!!! More debates / flame wars about the ""right"" way to do them are TOTALLY NECESSARY!!! (not because they really are—I'm not actually aware of the maturity of the w3c spec—but because more debate will serve to usefully delay them!!)"
1605,4/9/2025 11:34,4/9/2025 11:34,https://developer.mozilla.org/,,,,,,,,
1606,4/9/2025 11:38,4/9/2025 11:38,https://developer.mozilla.org/,3,7,4,1,2,5,6,
1607,4/9/2025 11:40,4/9/2025 11:40,https://developer.mozilla.org/,,,,,,,,
1608,4/9/2025 11:41,4/9/2025 11:41,https://developer.mozilla.org/,1,7,2,3,6,5,4,"Decorators have long been a proposed feature, and seeing them land natively in browsers will mean one less step for building projects that depend on even small libraries, like lit."
1609,4/9/2025 11:46,4/9/2025 11:46,https://developer.mozilla.org/,4,1,7,2,3,5,6,
1610,4/9/2025 11:51,4/9/2025 11:51,https://developer.mozilla.org/,4,1,7,6,2,5,3,"when i use package like gsap i can't use live-server on my vs code, i have to use npm run dev "
1611,4/9/2025 11:52,4/9/2025 11:52,https://developer.mozilla.org/,1,4,2,5,3,7,6,
1612,4/9/2025 11:55,4/9/2025 11:55,https://developer.mozilla.org/,1,2,7,3,4,5,6,"We use NestJS, Decorators being more supported in JS is going to help the integration with our build system!"
1613,4/9/2025 11:56,4/9/2025 11:56,https://developer.mozilla.org/,7,5,3,6,4,1,2,"Composition of iterator logic is error prone and tends to have poor performance. These are great candidates for the JS standard library, and presumably great optimization candidates if implemented as such."
1614,4/9/2025 11:57,4/9/2025 11:57,https://developer.mozilla.org/,4,7,5,2,6,1,3,
1615,4/9/2025 11:58,4/9/2025 11:58,https://developer.mozilla.org/,,,,,,,,
1616,4/9/2025 11:59,4/9/2025 11:59,https://developer.mozilla.org/,1,4,6,5,3,2,7,I NEED THIS
1617,4/9/2025 12:01,4/9/2025 12:01,https://developer.mozilla.org/,5,6,4,3,2,7,1,
1618,4/9/2025 12:01,4/9/2025 12:01,https://developer.mozilla.org/,,,,3,4,1,2,"When working with data, zipping is helpful."
1619,4/9/2025 12:03,4/9/2025 12:03,https://developer.mozilla.org/,,,,,,,,
1620,4/9/2025 12:04,4/9/2025 12:04,https://developer.mozilla.org/,,,,,,,,"I'm not very keen on adding more breaking or complex syntax changes to JavaScript, especially when they aren't backward-compatible or polyfillable.  A huge portion of the ecosystem — browser clients, backend environments, and everything in between — often takes years to update. If a feature can't be polyfilled or worked around in older environments, I honestly think it's worth reconsidering.  While I'm open to new features, I strongly prefer they come in ways that don't require introducing new syntax. Constantly expanding the syntax surface makes the language harder to learn, harder to teach, and harder to maintain across a fragmented ecosystem.  To be frank, I wish JavaScript could take a bit of a ""vacation"" from new syntax. There are already a lot of outstanding issues that have lingered for years — things that can't be solved with polyfills, and that developers simply have to wait on browsers to implement or fix. Just a few examples:  Service Workers not available in Private Mode (e.g., Firefox)  Streaming support in WebCrypto  Better standardization and support for the File System Access API  These are core platform gaps that limit what we can build today — and they're more urgent, in my opinion, than experimenting with additional syntax.  i think it's more important to solve the gaps that prevents us to do xyz rather than having new syntactic sugar"
1621,4/9/2025 12:04,4/9/2025 12:04,https://developer.mozilla.org/,1,6,3,2,7,5,4,
1622,4/9/2025 12:05,4/9/2025 12:05,https://developer.mozilla.org/,1,,2,,,,,
1623,4/9/2025 12:06,4/9/2025 12:06,https://developer.mozilla.org/,,,,,,,,
1624,4/9/2025 12:06,4/9/2025 12:06,https://developer.mozilla.org/,7,1,6,5,2,3,4,Optimsitic that ESM phase/source phase imports will unlock some interesting potential in libraries - probably won't be used directly by the average developer but I think some really powerful and clean abstractions could come from them. The rest are essentially minor QOL enhancements. Typescript support for decorators interacting with class types in any way doesn't exist which makes decorators borderline useless for a lot of problems they claim to solve
1625,4/9/2025 12:07,4/9/2025 12:07,https://developer.mozilla.org/,1,,,,,2,,i don´t know
1626,4/9/2025 12:10,4/9/2025 12:10,https://developer.mozilla.org/,5,6,2,1,7,3,4,"really bad explainer doc in source phase imports. can it until it's better written. in particular why call it ""source"" at all. js source code is a string, silly. they want to manipulate module linking etc. on parsed and compiled modules; they shouldn't call them source.  joint iteration and iterator sequence proposals would be better named iterator.zip et al. and iterator.concat. plus putting them in the language for something that can so correctly and performantly in a library is creating unnecessary pain for runtime compatibility.  decorators are a vanity that I'm not particularly interested in using  deferred module evaluation just leaves a bad feeling that arose in top level await not needing some kind of 'await import' style declaration in a dependent. poor discipline from the ""synchronous scripts don't matter"" camp imo, although I understand this is an unpopular opinion.  json parse source access is maybe the only palatable one. adds feature to library functionality. good"
1627,4/9/2025 12:11,4/9/2025 12:11,https://developer.mozilla.org/,5,1,4,6,2,3,7,
1628,4/9/2025 12:26,4/9/2025 12:26,https://developer.mozilla.org/,3,7,5,2,6,1,4,Combining Maps/Sets without having to spread the iterator result in a new array instance.  Better support for Temporal.  Some native support for typescript decorators in frameworks like Angular and Nest.js
1629,4/9/2025 12:28,4/9/2025 12:28,https://developer.mozilla.org/,5,1,3,4,2,6,7,
1630,4/9/2025 12:29,4/9/2025 12:29,https://developer.mozilla.org/,1,6,3,7,5,2,4,
1631,4/9/2025 12:29,4/9/2025 12:29,https://developer.mozilla.org/,,,,,,,,
1632,4/9/2025 12:30,4/9/2025 12:30,https://developer.mozilla.org/,,,,,,,,
1633,4/9/2025 12:30,4/9/2025 12:30,https://developer.mozilla.org/,1,2,4,3,5,6,7,
1634,4/9/2025 12:33,4/9/2025 12:33,https://developer.mozilla.org/,7,1,3,6,2,5,4,Working with Workers sucks right now when using bundlers
1635,4/9/2025 12:33,4/9/2025 12:33,https://developer.mozilla.org/,2,7,5,1,6,4,3,I am dealing with BigInt (de)serialization *right now*. I'll take any improvement to JSON.parse. Current project would also benefit directly from decorators.
1636,4/9/2025 12:39,4/9/2025 12:39,https://developer.mozilla.org/,2,1,3,5,4,7,6,It would improve worker runtime ergonomics
1637,4/9/2025 12:40,4/9/2025 12:40,https://developer.mozilla.org/,2,3,1,5,6,7,4,
1638,4/9/2025 12:40,4/9/2025 12:40,https://developer.mozilla.org/,7,3,4,1,2,6,5,
1639,4/9/2025 12:41,4/9/2025 12:41,https://developer.mozilla.org/,7,1,6,3,2,5,4,"i don see a case where i would use a decorator, the python example killed my vibes about it"
1640,4/9/2025 12:44,4/9/2025 12:44,https://developer.mozilla.org/,3,6,7,4,5,2,1,
1641,4/9/2025 12:44,4/9/2025 12:44,https://developer.mozilla.org/,2,6,3,1,5,7,4,
1642,4/9/2025 12:53,4/9/2025 12:53,https://developer.mozilla.org/,7,4,5,6,3,2,1,
1643,4/9/2025 12:58,4/9/2025 12:58,https://developer.mozilla.org/,3,7,5,4,6,2,1,
1644,4/9/2025 12:59,4/9/2025 12:59,https://developer.mozilla.org/,3,7,5,4,6,2,1,Iterator functions helps me be more efficient when working with transformations on large sets of data.
1645,4/9/2025 13:04,4/9/2025 13:04,https://developer.mozilla.org/,5,3,4,7,6,2,1,
1646,4/9/2025 13:04,4/9/2025 13:04,https://developer.mozilla.org/,2,,,,1,,,
1647,4/9/2025 13:05,4/9/2025 13:05,https://developer.mozilla.org/,1,7,3,2,6,5,4,Decorators can turn many messy scenarios into cleaner and more functional ones. That is important to me.
1648,4/9/2025 13:10,4/9/2025 13:10,https://developer.mozilla.org/,1,4,2,3,5,6,7,Decorators are fundamental part of code I encounter the most in my line of work. They have been in proposal for a long time and many confusing and contradicting ideas poluted the community in the process. Having a definitive end to this would bring clarity and allow language supersets and frameworks to avail of generic standard.
1649,4/9/2025 13:12,4/9/2025 13:12,https://developer.mozilla.org/,1,4,5,7,6,3,2,
1650,4/9/2025 13:12,4/9/2025 13:12,https://developer.mozilla.org/,1,2,3,,,,,"I always like things that allow me to express what I actually mean, without forcing me to change existing syntax.  I am used to Angular decorators.  Not so much Typescript decorators. "
1651,4/9/2025 13:22,4/9/2025 13:22,https://developer.mozilla.org/,7,1,6,3,2,5,4,
1652,4/9/2025 13:24,4/9/2025 13:24,https://developer.mozilla.org/,7,2,3,6,1,5,4,
1653,4/9/2025 13:27,4/9/2025 13:27,https://developer.mozilla.org/,1,7,5,4,6,3,2,
1654,4/9/2025 13:29,4/9/2025 13:29,https://developer.mozilla.org/,4,7,5,3,6,1,2,
1655,4/9/2025 13:29,4/9/2025 13:29,https://developer.mozilla.org/,1,7,2,3,6,4,5,"As a historically primary JS developer, who recently started dabbling in Java and C#, I miss annotations a lot when switching between the two. They're extremely useful and versatile, so much so that I can't pinpoint any one single use-case in which they'd be helpful that wouldn't also take an age to explain. In short, take a look at Java's Mixins library or C#'s Harmony library."
1656,4/9/2025 13:40,4/9/2025 13:40,https://developer.mozilla.org/,1,4,3,2,5,7,6,"Meta programming should be a first class citizen. Using something quite similar with typescript already, I'd love to see it native."
1657,4/9/2025 13:42,4/9/2025 13:42,https://developer.mozilla.org/,2,4,6,7,5,3,1,
1658,4/9/2025 13:43,4/9/2025 13:43,https://developer.mozilla.org/,7,3,4,5,2,6,1,
1659,4/9/2025 13:46,4/9/2025 13:46,https://developer.mozilla.org/,1,5,4,7,6,3,2,
1660,4/9/2025 13:49,4/9/2025 13:49,https://developer.mozilla.org/,5,3,2,4,1,6,7,
1661,4/9/2025 13:50,4/9/2025 13:50,https://developer.mozilla.org/,2,5,4,1,3,6,7,"Many backends assume that 64-bit or larger integers are safe to send as JSON. The lossy reception of these values has caused issues with requiring existing APIs to be rewritten from numbers to strings, which upsets consumers."
1662,4/9/2025 13:50,4/9/2025 13:50,https://developer.mozilla.org/,1,4,7,5,6,2,3,"I frequently use metaprogramming already for: - serialization - animated properties (ie coordinates of game sprites) - memoization And the decorator API looks much more ergonomic than the methods I currently use (looping an object and replacing its functions with decorated ones, or the Proxy object)."
1663,4/9/2025 13:51,4/9/2025 13:51,https://developer.mozilla.org/,1,,,2,,,,
1664,4/9/2025 13:51,4/9/2025 13:51,https://developer.mozilla.org/,,,,,1,,,
1665,4/9/2025 13:52,4/9/2025 13:52,https://developer.mozilla.org/,,,,,,1,,I am tired of writing so much boilerplate 
1666,4/9/2025 13:52,4/9/2025 13:52,https://developer.mozilla.org/,5,2,4,1,3,7,6,
1667,4/9/2025 13:54,4/9/2025 13:54,https://developer.mozilla.org/,5,2,4,1,7,3,6,
1668,4/9/2025 13:57,4/9/2025 13:57,https://developer.mozilla.org/,1,,,,,,,
1669,4/9/2025 13:58,4/9/2025 13:58,https://developer.mozilla.org/,5,6,2,1,7,3,4,
1670,4/9/2025 13:59,4/9/2025 13:59,https://developer.mozilla.org/,,,,,,,,
1671,4/9/2025 13:59,4/9/2025 13:59,https://developer.mozilla.org/,,,,,,,,
1672,4/9/2025 14:00,4/9/2025 14:00,https://developer.mozilla.org/,1,6,4,5,7,2,3,"The syntax sugar for descriptors would let me do a bunch of swanky cool things, coming from a python background where I frequently use decorators / descriptors, ES decorators would let me achieve similar patterns on my frontend code. "
1673,4/9/2025 14:01,4/9/2025 14:01,https://developer.mozilla.org/,2,,,,,3,1,"Right now, I would probably mostly use [...a, ...b, ...c] as a convenient way to sequence iterables, but that eagerly allocates the whole thing as an array, and doesn't even work for infinite iterables.  Would be nice to be able to defer evaluation."
1674,4/9/2025 14:08,4/9/2025 14:08,https://developer.mozilla.org/,7,2,1,6,3,5,4,"One thing for sure, decorators will complicate the code. The rest is roughly arranged if  do not delve into the text of the proposals in detail."
1675,4/9/2025 14:12,4/9/2025 14:12,https://developer.mozilla.org/,4,3,7,6,2,1,5,
1676,4/9/2025 14:18,4/9/2025 14:18,https://developer.mozilla.org/,2,7,6,3,4,1,5,
1677,4/9/2025 14:19,4/9/2025 14:19,https://developer.mozilla.org/,3,4,7,1,6,5,2,
1678,4/9/2025 14:20,4/9/2025 14:20,https://developer.mozilla.org/,1,,2,,,,,
1679,4/9/2025 14:27,4/9/2025 14:27,https://developer.mozilla.org/,1,4,3,7,2,6,5,decorators are quite helpful and speeds up development process as I have experienced using java.
1680,4/9/2025 14:38,4/9/2025 14:38,https://developer.mozilla.org/,,,,,,,,
1681,4/9/2025 14:43,4/9/2025 14:43,https://developer.mozilla.org/,2,,,1,,,,
1682,4/9/2025 14:44,4/9/2025 14:44,https://developer.mozilla.org/,7,5,2,1,6,4,3,
1683,4/9/2025 14:44,4/9/2025 14:44,https://developer.mozilla.org/,2,4,7,1,3,5,6,
1684,4/9/2025 14:50,4/9/2025 14:50,https://developer.mozilla.org/,1,,,,,3,2,"Decorators are useful. Iterator sequence might be useful. Other proposals looks weird.   JSON.parse works well and handles the standart, if we need to support other standart, to determine BigInt or other structores, we have to implement extended json format.  Additional syntax for imports, between import and from, thanks, NOT, just don't do this, please. This can be solved with import attributes. `import f from ""./a.f"" with { no load, no parse, no whatever}`"
1685,4/9/2025 14:55,4/9/2025 14:55,https://developer.mozilla.org/,1,2,6,7,3,5,4,
1686,4/9/2025 15:08,4/9/2025 15:08,https://developer.mozilla.org/,,,,,,,,"Decorators are extremely helpful for some of my existing use cases, which already use decorators via TypeScript. Adding it into ECMAScript just makes it easier and more widespread. "
1687,4/9/2025 15:09,4/9/2025 15:09,https://developer.mozilla.org/,,,1,,,,,"It wouldn't, but it's the least useless proposition."
1688,4/9/2025 15:10,4/9/2025 15:10,https://developer.mozilla.org/,,,,,,,1,Offline
1689,4/9/2025 15:13,4/9/2025 15:13,https://developer.mozilla.org/,3,7,6,5,4,2,1,
1690,4/9/2025 15:20,4/9/2025 15:20,https://developer.mozilla.org/,4,7,5,3,6,2,1,"I'm surprised it doesn't already work like this. I don't need it much day to day, but I thought we could already concat like that"
1691,4/9/2025 15:21,4/9/2025 15:21,https://developer.mozilla.org/,,,,,,,,"Recently I worked with WebGL and ended up with two major objects: Shape and Composite. To achieve a single iteration over all the objects, you would either; a) Have both implement an interface, or b) have one inherit the other. Both has a lot of boilerplate and I think the proposal might ease the coding of such cases."
1692,4/9/2025 15:23,4/9/2025 15:23,https://developer.mozilla.org/,1,7,5,2,6,3,4,
1693,4/9/2025 15:24,4/9/2025 15:24,https://developer.mozilla.org/,,,,,,,,
1694,4/9/2025 15:24,4/9/2025 15:24,https://developer.mozilla.org/,1,7,5,2,6,3,4,Code clarity
1695,4/9/2025 15:26,4/9/2025 15:26,https://developer.mozilla.org/,7,5,6,3,4,1,2,
1696,4/9/2025 15:28,4/9/2025 15:28,https://developer.mozilla.org/,,,1,,,,,
1697,4/9/2025 15:37,4/9/2025 15:37,https://developer.mozilla.org/,7,6,1,5,3,2,4,
1698,4/9/2025 15:38,4/9/2025 15:38,https://developer.mozilla.org/,1,3,7,2,6,5,4,
1699,4/9/2025 15:39,4/9/2025 15:39,https://developer.mozilla.org/,3,2,4,5,1,6,7,I develop libraries which are compiled from Rust to WebAssembly. Currently the deployment story for these libraries is very complicated and error prone. Source phase imports would make the whole packaging headache go away.
1700,4/9/2025 15:39,4/9/2025 15:39,https://developer.mozilla.org/,5,6,3,4,7,2,1,
1701,4/9/2025 15:45,4/9/2025 15:45,https://developer.mozilla.org/,2,4,1,5,3,6,7,"I think deferred module evaluation could greatly simplify performance on some of the more logic heavy pages I work on. I think it could also be a base to build off for frameworks such as React / Next to provide simpler support for code / components that only need to be loaded when certain actions are taken, when going below the fold, etc. Maybe it would even provide an easier / cleaner way to separate client / server components with the push towards React Server Components and island architectures?"
1702,4/9/2025 15:48,4/9/2025 15:48,https://developer.mozilla.org/,4,1,3,6,2,5,,
1703,4/9/2025 15:48,4/9/2025 15:48,https://developer.mozilla.org/,6,2,3,7,1,4,5,
1704,4/9/2025 15:49,4/9/2025 15:49,https://developer.mozilla.org/,4,7,5,3,6,2,1,"The iterator functionality might be useful in some circumstances.  JSON.parse and Decorator changes aren't useful to me, but might be useful to someone else.  Anything involving modules is useless because the module system is too much of mess to use."
1705,4/9/2025 15:55,4/9/2025 15:55,https://developer.mozilla.org/,,,1,,,2,3,
1706,4/9/2025 15:57,4/9/2025 15:57,https://developer.mozilla.org/,1,3,4,7,2,6,5,decorators may help to improve DRY around and improve DX for coding aspects
1707,4/9/2025 15:59,4/9/2025 15:59,https://developer.mozilla.org/,4,7,6,1,2,5,3,
1708,4/9/2025 16:05,4/9/2025 16:05,https://developer.mozilla.org/,,,,,,,,"Give me compartments and/or realms and I am happy. I don't care about decorators much at all, phase imports sound like another fetch mechanism. JSON serdes improvements are always welcome. Lazy loading seems also nice but the above mentioned APIs would be preferred."
1709,4/9/2025 16:18,4/9/2025 16:18,https://developer.mozilla.org/,1,6,7,4,5,2,3,"i really want decorators to make it in because it allows for very repetitive or overlaying systems to exist, such as declaring functions for use on specific http routes or verifying that some set of inputs are of a specific type set."
1710,4/9/2025 16:22,4/9/2025 16:22,https://developer.mozilla.org/,3,6,2,1,7,4,5,Access to the JSON.parse() function source text would allow me to customize and perhaps enhance my current workflow. I develop web apps that record transactions and hierarchical relationships between parties and assets a network
1711,4/9/2025 16:27,4/9/2025 16:27,https://developer.mozilla.org/,1,,,,,,,
1712,4/9/2025 16:42,4/9/2025 16:42,https://developer.mozilla.org/,3,7,5,4,6,2,1,Iterating through lists (or similar) is one of if not the most common thing I do when I program so any quality of life and/or performance improvements to that are greatly appreciated.
1713,4/9/2025 16:43,4/9/2025 16:43,https://developer.mozilla.org/,1,5,2,3,4,7,6,Decorators are useful for certain libraries (e.g. MobX) and it would be good to get this standardized as implementations based on older versions of the spec are kicking around.
1714,4/9/2025 16:44,4/9/2025 16:44,https://developer.mozilla.org/,,,,,,,,
1715,4/9/2025 16:46,4/9/2025 16:46,https://developer.mozilla.org/,1,5,7,4,6,3,2,"They allow for more complex, sophisticated architecture and enable using some patterns known from other programming languages with a similar feature."
1716,4/9/2025 16:47,4/9/2025 16:47,https://developer.mozilla.org/,3,5,6,7,1,2,4,"I use WebAssembly and it would be nice to have support for WebAssembly modules. By the way, although it's not on the list, the proposal I'm most looking forward to is RegExp.escape."
1717,4/9/2025 16:55,4/9/2025 16:55,https://developer.mozilla.org/,1,5,4,,2,3,,
1718,4/9/2025 17:05,4/9/2025 17:05,https://developer.mozilla.org/,1,7,3,2,6,4,5,It would make logging and auditing easier.
1719,4/9/2025 17:10,4/9/2025 17:10,https://developer.mozilla.org/,5,7,3,1,6,4,2,
1720,4/9/2025 17:11,4/9/2025 17:11,https://developer.mozilla.org/,7,4,2,6,3,1,5,
1721,4/9/2025 17:17,4/9/2025 17:17,https://developer.mozilla.org/,,,,,,,,
1722,4/9/2025 17:22,4/9/2025 17:22,https://developer.mozilla.org/,3,6,4,5,7,1,2,"It would make a lot of data work faster and easier, meaning I can more quickly prototype new pipelines without having to think about how to effectively zip them myself using various array methods"
1723,4/9/2025 17:23,4/9/2025 17:23,https://developer.mozilla.org/,,,,,,,,None was interesting.
1724,4/9/2025 17:31,4/9/2025 17:31,https://developer.mozilla.org/,1,7,4,5,6,2,3,Allow more finegrained control over class design for libraries
1725,4/9/2025 17:34,4/9/2025 17:34,https://developer.mozilla.org/,3,,,,4,1,2,"every now and then, i have two arrays that have corresponding elements and i want to map both of them together right now i have to use the index parameter to the callback and it makes a slight asymmetry between the array being iterated over and the other one also, if i do it with a normal for loop, i have to use an explicit counter instead of for...of syntax i think it would make a few bits of code a bit easier to read"
1726,4/9/2025 17:34,4/9/2025 17:34,https://developer.mozilla.org/,2,6,4,1,5,3,7,"It would make (de)serializing 64-bit integer values very easy, and I need that kind of (de)serialization in the project I am currently working on."
1727,4/9/2025 17:46,4/9/2025 17:46,https://developer.mozilla.org/,2,4,6,5,3,7,1,
1728,4/9/2025 17:54,4/9/2025 17:54,https://developer.mozilla.org/,1,5,2,3,7,4,6,"Decorators are cool to use, so having them as a base thing in JS would be very nice"
1729,4/9/2025 17:55,4/9/2025 17:55,https://developer.mozilla.org/,1,,,,,3,2,
1730,4/9/2025 17:57,4/9/2025 17:57,https://developer.mozilla.org/,,,,,1,,,
1731,4/9/2025 17:59,4/9/2025 17:59,https://developer.mozilla.org/,2,,1,3,,,4,Actually fixing Dates is before anything on this list. Date has been terrible since the 90s. Why is Temporal taking so long?
1732,4/9/2025 18:12,4/9/2025 18:12,https://developer.mozilla.org/,1,4,2,,3,,,Decorators would be extremely useful for function and class composition. I've been waiting for it for years.
1733,4/9/2025 18:17,4/9/2025 18:17,https://developer.mozilla.org/,1,,,,,,,
1734,4/9/2025 18:32,4/9/2025 18:32,https://developer.mozilla.org/,,,1,,,,,
1735,4/9/2025 18:41,4/9/2025 18:41,https://developer.mozilla.org/,,,,,,,,
1736,4/9/2025 18:47,4/9/2025 18:47,https://developer.mozilla.org/,1,5,6,2,7,3,4,JSON parsing really needs some updates. It's one of few modern day ES things that require multiple safeguards every. damn. time. :((  Decorators would be killler. I used to use autobind decorator with babel experimental decorators for everything before the arrow fns. Would make lots of things way cleaner as the arrow functions are kind of…an eyesore…? :---D  Iteration could use some minor updates too. Promise race conditions/bulk promise parallel initiation and then awaiting Promise.all is way too familiar for me   Nice drag n drop interface by the way! :u
1737,4/9/2025 18:57,4/9/2025 18:57,https://developer.mozilla.org/,3,4,1,2,7,6,5,
1738,4/9/2025 18:58,4/9/2025 18:58,https://developer.mozilla.org/,1,7,3,4,5,2,6,
1739,4/9/2025 19:02,4/9/2025 19:02,https://developer.mozilla.org/,6,3,1,7,2,5,4,The proposals to make working with wasm and workers sound like the most exciting.  All of the listed features seem like they would be nice to have though
1740,4/9/2025 19:07,4/9/2025 19:07,https://developer.mozilla.org/,1,3,4,2,5,7,6,
1741,4/9/2025 19:11,4/9/2025 19:11,https://developer.mozilla.org/,,,,,,,,
1742,4/9/2025 19:11,4/9/2025 19:11,https://developer.mozilla.org/,4,2,3,5,1,6,7,"Anything that improves ESM performance would be critical to allowing modules to be actually used in production.  I tried to use ESM in my project, but performance was awful (multi-second lag before application could be interacted with).  I think ESM is neat, however until it works better, it will just be an alternative syntax to CommonJS that still requires a bundler. "
1743,4/9/2025 19:11,4/9/2025 19:11,https://developer.mozilla.org/,1,2,5,7,6,4,3,I'm most excited about decorators ability to vastly reduce boilerplate and provide shared/reused functionality (much like traits) across the application.
1744,4/9/2025 19:13,4/9/2025 19:13,https://developer.mozilla.org/,,,3,,,1,2,"The ability to ""zip"" iterators together would enable clean side-by-side iteration and everything that comes with iterators. A use case that comes to mind would be ""merging"" 2+ streams of data by selecting the highest-ranking element from each iterator (a use case I've come across in my current project)"
1745,4/9/2025 19:15,4/9/2025 19:15,https://developer.mozilla.org/,7,4,3,6,5,1,2,"I want records and tuples, and i also want to store in them not only primitives, but any value. If nested value is not primitive, then it must be shallow compared."
1746,4/9/2025 19:15,4/9/2025 19:15,https://developer.mozilla.org/,,,,,2,1,,
1747,4/9/2025 19:16,4/9/2025 19:16,https://developer.mozilla.org/,,,,,,,,"Not sure what any of these would help with, but know that the real wonder of javascript was that it let the USERS of webpages make realtime modifications to tailor pages more to their needs, or make temp bugs fixes -- but now except for some dom changes, with all the object closures and modules and security blocks and consts and locked things like objects and shadow doms and iframes, now changing or fixing even some simple operation is nearly impossible without overriding that whole webpage code file with own saved version."
1748,4/9/2025 19:19,4/9/2025 19:19,https://developer.mozilla.org/,1,5,6,4,7,3,2,
1749,4/9/2025 19:27,4/9/2025 19:27,https://developer.mozilla.org/,,,,,,,,
1750,4/9/2025 19:28,4/9/2025 19:28,https://developer.mozilla.org/,2,,,3,1,,,EditContext 
1751,4/9/2025 19:31,4/9/2025 19:31,https://developer.mozilla.org/,,,,,,,,
1752,4/9/2025 19:41,4/9/2025 19:41,https://developer.mozilla.org/,,4,,5,3,1,2,Add more tools for iterators!
1753,4/9/2025 19:43,4/9/2025 19:43,https://developer.mozilla.org/,1,6,5,2,7,4,3,
1754,4/9/2025 19:43,4/9/2025 19:43,https://developer.mozilla.org/,7,5,2,1,6,3,4,
1755,4/9/2025 19:46,4/9/2025 19:46,https://developer.mozilla.org/,1,6,5,4,7,3,2,
1756,4/9/2025 19:50,4/9/2025 19:50,https://developer.mozilla.org/,1,2,3,5,4,7,6,
1757,4/9/2025 19:50,4/9/2025 19:50,https://developer.mozilla.org/,3,5,7,4,6,1,2,"I use fairly advanced iterables pretty regularly, and I have my own custom iterables library. Having these included properly in the language would be more useful than having to roll my own."
1758,4/9/2025 20:02,4/9/2025 20:02,https://developer.mozilla.org/,7,2,3,6,1,4,5,"What i would most like is static types like typescript, but you didn't ask that. My second choice is to support more kinds of imports so that node and the browser will be able to work with the same kinds of imports."
1759,4/9/2025 20:03,4/9/2025 20:03,https://developer.mozilla.org/,,,,,,,,
1760,4/9/2025 20:04,4/9/2025 20:04,https://developer.mozilla.org/,1,7,5,4,6,3,2,
1761,4/9/2025 20:04,4/9/2025 20:04,https://developer.mozilla.org/,,,,,,,1,
1762,4/9/2025 20:12,4/9/2025 20:12,https://developer.mozilla.org/,1,7,2,5,6,3,4,Decorators are by far the broadest feature here that will help reduce boilerplate code significantly.
1763,4/9/2025 20:37,4/9/2025 20:37,https://developer.mozilla.org/,2,,,,,3,1,
1764,4/9/2025 20:42,4/9/2025 20:42,https://developer.mozilla.org/,2,,1,,,3,,
1765,4/9/2025 20:44,4/9/2025 20:44,https://developer.mozilla.org/,1,7,6,3,4,2,5,"If my understanding is correct, the decorators shall provide features like that in Python. Python decorator is a convenient feature that helps me a lot in developing back-end. So in the future if I would like to write back-end in JS/TS, I shall be happy with decorators."
1766,4/9/2025 20:45,4/9/2025 20:45,https://developer.mozilla.org/,,,,,,,,
1767,4/9/2025 20:48,4/9/2025 20:48,https://developer.mozilla.org/,2,6,5,3,4,7,1,"i've always used decorators and iterator zipping in other languages when possible. as for the other options, they don't affect me nearly as much and i just ranked them based on importance (opinionated of course)"
1768,4/9/2025 20:54,4/9/2025 20:54,https://developer.mozilla.org/,1,6,5,2,7,3,4,Decorators are a huge pain point for migrating from TypeScript to standard JS with type stripping
1769,4/9/2025 20:54,4/9/2025 20:54,https://developer.mozilla.org/,5,7,6,4,3,1,2,simplifying working with data structures using parallel arrays for numeric or other processing. 2d/3d numeric/math processing in which the integrity of one of the arrays is needed for other javascript functions.
1770,4/9/2025 20:55,4/9/2025 20:55,https://developer.mozilla.org/,,,,,,,,
1771,4/9/2025 20:57,4/9/2025 20:57,https://developer.mozilla.org/,,,,2,1,,,
1772,4/9/2025 20:58,4/9/2025 20:58,https://developer.mozilla.org/,,,,,,,,
1773,4/9/2025 21:05,4/9/2025 21:05,https://developer.mozilla.org/,1,7,5,4,6,2,3,Not sure this needs further explanation. Decorators are cool.
1774,4/9/2025 21:06,4/9/2025 21:06,https://developer.mozilla.org/,1,,,4,,2,3,
1775,4/9/2025 21:08,4/9/2025 21:08,https://developer.mozilla.org/,,,,,,,,
1776,4/9/2025 21:11,4/9/2025 21:11,https://developer.mozilla.org/,1,5,2,7,4,6,3,New options for defining functions that take functions as arguments as decorators rather than wrappers would make code much more readable. i.e memoization 
1777,4/9/2025 21:12,4/9/2025 21:12,https://developer.mozilla.org/,2,4,6,3,7,5,1,
1778,4/9/2025 21:12,4/9/2025 21:12,https://developer.mozilla.org/,5,7,6,1,2,3,4,i use json a lot along with a lot of associated protocols/extensions so it'd be pretty cool
1779,4/9/2025 21:17,4/9/2025 21:17,https://developer.mozilla.org/,,,,,,,,
1780,4/9/2025 21:42,4/9/2025 21:42,https://developer.mozilla.org/,,,,,,,,
1781,4/9/2025 21:57,4/9/2025 21:57,https://developer.mozilla.org/,6,1,7,4,3,2,5,Symbol as a WeakMap key
1782,4/9/2025 22:05,4/9/2025 22:05,https://developer.mozilla.org/,6,3,5,1,2,7,4,
1783,4/9/2025 22:09,4/9/2025 22:09,https://developer.mozilla.org/,1,4,3,7,6,2,5,
1784,4/9/2025 22:11,4/9/2025 22:11,https://developer.mozilla.org/,,,,1,,,,
1785,4/9/2025 22:21,4/9/2025 22:21,https://developer.mozilla.org/,6,3,1,5,2,4,7,
1786,4/9/2025 22:23,4/9/2025 22:23,https://developer.mozilla.org/,1,4,7,3,2,6,5,
1787,4/9/2025 22:24,4/9/2025 22:24,https://developer.mozilla.org/,4,7,6,3,5,1,2,"Iterating through lists while collecting data from other lists is very common, and iterating data from multiple synced lists simultaneously would be more succinct than the manual way, and more performant than creating some intermediary list where each element combines two or more elements from the source lists."
1788,4/9/2025 22:24,4/9/2025 22:24,https://developer.mozilla.org/,,4,,5,1,3,2,
1789,4/9/2025 22:29,4/9/2025 22:29,https://developer.mozilla.org/,,,,,,,,
1790,4/9/2025 22:30,4/9/2025 22:30,https://developer.mozilla.org/,1,3,4,5,2,6,7,
1791,4/9/2025 22:30,4/9/2025 22:30,https://developer.mozilla.org/,6,4,2,3,7,1,5,
1792,4/9/2025 22:32,4/9/2025 22:32,https://developer.mozilla.org/,1,6,7,2,5,3,4,"Decorators and enhancing JSON.parse are the only ones that sound legitimately useful, though neither is essential, and I'd say there are still much bigger things to be addressed. The Iterator extensions sound fine, but I've always preferred converting them to full arrays to avoid such limitations. The import phasing is only interesting to JS engine writers. Last and least, ""deferred module evaluation"" is completely worthless and redundant as we already have dynamic imports which do the job in a more natural way despite the community so discouraging the use of them."
1793,4/9/2025 22:38,4/9/2025 22:38,https://developer.mozilla.org/,7,3,1,6,2,5,4,
1794,4/9/2025 22:39,4/9/2025 22:39,https://developer.mozilla.org/,1,,,,,,2,
1795,4/9/2025 22:40,4/9/2025 22:40,https://developer.mozilla.org/,2,6,1,5,7,3,4,
1796,4/9/2025 22:42,4/9/2025 22:42,https://developer.mozilla.org/,,1,3,,2,,,
1797,4/9/2025 22:44,4/9/2025 22:44,https://developer.mozilla.org/,6,4,1,5,3,7,2,
1798,4/9/2025 22:47,4/9/2025 22:47,https://developer.mozilla.org/,,,,,,,,
1799,4/9/2025 22:47,4/9/2025 22:47,https://developer.mozilla.org/,2,4,1,5,3,6,7,
1800,4/9/2025 22:52,4/9/2025 22:52,https://developer.mozilla.org/,,,,,,,,
1801,4/9/2025 22:56,4/9/2025 22:56,https://developer.mozilla.org/,2,3,,,,,1,
1802,4/9/2025 23:01,4/9/2025 23:01,https://developer.mozilla.org/,,,,2,,3,1,
1803,4/9/2025 23:09,4/9/2025 23:09,https://developer.mozilla.org/,,,,,,,,
1804,4/9/2025 23:16,4/9/2025 23:16,https://developer.mozilla.org/,2,7,1,3,6,5,4,
1805,4/9/2025 23:17,4/9/2025 23:17,https://developer.mozilla.org/,1,,,,,3,2,
1806,4/9/2025 23:18,4/9/2025 23:18,https://developer.mozilla.org/,,,,,,,,
1807,4/9/2025 23:18,4/9/2025 23:18,https://developer.mozilla.org/,1,7,6,2,4,3,5,
1808,4/9/2025 23:25,4/9/2025 23:25,https://developer.mozilla.org/,4,,,3,,1,2,
1809,4/9/2025 23:30,4/9/2025 23:30,https://developer.mozilla.org/,,,,,,,,
1810,4/9/2025 23:31,4/9/2025 23:31,https://developer.mozilla.org/,1,5,4,7,6,3,2,It would simplify a lot of boilerplate
1811,4/9/2025 23:32,4/9/2025 23:32,https://developer.mozilla.org/,1,6,3,7,4,2,5,
1812,4/9/2025 23:33,4/9/2025 23:33,https://developer.mozilla.org/,,2,,5,1,3,4,Wasm fast
1813,4/9/2025 23:35,4/9/2025 23:35,https://developer.mozilla.org/,,1,,2,,,3,
1814,4/9/2025 23:37,4/9/2025 23:37,https://developer.mozilla.org/,,,,1,,,,Would help me prevent errors which are not errors per se but are hard to debug because values returned are lossy and therefore not the desired output. 
1815,4/9/2025 23:37,4/9/2025 23:37,https://developer.mozilla.org/,1,7,5,3,6,2,4,
1816,4/9/2025 23:46,4/9/2025 23:46,https://developer.mozilla.org/,1,7,6,3,2,5,4,
1817,4/9/2025 23:48,4/9/2025 23:48,https://developer.mozilla.org/,2,4,3,6,1,7,5,
1818,4/9/2025 23:49,4/9/2025 23:49,https://developer.mozilla.org/,1,,,,,,,
1819,4/9/2025 23:50,4/9/2025 23:50,https://developer.mozilla.org/,,,,,,,,
1820,4/9/2025 23:52,4/9/2025 23:52,https://developer.mozilla.org/,1,3,,2,4,,,
1821,4/9/2025 23:54,4/9/2025 23:54,https://developer.mozilla.org/,1,6,7,4,5,3,2,"allows for nicer, more explicit wrappers"
1822,4/9/2025 23:56,4/9/2025 23:56,https://developer.mozilla.org/,7,2,1,6,3,4,5,"As lover of functional developing, instead of OOP - i personally prefer better performance, that adding decorators. So i liked to place my first 3 items, that i like most. What about iterators - i can't say alot. I don't really used them (for now). Don't exacly understand updates for JSON, but more options - better. Hope it will help. Sory for my bed england!"
1823,4/9/2025 23:57,4/9/2025 23:57,https://developer.mozilla.org/,4,2,3,1,7,5,6,
1824,4/9/2025 23:57,4/9/2025 23:57,https://developer.mozilla.org/,1,4,2,3,7,6,5,
1825,4/9/2025 23:59,4/9/2025 23:59,https://developer.mozilla.org/,2,3,1,5,4,7,6,
1826,4/10/2025 0:00,4/10/2025 0:00,https://developer.mozilla.org/,1,4,2,5,3,7,6,
1827,4/10/2025 0:02,4/10/2025 0:02,https://developer.mozilla.org/,7,3,2,1,4,6,5,
1828,4/10/2025 0:03,4/10/2025 0:03,https://developer.mozilla.org/,2,6,1,5,7,3,4,Our application has reached a point where a simple browser reload takes more than a minute. Any significant improvement in load times will be beneficial to our rapid dev. environment.
1829,4/10/2025 0:04,4/10/2025 0:04,https://developer.mozilla.org/,3,5,7,1,6,2,4,If any javascript developer want to go indepth this rankings will help them out
1830,4/10/2025 0:06,4/10/2025 0:07,https://developer.mozilla.org/,5,2,1,3,4,7,6,More ways to use the web platform and ship less javascript. Adopt ideologies like Qwik.
1831,4/10/2025 0:07,4/10/2025 0:07,https://developer.mozilla.org/,2,1,4,6,7,5,3,"Given the importance of ESM in modern JavaScript, this could be very impactful for improving module loading and performance "
1832,4/10/2025 0:09,4/10/2025 0:09,https://developer.mozilla.org/,2,,,,,,1,
1833,4/10/2025 0:11,4/10/2025 0:11,https://developer.mozilla.org/,,,2,,,1,,
1834,4/10/2025 0:13,4/10/2025 0:13,https://developer.mozilla.org/,,,,2,1,,,
1835,4/10/2025 0:21,4/10/2025 0:21,https://developer.mozilla.org/,7,2,5,6,1,3,4,Loading WASM is currently a PITA and lots of modules require random initialisation steps before you can use them. Having a standardised interface that lets us bundle everything would be eaiser.
1836,4/10/2025 0:22,4/10/2025 0:22,https://developer.mozilla.org/,1,7,2,3,4,6,5,
1837,4/10/2025 0:24,4/10/2025 0:24,https://developer.mozilla.org/,1,7,5,3,6,4,2,Decorator are sorely missing feature in JS
1838,4/10/2025 0:26,4/10/2025 0:26,https://developer.mozilla.org/,,,,1,,,,
1839,4/10/2025 0:26,4/10/2025 0:26,https://developer.mozilla.org/,7,2,4,1,3,6,5,
1840,4/10/2025 0:34,4/10/2025 0:34,https://developer.mozilla.org/,1,5,7,4,6,3,2,
1841,4/10/2025 0:35,4/10/2025 0:35,https://developer.mozilla.org/,1,6,7,5,4,3,2,"Decorators is a must have, it really helps reduce boilerplate and allow to produce simpler methods"
1842,4/10/2025 0:35,4/10/2025 0:35,https://developer.mozilla.org/,,,,,,,,
1843,4/10/2025 0:36,4/10/2025 0:36,https://developer.mozilla.org/,,,,,,,,
1844,4/10/2025 0:37,4/10/2025 0:37,https://developer.mozilla.org/,6,1,3,5,7,4,2,
1845,4/10/2025 0:38,4/10/2025 0:38,https://developer.mozilla.org/,7,4,5,3,6,2,1,NO DECORATORS. NO DECORATORS. NO DECORATORS
1846,4/10/2025 0:40,4/10/2025 0:40,https://developer.mozilla.org/,,,,,,,,
1847,4/10/2025 0:41,4/10/2025 0:41,https://developer.mozilla.org/,3,1,7,2,5,4,6,the best
1848,4/10/2025 0:42,4/10/2025 0:42,https://developer.mozilla.org/,1,4,2,3,5,7,6,
1849,4/10/2025 0:44,4/10/2025 0:44,https://developer.mozilla.org/,1,3,5,2,4,7,6,
1850,4/10/2025 0:45,4/10/2025 0:45,https://developer.mozilla.org/,1,3,2,7,4,6,5,"Decorators would make things like authentication and middleware easier to implement. The current method of calling a method at the top of a function is repetitive and error-prone. As a distinct construct, decorators are more easily caught if missing and allow more flexibility."
1851,4/10/2025 0:45,4/10/2025 0:45,https://developer.mozilla.org/,5,7,2,4,6,1,3,
1852,4/10/2025 0:47,4/10/2025 0:47,https://developer.mozilla.org/,,,,,,,,
1853,4/10/2025 0:48,4/10/2025 0:48,https://developer.mozilla.org/,1,,,,,,,
1854,4/10/2025 0:48,4/10/2025 0:48,https://developer.mozilla.org/,1,6,7,2,5,3,4,Decorators is a good syntax sugar for development.
1855,4/10/2025 0:50,4/10/2025 0:50,https://developer.mozilla.org/,5,,4,6,1,3,2,
1856,4/10/2025 0:51,4/10/2025 0:51,https://developer.mozilla.org/,1,,,2,7,,,
1857,4/10/2025 0:59,4/10/2025 0:59,https://developer.mozilla.org/,,,,,,,,
1858,4/10/2025 1:00,4/10/2025 1:00,https://developer.mozilla.org/,1,3,7,2,4,5,6,
1859,4/10/2025 1:00,4/10/2025 1:00,https://developer.mozilla.org/,5,2,3,1,4,6,7,None of these are useful
1860,4/10/2025 1:00,4/10/2025 1:00,https://developer.mozilla.org/,4,7,5,1,6,2,3,
1861,4/10/2025 1:01,4/10/2025 1:01,https://developer.mozilla.org/,,,,,,,,
1862,4/10/2025 1:01,4/10/2025 1:01,https://developer.mozilla.org/,2,7,3,1,6,5,4,
1863,4/10/2025 1:02,4/10/2025 1:02,,4,7,5,1,6,3,2,Debugging problems in JSON en- and decoding processes can be a nightmare at times. This would drastically reduce the manual work and enable us to log errors when they occur without weird workarounds. 
1864,4/10/2025 1:02,4/10/2025 1:02,https://developer.mozilla.org/,6,2,1,7,3,5,4,improve performance
1865,4/10/2025 1:04,4/10/2025 1:04,https://developer.mozilla.org/,7,4,5,1,6,3,2,
1866,4/10/2025 1:05,4/10/2025 1:05,https://developer.mozilla.org/,7,6,4,3,5,1,2,Would enable a lot of functional patterns which require separate libraries now.
1867,4/10/2025 1:06,4/10/2025 1:06,https://developer.mozilla.org/,2,6,4,5,3,7,1,
1868,4/10/2025 1:08,4/10/2025 1:08,https://developer.mozilla.org/,5,3,2,4,1,7,6,"I think WebAssembly is the future, and allowing us to load libraries from other languages than JS will be absolutely game changer. Making the browser the end game platform where every app can run. You can make this a reality guys!"
1869,4/10/2025 1:10,4/10/2025 1:10,https://developer.mozilla.org/,1,,,,,2,,
1870,4/10/2025 1:11,4/10/2025 1:11,https://developer.mozilla.org/,7,6,1,4,5,3,2,
1871,4/10/2025 1:12,4/10/2025 1:12,https://developer.mozilla.org/,3,1,6,7,5,4,2,
1872,4/10/2025 1:12,4/10/2025 1:12,https://developer.mozilla.org/,7,4,1,3,2,5,6,
1873,4/10/2025 1:15,4/10/2025 1:15,https://developer.mozilla.org/,6,4,1,7,3,5,2,
1874,4/10/2025 1:15,4/10/2025 1:15,https://developer.mozilla.org/,5,2,1,4,3,7,6,Better module support while have the most impact for the community
1875,4/10/2025 1:16,4/10/2025 1:16,https://developer.mozilla.org/,1,5,6,7,4,2,3,
1876,4/10/2025 1:19,4/10/2025 1:19,https://developer.mozilla.org/,6,5,3,2,7,1,4,
1877,4/10/2025 1:19,4/10/2025 1:19,https://developer.mozilla.org/,1,4,2,5,3,7,6,
1878,4/10/2025 1:20,4/10/2025 1:20,https://developer.mozilla.org/,,,,,,,,
1879,4/10/2025 1:21,4/10/2025 1:21,https://developer.mozilla.org/,1,4,7,5,6,3,2,
1880,4/10/2025 1:24,4/10/2025 1:24,https://developer.mozilla.org/,3,6,1,5,2,4,7,
1881,4/10/2025 1:37,4/10/2025 1:37,https://developer.mozilla.org/,,,,,,,,"Oh, thank you for asking.   Here are my comments:  How about fixing your bugs in a first place. That would impress me. And learn to do simple math and stop injecting imaginary numbers in floating points. How about the 'this' being implicit in classes like normal language. How about giving us real multi-thread instead of that worthless worker. instead of redoing things already done.   There  is way more in my logs. But I'm gonna stop here because I doubt you can even handle those simple ones.    "
1882,4/10/2025 1:37,4/10/2025 1:37,https://developer.mozilla.org/,,,,,,,,
1883,4/10/2025 1:40,4/10/2025 1:40,https://developer.mozilla.org/,7,5,2,3,6,1,4,"Working with iterators in plain JS is a pain as they have almost no utilities, this would improve the ergonomics of both iterables and arrays. The source import proposal would make working with workers beareable in my opinion."
1884,4/10/2025 1:47,4/10/2025 1:47,https://developer.mozilla.org/,,,,1,,2,3,"We use custom types to represent numbers for which the amount of digits after the decimal point is relevant even if there are trailing zeroes. Currently, this has to be achieved by passing the precision along as its own field, but this proposal would allow the JSON parser to do so more directly."
1885,4/10/2025 1:49,4/10/2025 1:49,https://developer.mozilla.org/,1,4,2,3,6,7,5,
1886,4/10/2025 1:49,4/10/2025 1:49,https://developer.mozilla.org/,,,,,,,,
1887,4/10/2025 1:56,4/10/2025 1:56,https://developer.mozilla.org/,1,5,2,3,4,7,6,"Decorators provide a new development vector for features and functionality, and it would be very useful if it were a native feature of the language."
1888,4/10/2025 1:57,4/10/2025 1:57,https://developer.mozilla.org/,,,,1,3,,2,
1889,4/10/2025 1:57,4/10/2025 1:57,https://developer.mozilla.org/,2,3,4,5,1,6,7,I want to be a web dev but I am way more productive in rust than JS or TS. I have to wait for wasm.
1890,4/10/2025 1:59,4/10/2025 1:59,https://developer.mozilla.org/,,,,,,,,
1891,4/10/2025 2:05,4/10/2025 2:06,https://developer.mozilla.org/,7,5,2,6,1,3,4,Static analysis is important
1892,4/10/2025 2:06,4/10/2025 2:06,https://developer.mozilla.org/,1,6,4,7,5,2,3,"As the proposal states, the ability to ""reduce boilerplate code and maintain clarity"" is a great boon to all."
1893,4/10/2025 2:07,4/10/2025 2:07,https://developer.mozilla.org/,1,,,,,,,
1894,4/10/2025 2:08,4/10/2025 2:08,https://developer.mozilla.org/,,,,,,,,Decorators would make metaprogramming much more reasonable.
1895,4/10/2025 2:11,4/10/2025 2:11,https://developer.mozilla.org/,1,6,2,7,5,4,3,
1896,4/10/2025 2:13,4/10/2025 2:13,https://developer.mozilla.org/,6,5,3,2,,4,1,
1897,4/10/2025 2:17,4/10/2025 2:17,https://developer.mozilla.org/,5,2,7,1,3,4,6,
1898,4/10/2025 2:21,4/10/2025 2:21,https://developer.mozilla.org/,5,2,6,4,7,1,3,zip is quite a standard paradigm these days
1899,4/10/2025 2:23,4/10/2025 2:23,https://developer.mozilla.org/,,,,,,,,"I rank iterator additions higher because it will open new coding possibilities. This is also the case tor JSON.parse upgrade and decorator implementation, while imports won't add any  coding possibilities. Surely, they will improve performance, but won't change the way we write the code"
1900,4/10/2025 2:24,4/10/2025 2:24,https://developer.mozilla.org/,7,4,5,2,6,1,3,Could easily add multiple files together to iterate over when reading from a stream. Decorators look ugly and they should stay a staple of Java.
1901,4/10/2025 2:27,4/10/2025 2:27,https://developer.mozilla.org/,1,2,3,6,4,5,7,"as a novice with  no technical background, i will be much favored if done an introduction of the following sequence to facilatate an easy and productive journey"
1902,4/10/2025 2:27,4/10/2025 2:27,https://developer.mozilla.org/,1,,,,,,,
1903,4/10/2025 2:31,4/10/2025 2:31,https://developer.mozilla.org/,7,1,4,3,2,5,6,
1904,4/10/2025 2:31,4/10/2025 2:31,https://developer.mozilla.org/,,,,,,,,idk
1905,4/10/2025 2:32,4/10/2025 2:32,https://developer.mozilla.org/,7,1,5,3,2,6,4,I'm looking forward to the fact that having built-in support for import and export will improve the developer experience and might even speed up TypeScript builds.  
1906,4/10/2025 2:33,4/10/2025 2:33,https://developer.mozilla.org/,,,,,,,,
1907,4/10/2025 2:33,4/10/2025 2:33,https://developer.mozilla.org/,7,3,4,6,5,1,2,Zip will help a lot when I have 2 streams of data that I want to process pair-wise
1908,4/10/2025 2:35,4/10/2025 2:35,https://developer.mozilla.org/,3,4,2,7,6,1,5,
1909,4/10/2025 2:35,4/10/2025 2:35,https://developer.mozilla.org/,3,6,2,7,5,1,4,
1910,4/10/2025 2:37,4/10/2025 2:37,https://developer.mozilla.org/,1,7,5,3,2,6,4,
1911,4/10/2025 2:39,4/10/2025 2:39,https://developer.mozilla.org/,1,,,,,,,
1912,4/10/2025 2:40,4/10/2025 2:40,https://developer.mozilla.org/,2,5,1,3,4,6,7,I mostly use angular and there are preloading strategy and other tools. But I would really like to be able to write simple sites using standard web tools. So that it brings pleasure.  Deferred module evalution is one of such improvements that will allow me to abandon the framework in favor of native tools
1913,4/10/2025 2:40,4/10/2025 2:40,https://developer.mozilla.org/,,,,,,,,
1914,4/10/2025 2:42,4/10/2025 2:42,https://developer.mozilla.org/,2,4,1,7,3,6,5,Verry Good
1915,4/10/2025 2:46,4/10/2025 2:46,https://developer.mozilla.org/,,,,3,1,2,,
1916,4/10/2025 2:48,4/10/2025 2:48,https://developer.mozilla.org/,1,3,6,7,2,5,4,
1917,4/10/2025 2:48,4/10/2025 2:48,https://developer.mozilla.org/,3,,,,,1,2,Simplify some for-loops but ultimately a nice-to-have and less important than new capabilities outside of JavaScript.
1918,4/10/2025 2:51,4/10/2025 2:51,https://developer.mozilla.org/,2,5,4,1,3,6,7,
1919,4/10/2025 2:51,4/10/2025 2:51,https://developer.mozilla.org/,,3,4,6,2,5,1,
1920,4/10/2025 2:53,4/10/2025 2:53,https://developer.mozilla.org/,7,5,4,3,6,1,2,
1921,4/10/2025 2:53,4/10/2025 2:53,https://developer.mozilla.org/,2,1,5,4,6,7,3,
1922,4/10/2025 2:53,4/10/2025 2:53,https://developer.mozilla.org/,,,,1,,,,
1923,4/10/2025 2:55,4/10/2025 2:55,https://developer.mozilla.org/,3,4,2,1,5,7,6,"I placed parsing function on top because this can be really useful in daily operations considering the fact that we use this format like 90% of the time as developers to read/write data. Dynamic imports is the second main thing for me since in frontend applications we deal a lot with dynamic or lazy module imports or loading, but it is new to see that we can actually delay their execution. The decorators seems pretty fun because it is for reusable code which is great to kind of teach people to use best practices or to get used to them. I admit that I don't use iterators often."
1924,4/10/2025 2:55,4/10/2025 2:55,https://developer.mozilla.org/,3,6,4,7,5,2,1,the ability to join two iterators into 1 long iterator is a really nice thing to be able to do
1925,4/10/2025 2:56,4/10/2025 2:56,https://developer.mozilla.org/,,,,,,,,
1926,4/10/2025 2:58,4/10/2025 2:58,https://developer.mozilla.org/,1,3,2,5,6,7,4,just for fun
1927,4/10/2025 2:59,4/10/2025 2:59,https://developer.mozilla.org/,4,6,2,7,3,5,1,
1928,4/10/2025 3:00,4/10/2025 3:00,https://developer.mozilla.org/,,,,,,,,
1929,4/10/2025 3:00,4/10/2025 3:00,https://developer.mozilla.org/,,,,,,,,
1930,4/10/2025 3:03,4/10/2025 3:03,https://developer.mozilla.org/,3,5,6,4,7,1,2,
1931,4/10/2025 3:04,4/10/2025 3:04,https://developer.mozilla.org/,1,,,,,,,"It can help me and other developers to add additional meta-data on classes, their members, etc."
1932,4/10/2025 3:05,4/10/2025 3:05,https://developer.mozilla.org/,1,6,7,4,5,3,2,
1933,4/10/2025 3:10,4/10/2025 3:10,https://developer.mozilla.org/,,,,,,,,
1934,4/10/2025 3:11,4/10/2025 3:11,https://developer.mozilla.org/,2,4,6,7,5,3,1,
1935,4/10/2025 3:13,4/10/2025 3:13,https://developer.mozilla.org/,1,4,5,6,7,3,2,
1936,4/10/2025 3:14,4/10/2025 3:14,https://developer.mozilla.org/,1,5,4,7,6,3,2,Cleaner
1937,4/10/2025 3:15,4/10/2025 3:15,https://developer.mozilla.org/,,,,,,,,
1938,4/10/2025 3:18,4/10/2025 3:18,https://developer.mozilla.org/,1,6,7,4,3,5,2,
1939,4/10/2025 3:18,4/10/2025 3:18,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,5,6,4,7,3,2,"Decorators allow for lots of things, but one particular use I found for them (using TS as the starting point) was developing my own simple Dependency Injection system with Decorators. It automates lots of menial tasks, for example it would easily allow memoized functions, or attaching various metadata to a function/class."
1940,4/10/2025 3:20,4/10/2025 3:20,https://developer.mozilla.org/,1,4,7,6,3,5,2,
1941,4/10/2025 3:20,4/10/2025 3:20,https://developer.mozilla.org/,7,5,6,1,4,3,2,"it would make json a more complete data exchange format. currently, dealing with things like big numbers requires a lot of gymnastics."
1942,4/10/2025 3:22,4/10/2025 3:22,https://developer.mozilla.org/,1,,,,,,,
1943,4/10/2025 3:23,4/10/2025 3:23,https://developer.mozilla.org/,3,7,4,5,6,1,2,"coming from a functional programming background, I often come to a point where a zip would provide a clean solution to a problem, which motiviates me to try to achieve this using map or reduce, but it's never as clean as a real zip, so i'm looking forward to that!"
1944,4/10/2025 3:23,4/10/2025 3:23,https://developer.mozilla.org/,1,7,6,2,5,3,4,
1945,4/10/2025 3:24,4/10/2025 3:24,https://developer.mozilla.org/,2,5,3,1,4,6,7,
1946,4/10/2025 3:26,4/10/2025 3:26,https://developer.mozilla.org/,1,6,4,7,5,3,2,
1947,4/10/2025 3:27,4/10/2025 3:27,https://developer.mozilla.org/,3,7,5,4,6,1,2,
1948,4/10/2025 3:31,4/10/2025 3:31,https://developer.mozilla.org/,1,4,6,2,7,3,5,
1949,4/10/2025 3:32,4/10/2025 3:32,https://developer.mozilla.org/,,,,,,,,
1950,4/10/2025 3:32,4/10/2025 3:32,https://developer.mozilla.org/,2,6,4,1,5,3,7,
1951,4/10/2025 3:33,4/10/2025 3:33,https://developer.mozilla.org/,1,2,7,5,3,6,4,
1952,4/10/2025 3:35,4/10/2025 3:35,https://developer.mozilla.org/,1,,,4,,2,3,
1953,4/10/2025 3:36,4/10/2025 3:36,https://developer.mozilla.org/,1,6,4,7,5,3,2,
1954,4/10/2025 3:37,4/10/2025 3:37,https://developer.mozilla.org/,3,1,7,6,5,4,2,
1955,4/10/2025 3:38,4/10/2025 3:38,https://developer.mozilla.org/,1,5,4,7,6,2,3,"I'm currently not working much with classes, but I'm exited about the composition based approach that decorators will enable. The big thing missing here is TypeScript support for modifying the types of classes and methods, which will hopefully happen soon, once the proposal is at stage 4.  Additionally we already see Frameworks like Angular, Lit, and NestJS make extensive use of decorators, so it will be interesting to see what other libraries might do, once decorators are stable.  Lastly I can see a lot of potential in future decorator proposals, like function decorators."
1956,4/10/2025 3:39,4/10/2025 3:39,https://developer.mozilla.org/,,,,,,,,
1957,4/10/2025 3:42,4/10/2025 3:42,https://developer.mozilla.org/,,6,4,3,5,1,2,
1958,4/10/2025 3:43,4/10/2025 3:43,https://developer.mozilla.org/,2,4,1,6,7,5,3,
1959,4/10/2025 3:44,4/10/2025 3:44,https://developer.mozilla.org/,2,3,5,6,7,4,1,"Really only care about zip and Decorators, ive run into some situations where that wouldve been the preffered/simpler solution but couldnt do because of limitations of importing 3rd party libraries.  Decorators sounds kinda cool in JS, would like to try some.   Rest is way above my head lmao. Phase imports?? Source phase??? Deferred modules???? Estoy más perdido que un pulpo en un garaje! "
1960,4/10/2025 3:48,4/10/2025 3:48,https://developer.mozilla.org/,,,,,,,,
1961,4/10/2025 3:49,4/10/2025 3:49,https://developer.mozilla.org/,1,3,5,4,2,6,7,
1962,4/10/2025 3:49,4/10/2025 3:49,https://developer.mozilla.org/,6,3,7,1,5,2,4,
1963,4/10/2025 3:50,4/10/2025 3:50,https://developer.mozilla.org/,3,7,4,1,6,2,5,
1964,4/10/2025 3:51,4/10/2025 3:51,https://developer.mozilla.org/,1,6,2,5,7,3,4,Decorators would help to easier implement features to custom web-components or other class / function driven html components like in react.
1965,4/10/2025 3:54,4/10/2025 3:54,https://developer.mozilla.org/,1,7,4,3,5,2,6,Decorators would allow for easy definition of function result caching.
1966,4/10/2025 3:57,4/10/2025 3:57,https://developer.mozilla.org/,2,4,1,5,3,6,7,
1967,4/10/2025 3:58,4/10/2025 3:58,https://developer.mozilla.org/,,,,1,,,,
1968,4/10/2025 3:58,4/10/2025 3:58,https://developer.mozilla.org/,4,5,7,1,6,2,3,
1969,4/10/2025 4:02,4/10/2025 4:02,https://developer.mozilla.org/,1,3,4,5,2,7,6,"Currently none of forementioned proposals are essential for my work. Mostly I'd probably benefit from WASM module imports. Decorators I might use in some cases, but very few such exist where existing solutions would benefit from using them."
1970,4/10/2025 4:03,4/10/2025 4:03,https://developer.mozilla.org/,4,3,1,7,2,5,6,The need for speed is priority. It vastly outweighs the need for QoL improvements.
1971,4/10/2025 4:03,4/10/2025 4:03,https://developer.mozilla.org/,,3,,1,2,,,I want to make secure implementation easier!!
1972,4/10/2025 4:04,4/10/2025 4:04,https://developer.mozilla.org/,2,5,7,1,6,4,3,Having a fix for parsing bigInt directly in JSON.parse would be great when dealing with DB's like PSQL!  And Decorators are just plainly useful for so many things that its hard to quantify them
1973,4/10/2025 4:08,4/10/2025 4:08,https://developer.mozilla.org/,,,,,,,,
1974,4/10/2025 4:14,4/10/2025 4:14,https://developer.mozilla.org/,5,6,2,1,7,3,4,
1975,4/10/2025 4:20,4/10/2025 4:20,https://developer.mozilla.org/,1,6,2,5,7,4,3,
1976,4/10/2025 4:22,4/10/2025 4:22,https://developer.mozilla.org/,,,,,,,,"None of these are useful to us, besides maybe decorators. The feature our entire company is still waiting on is pipes."
1977,4/10/2025 4:22,4/10/2025 4:22,https://developer.mozilla.org/,1,7,2,5,6,4,3,
1978,4/10/2025 4:23,4/10/2025 4:23,https://developer.mozilla.org/,1,7,2,3,4,6,5,
1979,4/10/2025 4:29,4/10/2025 4:29,https://developer.mozilla.org/,,,3,,,1,2,
1980,4/10/2025 4:32,4/10/2025 4:32,https://developer.mozilla.org/,5,7,6,1,2,4,3,
1981,4/10/2025 4:35,4/10/2025 4:35,https://developer.mozilla.org/,4,2,3,5,1,7,6,
1982,4/10/2025 4:43,4/10/2025 4:43,https://developer.mozilla.org/,,1,,,,,2,
1983,4/10/2025 4:44,4/10/2025 4:44,https://developer.mozilla.org/,1,,3,,,2,,
1984,4/10/2025 4:45,4/10/2025 4:45,https://developer.mozilla.org/,2,7,5,1,6,4,3,It would greatly improve the ease in making online interactive book reader applications.
1985,4/10/2025 4:46,4/10/2025 4:46,https://developer.mozilla.org/,1,5,3,2,6,7,4,
1986,4/10/2025 4:52,4/10/2025 4:52,https://developer.mozilla.org/,1,7,4,5,6,2,3,"Providing ready-made decorators for common behaviours to new members of the team, or not-so experienced ones, will be extremely useful. As well, reducing boilerplate and utilizing a more understandable pattern to extend/wrap class methods can make code more readable and easier to wrap your head around."
1987,4/10/2025 4:52,4/10/2025 4:52,https://developer.mozilla.org/,1,7,4,5,6,2,3,
1988,4/10/2025 4:54,4/10/2025 4:54,https://developer.mozilla.org/,1,7,5,3,6,4,2,it would make javascript more familiar to me and people that work with python and it'd reduce the wordiness of the language without making code harder to understand
1989,4/10/2025 4:55,4/10/2025 4:55,https://developer.mozilla.org/,5,3,1,6,7,4,2,
1990,4/10/2025 4:59,4/10/2025 4:59,https://developer.mozilla.org/,1,6,2,7,3,4,5,
1991,4/10/2025 5:01,4/10/2025 5:01,https://developer.mozilla.org/,5,7,6,1,4,2,3,
1992,4/10/2025 5:02,4/10/2025 5:02,https://developer.mozilla.org/,2,6,7,1,5,3,4,
1993,4/10/2025 5:03,4/10/2025 5:03,https://developer.mozilla.org/,3,2,7,5,1,6,4,
1994,4/10/2025 5:05,4/10/2025 5:05,https://developer.mozilla.org/,,1,,,2,,,
1995,4/10/2025 5:08,4/10/2025 5:08,https://developer.mozilla.org/,2,5,7,1,6,3,4,
1996,4/10/2025 5:12,4/10/2025 5:12,https://developer.mozilla.org/,1,7,4,2,6,3,5,
1997,4/10/2025 5:15,4/10/2025 5:15,https://developer.mozilla.org/,3,5,6,4,7,1,2,
1998,4/10/2025 5:19,4/10/2025 5:19,https://developer.mozilla.org/,1,4,3,6,2,7,5,drop external plugins (babel)
1999,4/10/2025 5:21,4/10/2025 5:21,https://developer.mozilla.org/,1,4,2,7,3,5,6,
2000,4/10/2025 5:26,4/10/2025 5:26,https://developer.mozilla.org/,1,,,,,,,Decorators are a highly legible way of annotating in TypeScript with important underlying meanings. It would be great to have this available in JavaScript as well.
2001,4/10/2025 5:26,4/10/2025 5:26,https://developer.mozilla.org/,3,6,7,1,5,2,4,
2002,4/10/2025 5:27,4/10/2025 5:27,https://developer.mozilla.org/,7,5,1,4,6,3,2,"Please, do not add Decorators. Decorators will make JavaScript explode with unnecessary complexity and implicit spaghetti dependencies that are difficult to manage. Add more functional operations instead to make explicit data manipulation more concise instead."
2003,4/10/2025 5:28,4/10/2025 5:28,https://developer.mozilla.org/,2,1,6,4,7,3,5,
2004,4/10/2025 5:30,4/10/2025 5:30,https://developer.mozilla.org/,,,,,,,,"Please do not add decorators, they are generally confusing and unreadable as a coding pattern "
2005,4/10/2025 5:31,4/10/2025 5:31,https://developer.mozilla.org/,1,3,,,,2,4,"Decorators would make a lot of things easier, we could, for instance, emulate abstraction and cool other object oriented concepts, it would perhaps make debugging a little more elegant at times etc."
2006,4/10/2025 5:32,4/10/2025 5:32,https://developer.mozilla.org/,,,,,,,,
2007,4/10/2025 5:33,4/10/2025 5:33,https://developer.mozilla.org/,2,5,6,7,1,3,4,
2008,4/10/2025 5:39,4/10/2025 5:39,https://developer.mozilla.org/,,,,,,,,
2009,4/10/2025 5:39,4/10/2025 5:39,https://developer.mozilla.org/,1,4,2,,3,,,
2010,4/10/2025 5:42,4/10/2025 5:42,https://developer.mozilla.org/,2,7,5,1,6,4,3,"JSON has always been an insufficient format for data interchange. The proposal enables enhanced JSON parsing and dumping, which are crucial to rich data representations in applications."
2011,4/10/2025 5:42,4/10/2025 5:42,https://developer.mozilla.org/,1,6,4,7,5,2,3,"It helps by simplifying large code bases, large and sparse data processing that can be related on the UI and also managing large bundled modules."
2012,4/10/2025 5:44,4/10/2025 5:44,https://developer.mozilla.org/,1,,,3,,,2,
2013,4/10/2025 5:45,4/10/2025 5:45,https://developer.mozilla.org/,3,1,2,6,4,7,5,
2014,4/10/2025 5:45,4/10/2025 5:45,https://developer.mozilla.org/,3,5,7,1,6,4,2,
2015,4/10/2025 5:48,4/10/2025 5:48,https://developer.mozilla.org/,3,7,5,4,6,2,1,
2016,4/10/2025 5:50,4/10/2025 5:50,https://developer.mozilla.org/,4,7,5,6,3,2,1,A better conventional approach to working with arrays could cause performance improvements all over (when calls to existing methods that iterate and construct new arrays would be replaced). It would require a full feature set similar to C# LINQ though.
2017,4/10/2025 5:51,4/10/2025 5:51,https://developer.mozilla.org/,7,6,1,4,5,3,2,
2018,4/10/2025 5:52,4/10/2025 5:52,https://developer.mozilla.org/,1,6,4,7,5,3,2,
2019,4/10/2025 5:55,4/10/2025 5:55,https://developer.mozilla.org/,,,,,,,,
2020,4/10/2025 5:56,4/10/2025 5:56,https://developer.mozilla.org/,3,2,1,4,5,7,6,Better performance of developed packages.
2021,4/10/2025 5:57,4/10/2025 5:57,https://developer.mozilla.org/,3,1,4,5,2,6,7,
2022,4/10/2025 6:01,4/10/2025 6:01,https://developer.mozilla.org/,1,4,2,5,3,6,7,
2023,4/10/2025 6:01,4/10/2025 6:01,https://developer.mozilla.org/,1,2,3,5,6,4,7,
2024,4/10/2025 6:03,4/10/2025 6:03,https://developer.mozilla.org/,,,,2,,,1,
2025,4/10/2025 6:06,4/10/2025 6:06,https://developer.mozilla.org/,1,4,6,5,7,3,2,simplify the scaffolding of any complex app
2026,4/10/2025 6:08,4/10/2025 6:08,https://developer.mozilla.org/,2,4,7,6,5,1,3,"I've often found myself iterating over pairs of iterables, and it is undesirable to have to convert these into arrays before iterating through them."
2027,4/10/2025 6:15,4/10/2025 6:15,https://developer.mozilla.org/,4,2,1,7,5,3,6,
2028,4/10/2025 6:16,4/10/2025 6:16,https://developer.mozilla.org/,1,,,,,,2,
2029,4/10/2025 6:20,4/10/2025 6:20,https://developer.mozilla.org/,1,,,,,3,2,
2030,4/10/2025 6:21,4/10/2025 6:21,https://survey.alchemer.com/,1,4,3,5,2,7,6,
2031,4/10/2025 6:23,4/10/2025 6:23,https://developer.mozilla.org/,,,,,,,,"thank for thinking about developer, but i don't know about all this things "
2032,4/10/2025 6:24,4/10/2025 6:24,https://developer.mozilla.org/,5,2,1,6,3,7,4,
2033,4/10/2025 6:24,4/10/2025 6:24,https://developer.mozilla.org/,6,7,1,4,2,5,3,
2034,4/10/2025 6:27,4/10/2025 6:27,https://developer.mozilla.org/,,,,,,,,Decorators
2035,4/10/2025 6:31,4/10/2025 6:31,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,6,5,7,4,3,2,1,
2036,4/10/2025 6:32,4/10/2025 6:32,https://developer.mozilla.org/,3,7,4,5,6,1,2,"Zipping is an incredibly common operation across languages. It's one of the things I miss most from Python, Rust, Haskell, etc. when I write JS."
2037,4/10/2025 6:34,4/10/2025 6:34,https://developer.mozilla.org/,,,,,,,,
2038,4/10/2025 6:36,4/10/2025 6:36,https://developer.mozilla.org/,7,3,1,4,2,6,5,
2039,4/10/2025 6:36,4/10/2025 6:36,https://developer.mozilla.org/,1,6,4,5,7,3,2,
2040,4/10/2025 6:39,4/10/2025 6:39,https://developer.mozilla.org/,1,3,2,5,4,7,6,
2041,4/10/2025 6:40,4/10/2025 6:40,https://developer.mozilla.org/,5,2,7,6,1,4,3,
2042,4/10/2025 6:40,4/10/2025 6:40,https://developer.mozilla.org/,1,3,4,5,2,6,7,
2043,4/10/2025 6:41,4/10/2025 6:41,https://developer.mozilla.org/,1,7,5,4,6,3,2,
2044,4/10/2025 6:41,4/10/2025 6:41,https://developer.mozilla.org/,1,,2,,,,,
2045,4/10/2025 6:42,4/10/2025 6:42,https://developer.mozilla.org/,3,2,1,4,5,7,6,
2046,4/10/2025 6:45,4/10/2025 6:45,https://developer.mozilla.org/,3,6,4,2,7,1,5,
2047,4/10/2025 6:49,4/10/2025 6:49,https://developer.mozilla.org/,6,1,2,7,3,4,5,
2048,4/10/2025 6:51,4/10/2025 6:51,https://developer.mozilla.org/,1,4,5,7,6,3,2,
2049,4/10/2025 6:55,4/10/2025 6:55,https://developer.mozilla.org/,,,,1,,,,Would love this to remove my `json-bigint` dependency.
2050,4/10/2025 6:58,4/10/2025 6:58,https://developer.mozilla.org/,1,7,5,2,6,3,4,Decorators would bring a feature I am used to from Python to JavaScript.
2051,4/10/2025 7:00,4/10/2025 7:00,https://developer.mozilla.org/,6,2,7,3,1,5,4,
2052,4/10/2025 7:02,4/10/2025 7:02,https://developer.mozilla.org/,,,,1,,2,3,No more workarounds for data loss when using JSON as a (de)serializer.  
2053,4/10/2025 7:02,4/10/2025 7:02,https://developer.mozilla.org/,3,1,5,4,2,6,7,
2054,4/10/2025 7:03,4/10/2025 7:03,https://developer.mozilla.org/,,,,,,,,"I often wish for joint iteration when writing tests or after making parallel independent API requests that both return arrays. Basically any time have I have two related arrays. It's a feature I use in Python constantly that I always wish JS had, but am usually too lazy to import lodash's version.  Decorators also seem like a great way to augment function behavior and isolate the augmentation. Another thing I love from Python.  "
2055,4/10/2025 7:04,4/10/2025 7:04,https://developer.mozilla.org/,1,,,,,,,
2056,4/10/2025 7:07,4/10/2025 7:07,https://developer.mozilla.org/,4,2,6,5,1,3,7,WASM + JS = < 3
2057,4/10/2025 7:09,4/10/2025 7:09,https://developer.mozilla.org/,7,3,2,1,6,5,4,Better code functionality and easier debugging when handling JSON files.
2058,4/10/2025 7:12,4/10/2025 7:12,https://developer.mozilla.org/,,,,,,,,"I think that implementing features related to the OOP is not necessary o required. In my opinion, we should work on features to improve and move JS to functional programming. "
2059,4/10/2025 7:12,4/10/2025 7:12,https://developer.mozilla.org/,5,2,1,3,4,7,6,
2060,4/10/2025 7:13,4/10/2025 7:13,https://developer.mozilla.org/,1,6,5,2,7,4,3,"Half of these functionalities would be too complex for me on a daily basis, and seems to only be useful to library-developers.  Decorators seem like a useful extension to JS, a feature that I could actually use in my daily life."
2061,4/10/2025 7:15,4/10/2025 7:15,https://developer.mozilla.org/,1,,,,,3,2,
2062,4/10/2025 7:18,4/10/2025 7:18,https://developer.mozilla.org/,,,,,,,,
2063,4/10/2025 7:18,4/10/2025 7:18,https://developer.mozilla.org/,6,4,1,5,3,2,7,
2064,4/10/2025 7:18,4/10/2025 7:18,https://developer.mozilla.org/,7,2,6,1,5,4,3,"I deal a lot with REST APIs, configuration files, etc. giving all kinds of JSON output. Not all of these are standard, and I've found myself more than once wishing to see the source text that for often strange reasons, I couldn't simply access otherwise. "
2065,4/10/2025 7:21,4/10/2025 7:21,https://developer.mozilla.org/,1,7,4,5,2,6,3,
2066,4/10/2025 7:22,4/10/2025 7:22,https://developer.mozilla.org/,2,6,5,1,7,3,4,
2067,4/10/2025 7:23,4/10/2025 7:23,https://developer.mozilla.org/,6,2,3,4,5,7,1,
2068,4/10/2025 7:24,4/10/2025 7:24,https://developer.mozilla.org/,6,7,2,3,1,5,4,simplified bundling would be useful
2069,4/10/2025 7:25,4/10/2025 7:25,https://developer.mozilla.org/,5,2,1,3,6,7,4,
2070,4/10/2025 7:26,4/10/2025 7:26,https://developer.mozilla.org/,,,,,,,,
2071,4/10/2025 7:28,4/10/2025 7:28,https://developer.mozilla.org/,1,3,2,6,5,7,4,Decorators feel like a good way to re-use functions without cluttering the main purpose of what a function should do the same way it is used in Python.
2072,4/10/2025 7:28,4/10/2025 7:28,https://developer.mozilla.org/,4,2,1,7,3,6,5,
2073,4/10/2025 7:29,4/10/2025 7:29,https://developer.mozilla.org/,7,2,3,4,1,5,6,"I primarily program in C++, so source phase imports would be an amazing way to get the ball rolling on simplified web assembly imports. Even with modern tools such as emscripten using web assembly feels similar to manually retrieving symbols from a dynamic library. I'm always interested in projects that make porting to the web easier."
2074,4/10/2025 7:31,4/10/2025 7:31,https://developer.mozilla.org/,,,,,,,,
2075,4/10/2025 7:33,4/10/2025 7:33,https://developer.mozilla.org/,4,6,5,1,7,2,3,"JSON is so ubiquitous that any improvement would be useful to many, including myself. That being said, I'd much rather see native JSONPath support, similar to what's available in PostgreSQL (https://www.postgresql.org/docs/current/functions-json.html)."
2076,4/10/2025 7:34,4/10/2025 7:34,https://developer.mozilla.org/,,,,,,,,
2077,4/10/2025 7:35,4/10/2025 7:35,https://developer.mozilla.org/,1,2,7,6,3,5,4,
2078,4/10/2025 7:38,4/10/2025 7:38,https://developer.mozilla.org/,7,2,5,6,1,4,3,"wasm ergonomics improvements are good, it is quite tricky to currently use wasm in source code."
2079,4/10/2025 7:38,4/10/2025 7:38,https://survey.alchemer.com/,7,5,4,1,6,3,2,"Serializing BigInts, Dates, Buffers, etc, in a transparent way is a common problem."
2080,4/10/2025 7:38,4/10/2025 7:38,https://developer.mozilla.org/,2,,,3,,1,,Making code clearer is always good.
2081,4/10/2025 7:39,4/10/2025 7:39,https://developer.mozilla.org/,1,7,5,2,6,3,4,I just want there to be one single standard for how decorators are handled instead of it being slightly different depending on which transpiler my code goes through...
2082,4/10/2025 7:41,4/10/2025 7:41,https://developer.mozilla.org/,1,,,,2,,,
2083,4/10/2025 7:42,4/10/2025 7:42,https://developer.mozilla.org/,,,,,,,,
2084,4/10/2025 7:45,4/10/2025 7:45,https://developer.mozilla.org/,1,7,5,4,6,2,3,
2085,4/10/2025 7:46,4/10/2025 7:46,https://developer.mozilla.org/,1,5,3,7,4,6,2,
2086,4/10/2025 7:51,4/10/2025 7:51,https://developer.mozilla.org/,,,,,,,,"Deferred module evaluation seems like a great way to improve the web ecosystem as a whole, especially in the context of performance and considering the enormous amount of third-party libraries/packages shipped with the majority of modern sites."
2087,4/10/2025 7:51,4/10/2025 7:51,https://developer.mozilla.org/,6,3,2,4,7,5,1,No one of those will help me in my daily work.
2088,4/10/2025 7:51,4/10/2025 7:51,https://developer.mozilla.org/,1,3,4,5,2,7,6,
2089,4/10/2025 7:52,4/10/2025 7:52,https://developer.mozilla.org/,6,7,1,2,5,3,4, any performance optimizations is ideal 
2090,4/10/2025 7:52,4/10/2025 7:52,https://developer.mozilla.org/,,,,,1,,,
2091,4/10/2025 7:52,4/10/2025 7:52,https://developer.mozilla.org/,6,5,7,1,4,3,2,"Improvements to JSON for better handling for Date and BigInt are long overdue.  Iteration improvements would have immediate benefits in the ways that I write code every day.  Phase imports sound very useful.  Excited about promotion of WebAssembly as an option.  Decorators are mind-blowingly useful in C#. I've played with them in a TypeScript context.  Despite having the ability to use them in TypeScript, and despite loving the C# implementation, I just don't use them much in TypeScript. Perhaps decorators in C# are so useful there because the type system is far more constrained? But JS has a more permissive type system and I have less difficulty representing intent without resorting to decorators.  Deferred module evaluation addresses a problem that I don't have."
2092,4/10/2025 7:59,4/10/2025 7:59,https://developer.mozilla.org/,3,4,1,2,5,6,7,
2093,4/10/2025 8:06,4/10/2025 8:06,https://developer.mozilla.org/,1,,,,,,,
2094,4/10/2025 8:08,4/10/2025 8:08,https://developer.mozilla.org/,1,6,4,2,7,3,5,
2095,4/10/2025 8:08,4/10/2025 8:08,https://developer.mozilla.org/,,,,,,,,
2096,4/10/2025 8:14,4/10/2025 8:14,https://developer.mozilla.org/,1,6,5,7,4,2,3,"I could use method decorators. I already do, but using 3rd party libs"
2097,4/10/2025 8:15,4/10/2025 8:15,https://developer.mozilla.org/,1,6,7,4,5,2,3,"There is a lot of boilerplate building real-world microservice-based services related to authorization, required execution context, etc., that could be simplified with built-in declarative constructs."
2098,4/10/2025 8:15,4/10/2025 8:15,https://developer.mozilla.org/,,,,,,,,
2099,4/10/2025 8:15,4/10/2025 8:15,https://developer.mozilla.org/,4,5,2,1,3,6,7,This will make the use of BigInt more viable in applications with JS frontends and backends.
2100,4/10/2025 8:23,4/10/2025 8:23,https://developer.mozilla.org/,2,5,6,7,4,1,3,I often use functional patterns in my code and the .zip* methods in the proposal would patch some holes in them in current JS. These additions also seem smaller in scale and easier to pass through the standards process than something like decorators which I would really like added also.
2101,4/10/2025 8:31,4/10/2025 8:31,https://developer.mozilla.org/,5,2,6,7,1,4,3,
2102,4/10/2025 8:31,4/10/2025 8:31,https://developer.mozilla.org/,,,,,,,,
2103,4/10/2025 8:33,4/10/2025 8:33,https://developer.mozilla.org/,4,1,6,5,3,7,2,
2104,4/10/2025 8:34,4/10/2025 8:34,https://developer.mozilla.org/,1,7,4,5,6,2,3,
2105,4/10/2025 8:35,4/10/2025 8:35,https://developer.mozilla.org/,3,2,1,5,4,6,7,
2106,4/10/2025 8:39,4/10/2025 8:39,https://developer.mozilla.org/,7,6,4,3,5,2,1,
2107,4/10/2025 8:40,4/10/2025 8:40,https://developer.mozilla.org/,1,3,7,6,5,2,4,
2108,4/10/2025 8:42,4/10/2025 8:42,https://developer.mozilla.org/,2,7,4,5,6,1,3,Joint iteration a big missing part of iterator in JS. It as some high impact on performance while iterating through data.
2109,4/10/2025 8:44,4/10/2025 8:44,https://developer.mozilla.org/,7,2,3,6,1,4,5,I always appreciate faster bundlers and also would like web assembly to be adopted more for performance gains. 
2110,4/10/2025 8:45,4/10/2025 8:45,https://developer.mozilla.org/,1,5,6,7,2,3,4,
2111,4/10/2025 8:46,4/10/2025 8:46,https://developer.mozilla.org/,,,,,,,,
2112,4/10/2025 8:49,4/10/2025 8:49,https://developer.mozilla.org/,1,,,,,,2,"Angular implements its own decorators to enable most of its functionality. Having native support for decorators on the language level opens up possibilities to cover use cases currently served by TS only, and welcome back direct use of JS, so that it avoid the fate of being an bare bones assembly language of the web."
2113,4/10/2025 8:50,4/10/2025 8:50,https://developer.mozilla.org/,1,,2,,,,,
2114,4/10/2025 8:51,4/10/2025 8:51,https://developer.mozilla.org/,1,3,4,5,2,6,7,
2115,4/10/2025 8:53,4/10/2025 8:53,https://developer.mozilla.org/,,,,,,,,I don't see myself using any of these features.
2116,4/10/2025 8:54,4/10/2025 8:54,https://developer.mozilla.org/,,,,,,,,
2117,4/10/2025 8:55,4/10/2025 8:55,https://developer.mozilla.org/,4,1,5,3,6,2,7,"ESM is my favourite js ""variant"" and whatever you want to include to it is always welcome 👋"
2118,4/10/2025 8:57,4/10/2025 8:57,https://developer.mozilla.org/,1,2,7,3,6,4,5,decorators is super feature! 
2119,4/10/2025 8:59,4/10/2025 8:59,https://developer.mozilla.org/,,,,,,,,
2120,4/10/2025 9:01,4/10/2025 9:01,https://developer.mozilla.org/,5,6,2,4,7,3,1,I could make more complex loops for my games
2121,4/10/2025 9:03,4/10/2025 9:03,https://developer.mozilla.org/,6,2,4,3,1,5,7,i prefer lower level tech than adding decorators bs
2122,4/10/2025 9:04,4/10/2025 9:04,https://developer.mozilla.org/,7,6,5,1,4,3,2,"I am CONSTANTLY needing the position information from colossal JSON files for error reporting. And right now, I have no way to provide that. So we just have to generate mysterious errors in the log files. This is why I no longer have any hair. Please save me from this terrible fate. Maybe I can even regrow my hair."
2123,4/10/2025 9:04,4/10/2025 9:04,https://developer.mozilla.org/,4,3,6,2,1,7,5,
2124,4/10/2025 9:05,4/10/2025 9:05,https://developer.mozilla.org/,1,7,3,6,2,5,4,
2125,4/10/2025 9:08,4/10/2025 9:08,https://developer.mozilla.org/,7,1,4,6,3,5,2,I appreciated JavaScript for frontend development.
2126,4/10/2025 9:11,4/10/2025 9:11,https://developer.mozilla.org/,,,,,,,,
2127,4/10/2025 9:12,4/10/2025 9:12,https://developer.mozilla.org/,7,2,1,6,3,5,4,Deferred Module Execution: Being able to defer execution of libraries will give me more control over startup loads and the environment variables available to the library.
2128,4/10/2025 9:13,4/10/2025 9:13,https://developer.mozilla.org/,,,,,1,2,,
2129,4/10/2025 9:16,4/10/2025 9:16,https://developer.mozilla.org/,2,5,7,1,4,6,3,
2130,4/10/2025 9:18,4/10/2025 9:18,https://developer.mozilla.org/,3,6,1,5,2,7,4,
2131,4/10/2025 9:20,4/10/2025 9:20,https://developer.mozilla.org/,2,4,1,3,7,6,5,
2132,4/10/2025 9:22,4/10/2025 9:22,https://developer.mozilla.org/,4,3,6,7,2,1,5,"Joint iteration is something I run into fairly frequently and have to resort to hacks to work around. Source phase imports sounds like a nice refinement of the worker api, which would improve the ability to safely type the postmessage api exposed by the worker."
2133,4/10/2025 9:29,4/10/2025 9:29,https://developer.mozilla.org/,,,,,,,,
2134,4/10/2025 9:29,4/10/2025 9:29,https://developer.mozilla.org/,1,6,7,5,4,3,2,"Decorators would allow functions to be timed, debugged, and such."
2135,4/10/2025 9:31,4/10/2025 9:31,https://developer.mozilla.org/,,,,,,,,
2136,4/10/2025 9:31,4/10/2025 9:31,https://developer.mozilla.org/,5,4,6,3,7,2,1,
2137,4/10/2025 9:33,4/10/2025 9:33,https://developer.mozilla.org/,7,6,1,2,5,3,4,
2138,4/10/2025 9:34,4/10/2025 9:34,https://developer.mozilla.org/,1,7,5,2,6,3,4,"Having decorators - wrapper around code blocks - would help getting cleaner code. E.g. it would be easy to use memorizing decorators to cache the result of an operation, to use timing decorators to measure the execution time of a method, to use logging decorators to log the output and/or input of methods and so on...."
2139,4/10/2025 9:35,4/10/2025 9:35,https://developer.mozilla.org/,,3,2,,,1,,
2140,4/10/2025 9:43,4/10/2025 9:43,https://developer.mozilla.org/,,1,2,4,3,,,
2141,4/10/2025 9:46,4/10/2025 9:46,https://developer.mozilla.org/,6,3,1,7,2,5,4,"JS module imports have caused me numerous headaches; this would unify the mental model of how and when they occur (in practice, for most dependent code)."
2142,4/10/2025 9:47,4/10/2025 9:47,https://developer.mozilla.org/,1,6,7,4,5,3,2,I like decorators!
2143,4/10/2025 9:48,4/10/2025 9:48,https://developer.mozilla.org/,1,4,6,5,7,2,3,
2144,4/10/2025 9:48,4/10/2025 9:48,https://developer.mozilla.org/,,,,,,,,advance tools.
2145,4/10/2025 9:49,4/10/2025 9:49,https://developer.mozilla.org/,7,3,4,6,5,2,1,
2146,4/10/2025 9:53,4/10/2025 9:53,https://developer.mozilla.org/,2,6,5,1,7,4,3,
2147,4/10/2025 9:54,4/10/2025 9:54,https://developer.mozilla.org/,6,4,5,7,3,1,2,
2148,4/10/2025 9:55,4/10/2025 9:55,https://developer.mozilla.org/,5,7,1,3,2,4,6,Mainly thinking about how this aligns with my SvelteKit projects in terms of how I load components and work with data via form actions.
2149,4/10/2025 9:58,4/10/2025 9:58,https://developer.mozilla.org/,1,3,5,4,2,6,7,
2150,4/10/2025 10:01,4/10/2025 10:01,https://developer.mozilla.org/,1,6,5,7,2,3,4,
2151,4/10/2025 10:02,4/10/2025 10:02,https://developer.mozilla.org/,,,,3,4,1,2,
2152,4/10/2025 10:06,4/10/2025 10:06,https://developer.mozilla.org/,,,,,,,,
2153,4/10/2025 10:11,4/10/2025 10:11,https://developer.mozilla.org/,7,2,3,4,1,5,6,I dont know
2154,4/10/2025 10:16,4/10/2025 10:16,https://developer.mozilla.org/,4,1,5,3,2,7,6,The first 3 have a bigger impact on things I already use. I am excited about the flexibility Decorators may introduce.
2155,4/10/2025 10:19,4/10/2025 10:19,https://developer.mozilla.org/,1,,3,,,2,,Decorators are something I've used in MANY projects in multiple languages to make annotations on functions (and sometimes other variable types) clearer and more readable.
2156,4/10/2025 10:23,4/10/2025 10:23,https://developer.mozilla.org/,6,7,5,3,4,1,2,Theses options help me to choose new concept because am a fresh developer 
2157,4/10/2025 10:24,4/10/2025 10:24,https://developer.mozilla.org/,1,,,,,,,
2158,4/10/2025 10:30,4/10/2025 10:30,https://developer.mozilla.org/,1,6,7,4,5,2,3,"Prioritizing most commonly used operations first, to reduce boilerplate."
2159,4/10/2025 10:32,4/10/2025 10:32,https://developer.mozilla.org/,,3,1,,4,,2,
2160,4/10/2025 10:33,4/10/2025 10:33,https://developer.mozilla.org/,,,,,,,,
2161,4/10/2025 10:43,4/10/2025 10:43,https://developer.mozilla.org/,3,5,2,4,1,6,7,being able to import webassembly modules sounds cool
2162,4/10/2025 10:43,4/10/2025 10:43,https://developer.mozilla.org/,1,5,4,2,3,6,7,
2163,4/10/2025 10:44,4/10/2025 10:44,https://developer.mozilla.org/,6,1,2,7,5,3,4,
2164,4/10/2025 11:04,4/10/2025 11:04,https://developer.mozilla.org/,1,4,7,2,3,5,6,
2165,4/10/2025 11:06,4/10/2025 11:06,https://developer.mozilla.org/,4,3,1,5,2,6,7,"Help web applications load faster improving application & software usability for clients, especially clients on older hardware."
2166,4/10/2025 11:13,4/10/2025 11:13,https://developer.mozilla.org/,1,4,3,2,5,6,7,I've used decorators in Java and they allow easily adding functionality without too much code.
2167,4/10/2025 11:19,4/10/2025 11:19,,1,,,,,,,
2168,4/10/2025 11:30,4/10/2025 11:30,https://developer.mozilla.org/,5,7,3,4,6,2,1,"Iterators are op, so is deferring module loading and json parsing. everything else is a bizarre unknown to me"
2169,4/10/2025 11:58,4/10/2025 11:58,https://developer.mozilla.org/,4,6,5,1,7,2,3,Being able to parse bigint from JSON would make handling 64-bit numbers in a cross-language way much easier
2170,4/10/2025 12:28,4/10/2025 12:28,https://developer.mozilla.org/,,,,,,,,
2171,4/10/2025 13:33,4/10/2025 13:33,https://developer.mozilla.org/,,,,,,,,I need all the help I can get to maximize speed and performance of my web applications!
2172,4/10/2025 14:11,4/10/2025 14:11,https://developer.mozilla.org/,,,,,,,,
2173,4/10/2025 15:01,4/10/2025 15:01,https://developer.mozilla.org/,7,1,6,5,2,4,3,"Enhanced support for modules in both ESM and static/local scripts would be a game changer for developing PWAs. It would eliminate the hassle of constantly resetting and setting up a localhost server for each test. What we need is a strict yet flexible system that allows specific local modular scripts to run without a server—streamlining iterative development for offline fallbacks and seamless front-end integration with JS modules.  In essence, enabling the use of import or require in non-Node.js scripts—without running into errors like ""can only declare at toplevel of modules,"" ""unexpected export,"" or CORS issues (even with type=""module"")—would break free from the current limitations of JS module structures. This would allow developers to include modules in regular scripts residing in the same directory without having to designate every script as a module.  Furthermore, bundling more code directly into the app at deployment would reduce network delays and minimize vulnerabilities, leading to faster, more secure applications. This approach not only enhances performance and offline capabilities by leveraging client-side resources but also reduces complexity for static sites by removing the need for elaborate server configurations and build steps.  Additionally, by cutting out the constant need for server setups, developers can iterate and prototype much more rapidly, with code changes immediately available for testing. This streamlined process also offers more granular control over caching strategies, further mitigating issues like excessive reloading or cache invalidation common in server-dependent module bundling.  All these factors together promise a more efficient, resilient, and secure development workflow for modern web applications."
2174,4/10/2025 16:14,4/10/2025 16:14,https://developer.mozilla.org/,4,6,7,5,3,2,1,
2175,4/10/2025 16:58,4/10/2025 16:58,https://developer.mozilla.org/,,,,,,,,
2176,4/10/2025 20:37,4/10/2025 20:37,https://developer.mozilla.org/,1,6,7,2,5,3,4,Decorators would make javascript easier to read
2177,4/10/2025 22:45,4/10/2025 22:45,https://developer.mozilla.org/,4,6,3,1,2,5,7,
2178,4/10/2025 22:56,4/10/2025 22:56,https://developer.mozilla.org/,1,5,7,6,4,2,3,
2179,4/10/2025 22:58,4/10/2025 22:58,https://developer.mozilla.org/,2,,1,,,,,
2180,4/11/2025 0:37,4/11/2025 0:37,https://developer.mozilla.org/,,,,,,,,
2181,4/11/2025 0:48,4/11/2025 0:48,https://developer.mozilla.org/,,,,1,,,,
2182,4/11/2025 0:59,4/11/2025 0:59,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,4,6,3,5,7,1,2,"tbh I believe that the two iterator changes would be tremendously useful and even though there are existing libs for this, it seems to be way less work to implement than any of the other choices."
2183,4/11/2025 1:40,4/11/2025 1:40,https://developer.mozilla.org/,2,4,7,3,6,1,5,
2184,4/11/2025 1:51,4/11/2025 1:51,https://developer.mozilla.org/,1,6,5,3,7,4,2,
2185,4/11/2025 1:59,4/11/2025 1:59,https://developer.mozilla.org/,7,6,4,1,3,2,5,
2186,4/11/2025 2:57,4/11/2025 2:57,https://developer.mozilla.org/,7,5,3,1,4,6,2,
2187,4/11/2025 3:08,4/11/2025 3:08,https://developer.mozilla.org/,,,,,,,,I 'm not a developer; my knowledge of Java-Script is not sufficient to complete the ranking.
2188,4/11/2025 3:36,4/11/2025 3:36,https://developer.mozilla.org/,1,4,2,5,3,7,6,
2189,4/11/2025 3:56,4/11/2025 3:56,https://developer.mozilla.org/,1,2,6,3,4,5,7,
2190,4/11/2025 5:16,4/11/2025 5:16,https://developer.mozilla.org/,7,4,5,2,6,1,3,
2191,4/11/2025 6:04,4/11/2025 6:04,https://developer.mozilla.org/,1,3,5,4,2,6,7,"Having decorators will help me reduce boilerplate code, develop faster and gain some added flexibility"
2192,4/11/2025 7:16,4/11/2025 7:16,https://developer.mozilla.org/,1,2,6,4,7,5,3,
2193,4/11/2025 7:53,4/11/2025 7:53,https://developer.mozilla.org/,3,5,4,6,7,2,1,
2194,4/11/2025 9:22,4/11/2025 9:22,https://developer.mozilla.org/,,,,1,,,2,
2195,4/11/2025 11:19,4/11/2025 11:19,https://developer.mozilla.org/,1,2,,,,,,
2196,4/11/2025 12:19,4/11/2025 12:19,https://developer.mozilla.org/,,,,,,,,
2197,4/11/2025 12:45,4/11/2025 12:45,https://developer.mozilla.org/,1,3,4,7,2,5,6,
2198,4/11/2025 14:43,4/11/2025 14:43,https://developer.mozilla.org/,3,6,7,4,5,2,1,Concatenation is a useful operation and it's always nice to not have to implement it yourself or use a library.
2199,4/11/2025 15:17,4/11/2025 15:17,https://developer.mozilla.org/,,,,,,,,
2200,4/11/2025 15:55,4/11/2025 15:55,https://developer.mozilla.org/,,1,,,,,,"It wouldn't help me personally; it was the only new feature that seemed potentially reasonable. (The other features all seem to be design mistakes: creating new language constructs to handle complexity that should be handled by the application code, not the underlying JavaScript language. I would rather JavaScript be a simple set of tools that developers can use to build complicated things. Moving things like decorators into the underlying JavaScript is a huge mistake, in my opinion.)"
2201,4/11/2025 16:12,4/11/2025 16:12,https://developer.mozilla.org/,1,4,2,5,3,6,7,
2202,4/11/2025 16:33,4/11/2025 16:33,https://developer.mozilla.org/,,3,,1,,,2,
2203,4/11/2025 17:33,4/11/2025 17:33,https://developer.mozilla.org/,1,,,,,,,
2204,4/11/2025 18:23,4/11/2025 18:23,https://developer.mozilla.org/,,,1,2,,3,,
2205,4/11/2025 18:36,4/11/2025 18:36,https://developer.mozilla.org/,7,3,2,1,4,5,6,"JSON serialization is a major pain point in vanilla JS, adding this feature would reduce the need for external libraries or custom parser code (if trying to avoid npm in a simple project)."
2207,4/11/2025 23:57,4/11/2025 23:57,https://developer.mozilla.org/,2,,,,1,,,am just learning need help
2208,4/12/2025 2:18,4/12/2025 2:18,https://developer.mozilla.org/,7,2,3,4,1,6,5,
2209,4/12/2025 2:19,4/12/2025 2:19,https://developer.mozilla.org/,,,,,,,,
2210,4/12/2025 3:24,4/12/2025 3:24,https://developer.mozilla.org/,1,5,3,6,4,7,2,"I use Nestjs which uses Decorators a lot. Besides, I should be a baked into the language by now. "
2211,4/12/2025 4:17,4/12/2025 4:17,https://developer.mozilla.org/,1,6,7,4,5,2,3,"Priority over developer source code performance and features, instead of tools or engines."
2212,4/12/2025 6:03,4/12/2025 6:03,https://developer.mozilla.org/,7,5,4,1,2,3,6,
2213,4/12/2025 7:20,4/12/2025 7:20,https://developer.mozilla.org/,7,2,1,6,5,4,3,"Module support has been stabilizing over the last few years, though is still a little shaky in parts.  Anything that can be done to rationalize and normalize module support across pages (HTML and XHTML) and workers (of all sorts) would be welcome."
2214,4/12/2025 10:16,4/12/2025 10:16,https://developer.mozilla.org/,1,5,7,4,2,3,6,i really like decorating my code.
2215,4/12/2025 10:17,4/12/2025 10:17,https://survey.alchemer.com/s3/8234511/MDN-javascript-proposals-2025,1,,2,,,,,
2216,4/12/2025 15:23,4/12/2025 15:23,https://developer.mozilla.org/,7,2,1,5,6,3,4,"Not sure, all of them sound like a solution to a niche/edge case problem I never encountered (yet)."
2217,4/12/2025 15:52,4/12/2025 15:52,https://developer.mozilla.org/,4,1,3,5,2,7,6,We are still far away from proper imports. Specially in the browser.  Decorators are a must. I don't like them. But they are being used everywhere through typescript. We need native support due to performance reasons
2219,4/14/2025 1:59,4/14/2025 1:59,https://developer.mozilla.org/,4,6,5,3,7,1,2,
2221,4/14/2025 6:41,4/14/2025 6:41,https://developer.mozilla.org/,4,7,5,1,6,3,2,
2222,4/15/2025 1:51,4/15/2025 1:51,https://developer.mozilla.org/,6,5,7,1,4,3,2,
2223,4/15/2025 6:20,4/15/2025 6:20,https://developer.mozilla.org/,1,6,7,4,5,2,3,
